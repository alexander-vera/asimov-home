{"version":3,"sources":["serviceWorker.js","Constants.js","controllers/react-auth0-spa.js","controllers/history.js","navegation/home/constants.js","controllers/utils.js","controllers/session.js","components/customcard/customcard.js","components/customform/customfield.js","components/customform/customReduxForm.js","components/custombutton/button.js","components/customform/customform.js","components/table/table.js","navegation/sector/constants.js","navegation/sector/reducer.js","navegation/sector/selectors.js","navegation/sector/component.js","navegation/sector/actions.js","navegation/sector/saga.js","components/breadcrumb/breadcrumb.js","navegation/sector/index.js","navegation/nomatch/reducer.js","navegation/nomatch/constants.js","navegation/nomatch/actions.js","navegation/nomatch/saga.js","navegation/nomatch/index.js","navegation/about/constant.js","navegation/about/index.js","components/sidebar/constants.js","components/sidebar/navitem.js","components/sidebar/sidenav.js","components/sidebar/sidebar.js","navegation/profile/index.js","navegation/profile/constant.js","navegation/search/constants.js","navegation/search/index.js","navegation/bases/selectors.js","navegation/bases/constants.js","navegation/bases/component.js","navegation/bases/reducer.js","navegation/bases/actions.js","navegation/bases/saga.js","navegation/bases/index.js","navegation/addresses/selectors.js","navegation/addresses/constants.js","navegation/addresses/component.js","navegation/addresses/reducer.js","navegation/addresses/actions.js","navegation/addresses/saga.js","navegation/addresses/index.js","navegation/zones/selectors.js","navegation/zones/constants.js","navegation/zones/component.js","navegation/zones/reducer.js","navegation/zones/actions.js","navegation/zones/saga.js","navegation/zones/index.js","navegation/types/selectors.js","navegation/types/constants.js","navegation/types/component.js","navegation/types/reducer.js","navegation/types/actions.js","navegation/types/saga.js","navegation/types/index.js","navegation/locations/selectors.js","navegation/locations/constants.js","navegation/locations/component.js","navegation/locations/reducer.js","navegation/locations/actions.js","navegation/locations/saga.js","navegation/locations/index.js","navegation/attributes/selectors.js","navegation/attributes/constants.js","navegation/attributes/component.js","navegation/attributes/reducer.js","navegation/attributes/actions.js","navegation/attributes/saga.js","navegation/attributes/index.js","navegation/workers/selectors.js","navegation/workers/constants.js","navegation/workers/component.js","navegation/workers/reducer.js","navegation/workers/actions.js","navegation/workers/saga.js","navegation/workers/index.js","navegation/status/selectors.js","navegation/status/constants.js","navegation/status/component.js","navegation/status/reducer.js","navegation/status/actions.js","navegation/status/saga.js","navegation/status/index.js","components/navbar/navbar.js","navegation/home/index.js","index.js"],"names":["Boolean","window","location","hostname","match","AUTH0_CLIENT_ID","process","PATH_BASE","PATH_API","DEFAULT_REDIRECT_CALLBACK","history","replaceState","document","title","pathname","Auth0Context","React","createContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","getIdTokenClaims","tokenClaim","token","__raw","roles","AUTH0_NAMESPACE","sessionStorage","setItem","JSON","stringify","initAuth0","loginWithPopup","params","console","error","Provider","value","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","createBrowserHistory","ITEMS","path","icon","faUser","key","buttonLabel","description","type","utils","arr1","arr2","finalArray","forEach","e1","e2","push","auth","auth0","Auth0","domain","clientID","redirectUri","audience","responseType","scope","loginCallback","logoutCallback","userProfile","authFlag","authStatus","this","idToken","idTokenPayload","clearSession","localStorage","clear","localLogout","loggedIn","getItem","attribute","userSession","parse","userRoles","currentRoles","getUserRoles","length","compareArrays","returnTo","CustomCard","handleClick","props","onItemClick","items","Accordion","className","defaultActiveKey","map","item","role","picture","accordion","hasPermision","Card","Header","Toggle","as","Button","variant","eventKey","Image","src","roundedCircle","Title","Collapse","Body","Text","onClick","to","Component","CustomField","onChange","e","targetValue","target","setState","fieldValue","fieldName","name","onBlur","state","updateAction","onToggleChange","targetName","onFilterValue","selectInput","typeForm","options","label","placeholder","disable","formControl","customKey","TextField","disabled","Input","rows","i","Form","Check","id","Switch","size","checked","Select","MenuItem","nextProps","replace","toLowerCase","reduxForm","form","destroyOnUnmount","formName","dataObject","field","j","InputGroup","hint","CustomButton","ButtonGroup","color","aria-label","button","k","style","CustomForm","formTitle","values","buttons","connect","storeState","componentProps","formData","CustomTable","setOrder","column","sense","ordered","orderTable","setOpen","position","open","subObject","subRow","headers","onSelectRow","subLabel","childObject","childLabel","filterTable","totalItems","paginator","TableContainer","component","Paper","Table","striped","bordered","hover","responsive","TableHead","TableRow","head","TableCell","Fragment","faArrowUp","faArrowDown","TableBody","faChevronUp","faChevronDown","Object","keys","tableCell","faThumbsUp","faThumbsDown","paddingBottom","paddingTop","colSpan","in","timeout","unmountOnExit","Box","TablePagination","rowsPerPageOptions","count","rowsPerPage","page","onChangePage","SELECT_SECTOR_INIT","BREAD_PATH","faHome","faUsers","SECTOR_FORMS","initialState","age","email","users","userHeaders","selectedSector","deleteSuccess","formSector","totalSectors","reducer","action","newState","payload","sectors","data","newFormObject","getSectors","getSelectedSector","getDeleteSector","getFormSector","getTotalSectors","createStructuredSelector","ComponentSector","deleteSector","handlerSave","handlerClean","handlerRemove","handlerSafe","selectSector","removeSector","updateAttributes","updatedSector","updateSector","cancelSector","filterSectors","Alert","message","emprty","Spinner","animation","dispatch","onAgeUp","onAgeDown","sector","prop","updateSectorError","deleteSectorError","getSectorsError","orderSector","filterSector","watchSector","put","urlSectors","call","fetch","method","response","status","json","successResponse","errorResponse","is_dangerous","sectorToUpdate","getResponse","callBody","body","sort","b","filtered","filter","itemFiltered","keyToFilter","toString","takeLatest","CustomBreadcrumb","route","current","Breadcrumbs","Typography","rootReducer","combineReducers","formReducer","formStore","createStore","sagaMiddleware","createSagaMiddleware","store","composeWithDevTools","applyMiddleware","run","SectorsPage","Container","zones","zoneHeaders","getZoneError","getZonesSaga","watchZones","NoMatch","faVectorSquare","faGripHorizontal","faBezierCurve","About","isUserInSession","css","dropdown","faBookReader","faBookDead","faBookMedical","faBookmark","faAddressBook","faFileAlt","ITEM_TITLE","faAngleDoubleRight","active","ITEM_LOGOUT","faSignOutAlt","getUserItem","faUserCircle","NavItem","onLogout","whiteClass","found","Nav","Item","Link","href","SideNav","activePath","getUserAttribute","activeKey","onSelect","SideBar","Profile","userPicture","SEARCH_FORM","faSearch","SEARCH_RESULT","componentName","Pagination","First","Prev","Ellipsis","Next","Last","getBases","bases","getSelectedBase","selectedBase","getDeleteBase","getFormBase","formBase","getTotalBases","totalBases","SELECT_BASE_INIT","BASE_FORMS","ComponentBase","deleteBase","baseHeaders","selectBase","removeBase","updatedBase","updateBase","cancelBase","orderBase","filterBase","base","updateBaseError","deleteBaseError","getBasesError","watchBase","urlBases","urlSectores","responseSectores","successSectores","zone","baseToUpdate","baseId","BasePage","getAddresses","addresses","getSelectedAddress","selectedAddress","getDeleteAddress","getFormAddress","formAddress","SELECT_ADDRESS_INIT","ADDRESS_FORMS","ComponentAddress","deleteAddress","addressHeaders","selectAddress","removeAddress","updatedAddress","updateAddress","cancelAddress","address","updateAddressError","deleteAddressError","getAddressesError","watchAddress","urlAddresses","latitude","longitude","addressToUpdate","addressId","addressLatitude","parseInt","addressLongitud","AddressPage","getZones","getSelectedZone","selectedZone","getDeleteZone","getFormZone","formZone","getTotalZones","totalZones","SELECT_ZONE_INIT","ZONE_FORMS","ComponentZone","deleteZone","selectZone","removeZone","updatedZone","updateZone","cancelZone","filterZones","updateZoneError","deleteZoneError","getZonesError","orderZone","filterZone","watchZone","urlZones","route_time","zoneToUpdate","zoneId","zoneTime","sectors_ids","ZonePage","getTypes","types","getSelectedType","selectedType","getDeleteType","getFormType","formType","getTotalTypes","totalTypes","SELECT_TYPE_INIT","TYPE_FORMS","ComponentType","deleteType","typeHeaders","selectType","removeType","updatedType","updateType","cancelType","orderType","filterType","typeValue","updateTypeError","deleteTypeError","getTypesError","watchType","urlTypes","typeToUpdate","typeId","TypePage","getLocations","locations","getSelectedLocation","selectedLocation","getDeleteLocation","getFormLocation","formLocation","getTotalLocations","totalLocations","SELECT_LOCATION_INIT","LOCATION_FORMS","ComponentLocation","deleteLocation","locationHeaders","selectLocation","removeLocation","updatedLocation","updateLocation","cancelLocation","orderLocation","filterLocation","updateLocationError","deleteLocationError","getLocationsError","watchLocation","urlLocations","locationToUpdate","locationId","LocationPage","getAttributes","attributes","getSelectedAttribute","selectedAttribute","getDeleteAttribute","getFormAttribute","formAttribute","getTotalAttributes","totalAttributes","SELECT_ATTRIBUTE_INIT","ATTRIBUTE_FORMS","ComponentAttribute","deleteAttribute","attributeHeaders","selectAttribute","removeAttribute","updatedAttribute","updateAttribute","cancelAttribute","orderAttribute","filterAttribute","updateAttributeError","deleteAttributeError","getAttributesError","watchAttribute","urlAttributes","attributeToUpdate","attributeId","AttributePage","getWorkers","workers","getSelectedWorker","selectedWorker","getDeleteWorker","getFormWorker","formWorker","getTotalWorkers","totalWorkers","SELECT_WORKER_INIT","WORKER_FORMS","ComponentWorker","deleteWorker","workerHeaders","selectWorker","removeWorker","updateWorkers","updatedWorker","updateWorker","cancelWorker","orderWorker","filterWorker","worker","updateWorkerError","deleteWorkerError","getWorkersError","watchWorker","urlWorkers","workerToUpdate","workerId","WorkerPage","getStatus","getSelectedStatu","selectedStatu","getDeleteStatu","getFormStatu","formStatu","getTotalStatus","totalStatus","SELECT_STATU_INIT","STATU_FORMS","ComponentStatu","deleteStatu","statuHeaders","selectStatu","removeStatu","updateStatus","updatedStatu","updateStatu","cancelStatu","orderStatu","filterStatu","statu","statuses","updateStatuError","deleteStatuError","getStatusError","watchStatu","urlStatus","log","statuToUpdate","statuId","StatuPage","CustomNavBar","exact","User","Home","Search","BasesPage","useContext","ReactDOM","render","client_id","redirect_uri","origin","targetUrl","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.095a1623.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const AUTH0_CLIENT_ID = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\nexport const AUTH0_DOMAIN = process.env.REACT_APP_AUTH0_DOMAIN;\r\nexport const AUTH0_SECRET = process.env.REACT_APP_AUTH0_SECRET;\r\nexport const AUTH0_AUDIENCE = process.env.REACT_APP_AUTH0_AUDIENCE;\r\nexport const AUTH0_NAMESPACE = process.env.REACT_APP_AUTH0_NAMESPACE;\r\nexport const PATH_BASE = process.env.REACT_APP_PATH_BASE;\r\nexport const PATH_API = process.env.REACT_APP_PATH_API;\r\n\r\n// API\r\nexport const GET_SECTORS_API = 'locations/sectors';\r\nexport const GET_ZONES_API = 'locations/zones';\r\nexport const GET_BASES_API = 'locations/bases';\r\nexport const GET_ADDRESSES_API = 'locations/addresses';\r\nexport const GET_LOCATIONS_API = 'locations/locations';\r\nexport const GET_TYPES_API = 'locations/types';\r\nexport const GET_ATTRIBUTES_API = 'orders/attributes';\r\nexport const GET_WORKERS_API = 'units/workers';\r\nexport const GET_STATUS_API = 'units/statuses';","// src/react-auth0-spa.js\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\nimport { AUTH0_NAMESPACE } from '../Constants';\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n    window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n    children,\r\n    onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n    ...initOptions\r\n}) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState();\r\n    const [user, setUser] = useState();\r\n    const [auth0Client, setAuth0] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n    const initAuth0 = async () => {\r\n        const auth0FromHook = await createAuth0Client(initOptions);\r\n        setAuth0(auth0FromHook);\r\n\r\n        if (window.location.search.includes(\"code=\") &&\r\n            window.location.search.includes(\"state=\")) {\r\n            const { appState } = await auth0FromHook.handleRedirectCallback();\r\n            onRedirectCallback(appState);\r\n        }\r\n\r\n        const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n        setIsAuthenticated(isAuthenticated);\r\n\r\n        if (isAuthenticated) {\r\n            const user = await auth0FromHook.getUser();\r\n            const tokenClaim = await auth0FromHook.getIdTokenClaims();\r\n            const { __raw: token } = tokenClaim\r\n            const roles = tokenClaim[AUTH0_NAMESPACE+'/roles'];\r\n\r\n            sessionStorage.setItem('user.session', JSON.stringify(tokenClaim));\r\n            sessionStorage.setItem('user.token', token);\r\n            sessionStorage.setItem('user.roles', roles);\r\n\r\n            setUser(user);\r\n        }\r\n\r\n        setLoading(false);\r\n        };\r\n        initAuth0();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const loginWithPopup = async (params = {}) => {\r\n        setPopupOpen(true);\r\n        try {\r\n        await auth0Client.loginWithPopup(params);\r\n        } catch (error) {\r\n        console.error(error);\r\n        } finally {\r\n        setPopupOpen(false);\r\n        }\r\n        const user = await auth0Client.getUser();\r\n        setUser(user);\r\n        setIsAuthenticated(true);\r\n    };\r\n\r\n    const handleRedirectCallback = async () => {\r\n        setLoading(true);\r\n        await auth0Client.handleRedirectCallback();\r\n        const user = await auth0Client.getUser();\r\n        setLoading(false);\r\n        setIsAuthenticated(true);\r\n        setUser(user);\r\n    };\r\n    return (\r\n        <Auth0Context.Provider\r\n        value={{\r\n            isAuthenticated,\r\n            user,\r\n            loading,\r\n            popupOpen,\r\n            loginWithPopup,\r\n            handleRedirectCallback,\r\n            getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n            loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n            getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n            getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n            logout: (...p) => auth0Client.logout(...p)\r\n        }}\r\n        >\r\n        {children}\r\n        </Auth0Context.Provider>\r\n    );\r\n};","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();","import { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nexport const FILLER_TEXT = `But I must `;\r\n\r\nexport const ITEMS = [\r\n    {\r\n        path: '/customNav',\r\n        title: 'Bienvenido',\r\n        icon: faUser,\r\n        key: 1,\r\n        buttonLabel: 'Iniciar sesion',\r\n        description: 'Para empezar a trabajar inicie sesión',\r\n        type: 'button'\r\n    }\r\n]\r\n","class Utilities {\r\n    compareArrays(arr1, arr2) {\r\n        const finalArray = [];\r\n\r\n        arr1.forEach((e1) => arr2.forEach((e2) => {\r\n            if(e1 === e2) {\r\n                finalArray.push(e1);\r\n            }\r\n        }));\r\n\r\n        return finalArray;\r\n    }\r\n}\r\n\r\nconst utils = new Utilities();\r\nexport default utils;","import { AUTH0_DOMAIN, AUTH0_CLIENT_ID, AUTH0_AUDIENCE, PATH_BASE } from '../Constants';\r\nimport * as Auth0 from \"auth0-js\";\r\nimport utils from './utils';\r\n\r\nclass LocalAuth0 {\r\n    auth0 = new Auth0.WebAuth({\r\n        domain: AUTH0_DOMAIN,\r\n        clientID: AUTH0_CLIENT_ID,\r\n        redirectUri: PATH_BASE,\r\n        audience: AUTH0_AUDIENCE,\r\n        responseType: \"id_token token\",\r\n        scope: \"openid profile email\"\r\n    });\r\n\r\n    loginCallback = () => {};\r\n    logoutCallback = () => {};\r\n\r\n    userProfile = null;\r\n    authFlag = \"isLoggedIn\";\r\n    authStatus = this.isAuthenticated // we will create isAuthenticated soon\r\n        ? \"init_with_auth_flag\"\r\n        : \"init_no_auth_flag\";\r\n    idToken = null;\r\n    idTokenPayload = null;\r\n\r\n    isAuthenticated() {\r\n        return localStorage.getItem(this.authFlag) === \"true\";\r\n    }\r\n\r\n    getUserAttribute(attribute) {\r\n        const userSession = JSON.parse(sessionStorage.getItem('user.session'));\r\n        if (userSession) {\r\n            return userSession[attribute];\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getUserRoles () {\r\n        let userRoles = [];\r\n        userRoles.push(sessionStorage.getItem('user.roles'));\r\n\r\n        return userRoles;\r\n    }\r\n\r\n    hasPermision (roles) {\r\n        const currentRoles = this.getUserRoles();\r\n\r\n        if(!roles || !roles.length) {\r\n            return true;\r\n        } else {\r\n            if(currentRoles && currentRoles.length) {\r\n                if(roles && roles.length) {\r\n                    const finalArray = utils.compareArrays(currentRoles, roles);\r\n                    return finalArray && finalArray.length;\r\n                }\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isUserInSession () {\r\n        return JSON.parse(sessionStorage.getItem('user.session')) ? true : false;\r\n    }\r\n\r\n    clearSession = () => {        \r\n        localStorage.clear();\r\n        sessionStorage.clear();\r\n        this.userProfile = null;\r\n    }\r\n\r\n    localLogout = () => {\r\n        localStorage.clear();\r\n        sessionStorage.clear();\r\n        this.userProfile = null;\r\n        this.logoutCallback({ loggedIn: false });\r\n    }\r\n\r\n    logout() {\r\n        this.localLogout();\r\n        this.auth0.logout({\r\n            returnTo: PATH_BASE,\r\n            clientID: AUTH0_CLIENT_ID\r\n        });\r\n    }\r\n}\r\n\r\nconst auth = new LocalAuth0();\r\nexport default auth;","import React, { Component } from 'react';\r\nimport { Card, Accordion } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport './customcard.css';\r\nimport { Image, Button } from 'react-bootstrap';\r\nimport auth from '../../controllers/session';\r\n\r\nexport default class CustomCard extends Component {\r\n    handleClick = () => {\r\n        const { path, onItemClick } = this.props;\r\n        onItemClick(path);\r\n    }\r\n\r\n    render() {\r\n        const { items, onItemClick } = this.props;\r\n\r\n        return (\r\n                <Accordion className='cards-wrapper' defaultActiveKey=\"0\">\r\n                {\r\n                items.map((item) => {\r\n                    const { title, description, path, icon, buttonLabel, key, type, role, picture, accordion } = item;   \r\n                    const found = auth.hasPermision(role);\r\n\r\n                    if (found) {\r\n                        return (\r\n                            <Card key={key}>                                \r\n                                <Card.Header>\r\n                                    { accordion ? \r\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={key}> \r\n                                        {   picture ?\r\n                                            <Image className='card-image' src={ picture } roundedCircle /> :\r\n                                            icon ? <FontAwesomeIcon className='card-icon' icon={icon} /> : false \r\n                                        }\r\n                                        <Card.Title>{title}</Card.Title>\r\n                                    </Accordion.Toggle>\r\n                                    :   <div className=\"header-wrapper\">\r\n                                            {   picture ?\r\n                                                <Image className='card-image' src={ picture } roundedCircle /> \r\n                                                : \r\n                                                icon ? <FontAwesomeIcon className='card-icon' icon={icon} /> : false \r\n                                            }\r\n                                            <Card.Title>{title}</Card.Title>\r\n                                        </div>\r\n                                }\r\n                                </Card.Header>\r\n                                { accordion ?\r\n                                    <Accordion.Collapse eventKey={key}>\r\n                                        <Card.Body>\r\n                                            <Card.Text> \r\n                                                {description}\r\n                                            </Card.Text>\r\n                                            { type && type === 'button' ? \r\n                                                <Button className='btn btn-primary ' onClick={onItemClick}>\r\n                                                    {buttonLabel}\r\n                                                </Button>\r\n                                                : \r\n                                                <Link to={path} className='sidebar-nav-link btn btn-primary '>\r\n                                                    {buttonLabel}\r\n                                                </Link>\r\n                                            }\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse> : \r\n                                    <Card.Body>\r\n                                        <Card.Text> \r\n                                            {description}\r\n                                        </Card.Text>\r\n                                        { type && type === 'button' ? \r\n                                            <Button className='btn btn-primary ' onClick={onItemClick}>\r\n                                                {buttonLabel}\r\n                                            </Button>\r\n                                            : \r\n                                            <Link to={path} className='sidebar-nav-link btn btn-primary '>\r\n                                                {buttonLabel}\r\n                                            </Link>\r\n                                        }\r\n                                    </Card.Body>\r\n                                }\r\n\r\n                            </Card>\r\n                        )\r\n                    }\r\n\r\n                    return false;\r\n                })\r\n            }\r\n            </Accordion>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Input, Select, Switch, MenuItem, TextField  } from '@material-ui/core';\r\n\r\nexport default class CustomField extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            fieldValue: props.value,\r\n            fieldName: props.name\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.fieldValue) {\r\n            this.setState({\r\n                fieldValue: nextProps.fieldValue,\r\n                fieldName: nextProps.fieldName\r\n            });\r\n        }\r\n    };\r\n    \r\n    onChange = (e) => {\r\n        let targetValue = e.target.value;\r\n\r\n        this.setState({\r\n            fieldValue: targetValue,\r\n            fieldName: e.target.name\r\n        })\r\n    };\r\n\r\n    onBlur = (e) => {\r\n        const { fieldValue, fieldName } = this.state;\r\n\r\n        this.props.updateAction({\r\n            fieldValue,\r\n            fieldName\r\n        })\r\n    };\r\n\r\n    onToggleChange = (e) => {\r\n        let targetValue = e.target.value;\r\n        const targetName = e.target.name;\r\n\r\n        targetValue = typeof targetValue === \"boolean\" ? targetValue : targetValue === \"true\";\r\n\r\n        this.setState({\r\n            fieldValue: !targetValue,\r\n            fieldName: targetName\r\n        })\r\n\r\n        this.props.updateAction({\r\n            fieldValue: !targetValue,\r\n            fieldName: targetName\r\n        })\r\n    }\r\n\r\n    onFilterValue = (e) => {\r\n        const { items } = this.props;\r\n        const targetValue = e.target.value;\r\n        const targetName = e.target.name;\r\n\r\n        this.setState({\r\n            fieldValue: targetValue,\r\n            fieldName: targetName\r\n        })\r\n\r\n        this.props.updateAction({\r\n            fieldValue: targetValue,\r\n            fieldName: targetName, \r\n            items: items\r\n        })\r\n    }\r\n\r\n    selectInput = (type, typeForm, options, value, label, placeholder, name, key, disable) => {\r\n        let formControl = false;\r\n        const customKey = `input-${label}-${key}`;\r\n        if (type === \"toggle\" && typeof value !== \"boolean\") {\r\n            value = value === \"true\";\r\n        }\r\n\r\n        switch (typeForm) {\r\n            case \"filter\":\r\n                formControl = \r\n                    <TextField \r\n                        className=\"custom-input\"\r\n                        key={customKey}  \r\n                        name={name} \r\n                        label={placeholder}\r\n                        value={value} \r\n                        type={type} \r\n                        onChange={this.onFilterValue}\r\n                        disabled={disable}\r\n                    />;\r\n                break;  \r\n            case \"area\":\r\n                formControl = \r\n                    <Input\r\n                        key={customKey} \r\n                        className=\"custom-input\" \r\n                        name={name} \r\n                        rows=\"3\" \r\n                        as=\"textarea\" \r\n                        label={label} \r\n                        type={type} \r\n                        value={value} \r\n                        onBlur={this.onBlur}\r\n                        onChange={this.onChange}\r\n                        disabled={disable}\r\n                    />;\r\n                break;    \r\n            case \"selections\":\r\n                formControl = \r\n                    <div className=\"check-control\"> \r\n                        {options.map((type, i) => (\r\n                            <Form.Check \r\n                                type={type.type}\r\n                                id={`${type.type}-${i}`}\r\n                                label={type.label}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                break;\r\n            case \"toggle\" :\r\n                formControl = \r\n                    <Switch \r\n                        size=\"medium\" \r\n                        checked={value}\r\n                        name={name}\r\n                        value={value} \r\n                        onChange={this.onToggleChange}\r\n                        disabled={disable}\r\n                    />;\r\n                return formControl;            \r\n            case \"select\":\r\n                formControl = \r\n                <Select\r\n                    name={name}\r\n                    key={customKey} \r\n                    as=\"select\"\r\n                    className=\"custom-input mr-sm-2\"\r\n                    id=\"inlineFormCustomSelect\"\r\n                    value={value} \r\n                    onBlur={this.onBlur}\r\n                    onChange={this.onChange}\r\n                    disabled={disable}\r\n                >\r\n                    {options.map((type, i) => {\r\n                        return (\r\n                            <MenuItem \r\n                                key={`option-${i}`}\r\n                                value={type.value}\r\n                                id={`option-${i}`}>\r\n                                    {type.label}\r\n                            </MenuItem>\r\n                        )\r\n                    })}\r\n                </Select>\r\n                break; \r\n            case \"multiple\":\r\n                \r\n                break;      \r\n            default:\r\n                formControl = \r\n                    <TextField \r\n                        className=\"custom-input\"\r\n                        key={customKey}  \r\n                        name={name} \r\n                        label={placeholder}\r\n                        value={value} \r\n                        type={type} \r\n                        onBlur={this.onBlur}\r\n                        onChange={this.onChange}\r\n                        disabled={disable}\r\n                    />;\r\n                break;\r\n        }\r\n\r\n        return formControl;\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            placeholder, \r\n            label, \r\n            type, \r\n            typeForm, \r\n            options,\r\n            key, \r\n            name,\r\n            disable \r\n        } = this.props;\r\n\r\n        const customKey = label ? label.replace(/\\s/g, \"\").toLowerCase() : \"\";\r\n        const { fieldValue } = this.state;\r\n\r\n        return (\r\n            <div key={customKey} className=\"form-custom-group\">\r\n                <label className=\"label-name\">\r\n                    <span className=\"content-name\">{label}</span>\r\n                </label>\r\n                { this.selectInput(type, typeForm, options, fieldValue, label, placeholder, name, key, disable) }\r\n            </div >\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { reduxForm } from 'redux-form';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\nimport CustomField from './customfield';\r\n\r\nconst CustomReduxForm = (props) => {\r\n  const { items, formName, dataObject, updateAction } = props;\r\n\r\n  return (\r\n        <Form key={`form-${formName}`} name={formName}>\r\n          { dataObject && items && items.map((field, j) => {\r\n              return <InputGroup key={j} className=\"form-custom-wrapper\">\r\n                          <CustomField\r\n                              id={j}\r\n                              label={field.label} \r\n                              hint={field.hint}\r\n                              type={field.type}\r\n                              typeForm={field.typeForm}\r\n                              value={dataObject[field.name]}\r\n                              options={field.options}\r\n                              disable={field.disable} \r\n                              placeholder={field.placeholder}\r\n                              updateAction={updateAction}\r\n                              name={field.name}\r\n                          />\r\n                      </InputGroup>\r\n          }\r\n        )}\r\n      </Form>\r\n  ) \r\n}\r\n\r\nexport default reduxForm({\r\n  form: \"customSector\",              // <------ same form name\r\n  destroyOnUnmount: false,     // <------ preserve form data\r\n})(CustomReduxForm)","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup } from '@material-ui/core';\r\n\r\n\r\nexport default class CustomButton extends Component {\r\n    render() {\r\n        const { items } = this.props;\r\n\r\n        return (\r\n            <div className=\"button-wrapper\"> \r\n                <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                    {\r\n                        items.map((button, k) => {\r\n                            return <Button\r\n                                        key={`button-${button.label}-${k}`} \r\n                                        variant={button.variant}\r\n                                        color={button.style}\r\n                                        type=\"submit\"\r\n                                        onClick={button.onClick}\r\n                                    >\r\n                                        {button.label}\r\n                                    </Button>\r\n                        })\r\n                    }  \r\n                </ButtonGroup>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport CustomReduxForm from './customReduxForm';\r\nimport CustomButton  from '../custombutton/button';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CustomForm extends Component {\r\n    render() {\r\n        const { items, formTitle, className, formName, values, buttons, updateAction } = this.props;\r\n\r\n        return (\r\n            <Card key={`card-${formName}`} className={className}>\r\n                <Card.Header>\r\n                    {formTitle}\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <CustomReduxForm items={items} formName={formName} dataObject={values} updateAction={updateAction} />\r\n                    <CustomButton items={buttons} />\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(storeState, componentProps) {\r\n    const { formData } = storeState;\r\n    return { formData };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CustomForm);","import React, { Component } from 'react';\r\nimport { \r\n    Table, \r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow, \r\n    Paper, \r\n    Collapse,\r\n    TablePagination,\r\n    Box\r\n} from '@material-ui/core/';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp, faThumbsDown, faChevronUp, faChevronDown, faArrowDown, faArrowUp} from \"@fortawesome/free-solid-svg-icons\";\r\nimport CustomButton  from '../custombutton/button';\r\nimport './table.css';\r\nimport CustomField from '../customform/customfield';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default class CustomTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: [],\r\n            ordered: []\r\n        }\r\n    }\r\n\r\n    setOrder = (column, items, sense) => {\r\n        const { ordered } = this.state;\r\n        const { orderTable } = this.props;\r\n\r\n        ordered[column] = !ordered[column];\r\n\r\n        this.setState({\r\n            ordered: ordered\r\n        })\r\n\r\n        orderTable ({ column, items, sense });\r\n    }\r\n\r\n    setOpen = (position) => {\r\n        const { open } = this.state;\r\n        const { items, subObject } = this.props;\r\n        const subRow = items[position];\r\n\r\n        if(open[position]) {\r\n            open[position] = false;\r\n        } else {\r\n            open[position] = subRow[subObject];\r\n        }\r\n        this.setState({\r\n            open: open\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const { \r\n            items, \r\n            headers, \r\n            className, \r\n            onSelectRow, \r\n            buttons, \r\n            subObject, \r\n            subLabel, \r\n            childObject,\r\n            childLabel,\r\n            orderTable,\r\n            filterTable,\r\n            totalItems,\r\n            paginator\r\n        } = this.props;\r\n        const { open, ordered } = this.state;\r\n\r\n        return (\r\n            <div className=\"custom-table_wrapper\">\r\n                <TableContainer className=\"custom-table_container\" component={Paper}>\r\n                { \r\n                    filterTable && \r\n                    <CustomField\r\n                        id=\"search-001\"\r\n                        type=\"text\"\r\n                        typeForm=\"filter\"\r\n                        placeholder=\"Filtrar\"\r\n                        updateAction={filterTable}\r\n                        name={\"filter\"}\r\n                        items={totalItems}\r\n                    />\r\n                }\r\n                <Table className={className} striped=\"true\" bordered=\"true\" hover=\"true\" responsive=\"true\"> \r\n                    <TableHead className=\"custom-table_head\">\r\n                        <TableRow className=\"custom-table_header\">\r\n                            {  \r\n                                headers && headers.map((head, i) => {\r\n                                return  (\r\n                                        <TableCell key={i}>\r\n                                            {\r\n                                                orderTable && \r\n                                                    <React.Fragment>\r\n                                                        { ordered[head.column] ?                                             \r\n                                                            <FontAwesomeIcon \r\n                                                                onClick={() => this.setOrder(head.column, items, -1)} \r\n                                                                className='table-icon' \r\n                                                                icon={faArrowUp} /> :\r\n                                                            <FontAwesomeIcon \r\n                                                                onClick={() => this.setOrder(head.column, items, 1)} \r\n                                                                className='table-icon' \r\n                                                                icon={faArrowDown} />\r\n                                                        }\r\n                                                    </React.Fragment>\r\n                                            }\r\n                                            <span className=\"header-title\">{head.label}</span>\r\n                                        </TableCell>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {\r\n                        items && items.map((item, j) => {\r\n                            return (\r\n                                <React.Fragment key={`frag-${j}`}>\r\n                                <TableRow className=\"custom-table_rows\" key={j}>\r\n                                    {   subObject && \r\n                                        <TableCell onClick={() => this.setOpen(j)}>\r\n                                            { open[j] ?\r\n                                                <FontAwesomeIcon className='table-icon' icon={faChevronUp} /> :\r\n                                                <FontAwesomeIcon className='table-icon' icon={faChevronDown} />\r\n                                            }\r\n                                        </TableCell>\r\n                                    }\r\n                                    {\r\n                                        item && Object.keys(item).map(e => {\r\n                                            let tableCell = <TableCell onClick={() => onSelectRow(item)} key={e}>{item[e]}</TableCell>\r\n                                            if (item[e] === true) {\r\n                                                tableCell = \r\n                                                    <TableCell onClick={() => onSelectRow(item)} key={e}>\r\n                                                        <FontAwesomeIcon className='table-icon' icon={faThumbsUp} />\r\n                                                    </TableCell>;\r\n                                            } else if (item[e] === false) {\r\n                                                tableCell = \r\n                                                    <TableCell onClick={() => onSelectRow(item)} key={e}>\r\n                                                        <FontAwesomeIcon className='table-icon' icon={faThumbsDown} />\r\n                                                    </TableCell>;\r\n                                            } else if (item[e] && typeof item[e] === 'object') {\r\n                                                tableCell = \"\";\r\n                                            }\r\n                                            return (tableCell);\r\n                                        })\r\n                                    }\r\n                                </TableRow>\r\n                                { subObject &&\r\n                                    <TableRow>\r\n                                        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                                            <Collapse in={open[j]} timeout=\"auto\" unmountOnExit>\r\n                                                {\r\n                                                    open[j] && open[j].length ? \r\n                                                    <Box className=\"custom-table_subtable\">\r\n                                                    <h3 className=\"sub-object_title\">\r\n                                                        <Link to={`/${subObject}`} className='table-link-title '>\r\n                                                            {subLabel}\r\n                                                        </Link>\r\n                                                    </h3>\r\n                                                    <CustomTable \r\n                                                        onSelectRow={false} \r\n                                                        className={`sub-object-${subObject}`} \r\n                                                        items={open[j]}\r\n                                                        buttons={[]} \r\n                                                        subObject={childObject}\r\n                                                        subLabel={childLabel}\r\n                                                        />\r\n                                                    </Box> : ''\r\n                                                }\r\n                                            </Collapse>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                }\r\n                                </React.Fragment>\r\n                            );\r\n                        })\r\n                    }\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n                { paginator ? \r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={3}\r\n                        rowsPerPage={2}\r\n                        page={1}\r\n                        onChangePage={false}\r\n                    />\r\n                : '' }\r\n\r\n                <CustomButton items={buttons} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { faHome, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const FILLER_TEXT = 'But I must';\r\n\r\nexport const STATE_AGE_UP_ASYNC = '@user/AGE_UP_ASYNC';\r\nexport const STATE_AGE_DOWN = '@user/AGE_DOWN';\r\nexport const STATE_GET_USER_ASYNC = '@user/GET_USER_ASYNC';\r\nexport const GET_USER_SUCCESS = '@user/GET_USER_SUCCESS';\r\nexport const GET_USER_ERROR = '@user/GET_USER_ERROR';\r\nexport const GET_SECTORS_ERROR = '@sector/GET_SECTORS_ERROR';\r\nexport const GET_SECTORS_SUCCESS = '@sector/GET_SECTORS_SUCCESS';\r\nexport const UPDATE_SECTOR_INIT = '@sector/UPDATE_SECTOR_INIT';\r\nexport const UPDATE_SECTOR_ERROR = '@sector/UPDATE_SECTOR_ERROR';\r\nexport const UPDATE_SECTOR_SUCCESS = '@sector/UPDATE_SECTOR_SUCCESS';\r\nexport const CANCEL_SECTOR_INIT = '@sector/CANCEL_SECTOR_INIT';\r\n\r\nexport const GET_SECTORS = '@sector/GET_SECTORS';\r\n\r\nexport const UPDATE_FIELD_ATTRIBUTE = '@form/UPDATE_FIELD_ATTRIBUTE';\r\n\r\nexport const SELECT_SECTOR_INIT = '@sector/SELECT_SECTORS_INIT';\r\nexport const SELECT_SECTOR_SUCCESS = '@sector/SELECT_SECTORS_SUCCESS';\r\nexport const SELECT_SECTOR_ERROR = '@sector/SELECT_SECTORS_ERROR';\r\n\r\nexport const DELETE_SECTOR_INIT = '@sector/DELETE_SECTOR_INIT';\r\nexport const DELETE_SECTOR_SUCCESS = '@sector/DELETE_SECTOR_SUCCESS';\r\nexport const DELETE_SECTOR_ERROR = '@sector/DELETE_SECTOR_ERROR';\r\n\r\nexport const FILTER_SECTOR_INIT = '@sector/FILTER_SECTOR_INIT';\r\nexport const FILTER_SECTOR_SUCCESS = '@bases/FILTER_SECTOR_SUCCESS';\r\nexport const FILTER_SECTOR_ERROR = '@bases/FILTER_SECTOR_ERROR';\r\n\r\nexport const ORDER_SECTOR_INIT = '@bases/ORDER_SECTOR_INIT';\r\nexport const ORDER_SECTOR_SUCCESS = '@bases/ORDER_SECTOR_SUCCESS';\r\nexport const ORDER_SECTOR_ERROR = '@bases/ORDER_SECTOR_ERROR';\r\n\r\nexport const ITEMS = [\r\n    {\r\n        path: '/sectors',\r\n        title: 'Gestión de sectores',\r\n        icon: faHome,\r\n        key: 1,\r\n        buttonLabel: 'Abrir',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt'\r\n    },\r\n    {\r\n        path: '/user',\r\n        title: 'Gestión de roles',\r\n        icon: faUsers,\r\n        key: 2,\r\n        buttonLabel: 'Abrir',\r\n        description: 'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium'\r\n    }\r\n]\r\n\r\nexport const BREAD_PATH = [\r\n    { path: \"/\", label: \"Inicio\" },\r\n    { path: \"/bases\", label: \"Bases\" },\r\n    { path: \"/zones\", label: \"Zonas\" },\r\n]\r\n\r\nexport const getSectorButton = (handlerSafe) => {\r\n    return [\r\n        {\r\n            label: \"Nuevo Sector\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            onClick: handlerSafe\r\n        }\r\n    ]\r\n}\r\n\r\nexport const getSectorActions = (handlerSave, handlerClean, handlerRemove) => {\r\n    return [\r\n        {\r\n            label: \"Guardar Cambios\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerSave\r\n        },\r\n        {\r\n            label: \"Eliminar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"default\",\r\n            variant: \"outlined\",\r\n            onClick: handlerRemove\r\n        },\r\n        {\r\n            label: \"Cancelar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"secondary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerClean\r\n        },\r\n    ];\r\n}\r\n\r\nexport const SECTOR_FORMS = [\r\n    {\r\n        label: \"Identificación\",\r\n        name: \"id\",\r\n        placeholder: \"Identificación del sector\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: true\r\n    },\r\n    {\r\n        label: \"Descripción\",\r\n        name: \"description\",\r\n        placeholder: \"Descripción\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Peligroso\",\r\n        name: \"is_dangerous\",\r\n        placeholder: \"Palabra para iniciar sesión\",\r\n        type: \"toggle\",\r\n        typeForm:\"toggle\",\r\n        value: false,\r\n        options: [\r\n            {value: true, label: \"Si\"},\r\n            {value: false, label: \"No\"}\r\n        ],\r\n        disable: false\r\n    }\r\n]\r\n\r\nexport const USER_HEADERS = [\r\n    {label: \"id\", column: \"id\"}, \r\n    {label: \"descripción\", column: \"description\"},\r\n    {label: \"Peligroso\", column: \"dangerous\"},\r\n    {label: \"Fecha Creación\", column: \"createdDate\"},\r\n    {label: \"Fecha Actualización\", column: \"updatedDate\"},\r\n];\r\n\r\nexport const USER_LIST = [\r\n    [\"12003\", \"Sector beta\", 1],\r\n    [\"12004\", \"Sector alfa\", 0],\r\n    [\"12005\", \"Gamma\", 0]\r\n]\r\n","import { \r\n  STATE_AGE_UP_ASYNC, \r\n  STATE_AGE_DOWN, \r\n  SELECT_SECTOR_SUCCESS,\r\n  SELECT_SECTOR_INIT,\r\n  GET_USER_SUCCESS, \r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_SECTOR_SUCCESS,\r\n  CANCEL_SECTOR_INIT,\r\n  USER_LIST,\r\n  USER_HEADERS,\r\n  GET_SECTORS_SUCCESS,\r\n  DELETE_SECTOR_SUCCESS,\r\n  ORDER_SECTOR_SUCCESS,\r\n  FILTER_SECTOR_SUCCESS,\r\n} from './constants';\r\n  \r\n  export const initialState = {\r\n    age: 40,\r\n    email: 'jvera@gmail.com',\r\n    users: USER_LIST,\r\n    userHeaders: USER_HEADERS,\r\n    selectedSector: false, \r\n    deleteSuccess: false,\r\n    formSector: {},\r\n    totalSectors: [],\r\n  };\r\n  \r\n  const reducer = (state = initialState, action) => {\r\n    const newState = { ...state };\r\n    const { payload } = action;\r\n    const { sectors } = payload ? payload : { sectors: false };\r\n\r\n    switch (action.type) {\r\n      case STATE_AGE_UP_ASYNC:\r\n        newState.age += action.value;\r\n        newState.deleteSuccess = false; \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case STATE_AGE_DOWN:\r\n        newState.age -= action.value;\r\n        newState.deleteSuccess = false; \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case GET_USER_SUCCESS:\r\n            const { payload: { data: {email, id} } } = action;\r\n            newState.email = email;\r\n            newState.id = id;\r\n\r\n            return {\r\n              ...newState\r\n            };\r\n      case GET_SECTORS_SUCCESS:\r\n          newState.sectors = sectors;\r\n          newState.totalSectors = sectors;\r\n\r\n          return {\r\n            ...newState\r\n          };\r\n      case SELECT_SECTOR_INIT:    \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case SELECT_SECTOR_SUCCESS:  \r\n        newState.selectedSector = payload;   \r\n        newState.deleteSuccess = false;  \r\n        newState.formSector = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n        \r\n      case DELETE_SECTOR_SUCCESS: \r\n        newState.selectedSector = false; \r\n        newState.deleteSuccess = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case UPDATE_FIELD_ATTRIBUTE:\r\n        const { value: { fieldName, fieldValue } } = action;\r\n        let newFormObject = {...newState.selectedSector};\r\n        newFormObject[fieldName] = fieldValue;\r\n        newState.deleteSuccess = false;\r\n        newState.formSector = newFormObject;\r\n        newState.selectedSector = newFormObject;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n      case UPDATE_SECTOR_SUCCESS:\r\n        newState.deleteSuccess = payload;\r\n        newState.formSector = {};\r\n        newState.selectedSector = false;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n      case CANCEL_SECTOR_INIT:\r\n          newState.deleteSuccess = false;\r\n          newState.formSector = {};\r\n          newState.selectedSector = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n      case ORDER_SECTOR_SUCCESS:\r\n            newState.deleteSuccess = false;\r\n            newState.formSector = {};\r\n            newState.selectedSector = false;\r\n            newState.sectors = sectors;\r\n            return {\r\n              ...newState\r\n            };\r\n      case FILTER_SECTOR_SUCCESS:\r\n              newState.deleteSuccess = false;\r\n              newState.formSector = {};\r\n              newState.selectedSector = false;\r\n              newState.sectors = sectors;\r\n              return {\r\n                ...newState\r\n              };     \r\n      default:\r\n        return {\r\n          ...newState\r\n        };\r\n    }\r\n  };\r\n  \r\n  export default reducer;\r\n  ","import { createStructuredSelector } from 'reselect';\r\nimport { initialState } from './reducer';\r\n\r\nexport const getAge = () => initialState.age;\r\nexport const getEmail = () => initialState.email;\r\nexport const getSectors = (state) => state.sectors;\r\nexport const getSelectedSector = (state) => state.selectedSector;\r\nexport const getDeleteSector = (state) => state.deleteSuccess;\r\nexport const getFormSector = (state) => state.formSector;\r\nexport const getTotalSectors = (state) => state.totalSectors;\r\n\r\nexport const userSelector = createStructuredSelector({\r\n    age: getAge,\r\n    email: getEmail,\r\n    sectors: getSectors,\r\n    totalSectors: getTotalSectors,\r\n});","import React, { Component } from \"react\";\r\nimport \"./sector.css\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomForm from \"../../components/customform/customform\";\r\nimport CustomTable from \"../../components/table/table\";\r\nimport { getSectors, getSelectedSector, getDeleteSector, getFormSector, getTotalSectors } from \"./selectors\";\r\nimport { Spinner, Alert } from 'react-bootstrap';\r\nimport { \r\n  getSectorActions,\r\n  getSectorButton,\r\n  SELECT_SECTOR_INIT, \r\n  SECTOR_FORMS,\r\n  DELETE_SECTOR_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_SECTOR_INIT,\r\n  CANCEL_SECTOR_INIT,\r\n  FILTER_SECTOR_INIT,\r\n} from './constants'\r\n\r\n\r\nclass ComponentSector extends Component {\r\n\r\n  componentWillMount () {\r\n    const { getSectors } = this.props;\r\n    getSectors();\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    const { getSectors } = nextProps;\r\n\r\n    if (nextProps.deleteSector && this.props.deleteSector !== nextProps.deleteSector) {\r\n      getSectors();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      userHeaders, \r\n      sectors,\r\n      selectSector,\r\n      selectedSector,\r\n      removeSector,\r\n      deleteSector,\r\n      updateAttributes,\r\n      updatedSector,\r\n      updateSector,\r\n      cancelSector,\r\n      totalSectors,\r\n      filterSectors\r\n  } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        { deleteSector ?\r\n          <Alert  variant=\"success\">\r\n            {deleteSector.message}\r\n          </Alert>\r\n          : ''\r\n        }\r\n\r\n        {!selectedSector ? \r\n          <div className='sector-list_wrapper'>\r\n          { sectors && !sectors.emprty ? \r\n            <CustomTable \r\n              onSelectRow={selectSector} \r\n              className=\"sectors-table\" \r\n              items={sectors} \r\n              totalItems={totalSectors}\r\n              headers={userHeaders}\r\n              filterTable = {filterSectors}\r\n              buttons={getSectorButton(() => selectSector({}))} \r\n            /> :\r\n            <Spinner className=\"spinner-wrapper\" animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          }\r\n          \r\n        </div> :  \r\n        <div className='user-form_wrapper'>\r\n          <CustomForm \r\n            formName=\"customSector\" \r\n            values={ selectedSector } \r\n            items={ SECTOR_FORMS } \r\n            updateAction = { updateAttributes }\r\n            buttons={\r\n              getSectorActions(\r\n                () => updateSector(updatedSector), \r\n                () => cancelSector(), \r\n                () => removeSector(selectedSector)\r\n            )} \r\n            />\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    age: state.age,\r\n    email: state.email,\r\n    users: state.users,\r\n    userHeaders: state.userHeaders,\r\n    sectors: getSectors(state),\r\n    selectedSector: getSelectedSector(state),\r\n    deleteSector: getDeleteSector(state),\r\n    updatedSector: getFormSector(state),\r\n    totalSectors: getTotalSectors(state),\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return { \r\n    onAgeUp: () => dispatch({ type: \"AGE_UP\", value: 1 }),\r\n    onAgeDown: () => dispatch({ type: \"AGE_DOWN\", value: 1 }),\r\n    getUser: () => dispatch({ type: \"GET_USER\", value: 1 }),\r\n    getSectors: () => dispatch({ type: \"GET_SECTORS\", value: 1 }),\r\n    updateAttributes: (value) => dispatch({ type: UPDATE_FIELD_ATTRIBUTE, value }),\r\n    selectSector: (sector) => dispatch({ type: SELECT_SECTOR_INIT, value: sector }),\r\n    removeSector: (sector) => dispatch({ type: DELETE_SECTOR_INIT, value: sector }),\r\n    updateSector: (sector) => dispatch({ type: UPDATE_SECTOR_INIT, value: sector }),\r\n    cancelSector: () => dispatch({ type: CANCEL_SECTOR_INIT}),\r\n    filterSectors: (prop) => dispatch({ type: FILTER_SECTOR_INIT, value: prop }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ComponentSector);","import {\r\n    STATE_AGE_UP_ASYNC, \r\n    STATE_AGE_DOWN, \r\n    STATE_GET_USER_ASYNC, \r\n    GET_USER_SUCCESS, \r\n    GET_USER_ERROR,\r\n    UPDATE_FIELD_ATTRIBUTE,\r\n    UPDATE_SECTOR_INIT,\r\n    UPDATE_SECTOR_SUCCESS,\r\n    UPDATE_SECTOR_ERROR,\r\n    GET_SECTORS_SUCCESS,\r\n    GET_SECTORS_ERROR,\r\n    SELECT_SECTOR_INIT,\r\n    SELECT_SECTOR_SUCCESS,\r\n    SELECT_SECTOR_ERROR,\r\n    DELETE_SECTOR_INIT,\r\n    DELETE_SECTOR_SUCCESS,\r\n    DELETE_SECTOR_ERROR,\r\n    FILTER_SECTOR_INIT,\r\n    FILTER_SECTOR_SUCCESS,\r\n    FILTER_SECTOR_ERROR,\r\n    ORDER_SECTOR_INIT,\r\n    ORDER_SECTOR_SUCCESS,\r\n    ORDER_SECTOR_ERROR,\r\n} from './constants'\r\n\r\nexport function updateSector (payload) {\r\n    return {\r\n        type: UPDATE_SECTOR_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateSectorSuccess (payload) {\r\n    return {\r\n        type: UPDATE_SECTOR_SUCCESS,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateSectorError (payload) {\r\n    return {\r\n        type: UPDATE_SECTOR_ERROR,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateAttributes (payload) {\r\n    return {\r\n        type: UPDATE_FIELD_ATTRIBUTE,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectSector(payload) {\r\n    return {\r\n        type: SELECT_SECTOR_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectSectorSuccess(payload) {\r\n    return {\r\n        type: SELECT_SECTOR_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function selectSectorError(payload) {\r\n    return {\r\n        type: SELECT_SECTOR_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\n/* DELETE SECTOR */\r\nexport function deleteSector(payload) {\r\n    return {\r\n        type: DELETE_SECTOR_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function deleteSectorSuccess(payload) {\r\n    return {\r\n        type: DELETE_SECTOR_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function deleteSectorError(payload) {\r\n    return {\r\n        type: DELETE_SECTOR_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function setAgeUp() {\r\n    return {\r\n        type: STATE_AGE_UP_ASYNC,\r\n    };\r\n}\r\n\r\nexport function getAgeDown() {\r\n    return {\r\n        type: STATE_AGE_DOWN\r\n    };\r\n}\r\n\r\nexport function setUserAsync() {\r\n    return {\r\n        type: STATE_GET_USER_ASYNC,\r\n    };\r\n}\r\n\r\nexport function getUserSuccess(payload) {\r\n    return {\r\n        type: GET_USER_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getUserError(payload) {\r\n    return {\r\n        type: GET_USER_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getSectorsSuccess(payload) {\r\n    return {\r\n        type: GET_SECTORS_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getSectorsError(payload) {\r\n    return {\r\n        type: GET_SECTORS_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterSectorsInit(payload) {\r\n    return {\r\n        type: FILTER_SECTOR_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterSectorsSuccess(payload) {\r\n    return {\r\n        type: FILTER_SECTOR_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterSectorsError(payload) {\r\n    return {\r\n        type: FILTER_SECTOR_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderSectorsInit(payload) {\r\n    return {\r\n        type: ORDER_SECTOR_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderSectorsSuccess(payload) {\r\n    return {\r\n        type: ORDER_SECTOR_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderSectorsError(payload) {\r\n    return {\r\n        type: ORDER_SECTOR_ERROR,\r\n        payload,\r\n    };\r\n}","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { GET_SECTORS_API, PATH_API } from '../../Constants';\r\nimport { \r\n  SELECT_SECTOR_INIT,\r\n  DELETE_SECTOR_INIT,\r\n  UPDATE_SECTOR_INIT,\r\n  ORDER_SECTOR_INIT, \r\n  FILTER_SECTOR_INIT,\r\n  GET_SECTORS\r\n} from './constants';\r\nimport { \r\n  selectSectorSuccess,\r\n  getSectorsSuccess,\r\n  getSectorsError, \r\n  deleteSectorSuccess,\r\n  deleteSectorError,\r\n  updateSectorSuccess,\r\n  updateSectorError,\r\n  orderSectorsSuccess,\r\n  filterSectorsSuccess,\r\n} from './actions';\r\n\r\nfunction* selectSector(action) {\r\n  const { value } = action;\r\n  yield put(selectSectorSuccess(value));\r\n  return;\r\n}\r\n\r\nfunction* getSectors() {\r\n  const urlSectors = `${ PATH_API }${GET_SECTORS_API}`;\r\n\r\n  const response = yield call(fetch, urlSectors, {\r\n      method: 'GET',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    const successResponse = yield call([response, response.json]);\r\n    yield put(getSectorsSuccess(successResponse));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(getSectorsError(errorResponse));\r\n}\r\n\r\nfunction* removeSector(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n\r\n  const urlSectors = `${ PATH_API }${GET_SECTORS_API}/${id}`;\r\n\r\n  const response = yield call(fetch, urlSectors, {\r\n      method: 'DELETE',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    value.message = \"Sector eliminado exitosamente\"; \r\n    yield put(deleteSectorSuccess(value));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(deleteSectorError(errorResponse));\r\n}\r\n\r\nfunction* updateSector(action) {\r\n  const { value } = action;\r\n  const { id, description, is_dangerous } = value ? value : {};\r\n  value.message = \"Sector creado exitosamente\"; \r\n\r\n  let urlSectors = `${ PATH_API }${GET_SECTORS_API}`;\r\n\r\n  const sectorToUpdate = {\r\n    description,\r\n    is_dangerous\r\n  }\r\n\r\n  const getResponse = yield call(fetch, `${urlSectors}/${id}`, {\r\n    method: 'GET'\r\n  });\r\n\r\n  const callBody = {\r\n    method: 'POST',\r\n    body: JSON.stringify(sectorToUpdate)\r\n  }\r\n\r\n  if (getResponse.status >= 200 && getResponse.status < 300) {\r\n    value.message = \"Sector actualizado exitosamente\"; \r\n    callBody.method = 'PUT';\r\n    urlSectors = `${urlSectors}/${id}`\r\n  }\r\n\r\n  const response = yield call(fetch, urlSectors, {\r\n      ...callBody\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    yield put(updateSectorSuccess(value));\r\n    return;\r\n  }\r\n  \r\n  const errorResponse = yield call([response, response.json]);\r\n  value.message = \"Hubo un problema creando los cambios\"; \r\n  yield put(updateSectorError(errorResponse));\r\n}\r\n\r\nfunction* orderSector(action) { \r\n  const { value: {column, items, sense} } = action;\r\n\r\n  items.sort((a,b) => {\r\n    if(a[column] < b[column]) {\r\n      return sense;\r\n    }\r\n    if(a[column] > b[column]) {\r\n      return -1*sense;\r\n    }\r\n    return 0;\r\n  })\r\n\r\n  const response = {\r\n    sectors: items \r\n  }\r\n\r\n  yield put(orderSectorsSuccess(response));\r\n}\r\n\r\nfunction* filterSector(action) { \r\n  const { value: {fieldValue, items} } = action;\r\n  \r\n  let filtered = items.filter(item => {\r\n    let itemFiltered = false;\r\n\r\n    Object.keys(item).map(key => {\r\n      const keyToFilter = item[key] && typeof item[key] !== 'object' ? item[key].toString().toLowerCase() : \"\"; \r\n      itemFiltered = itemFiltered || keyToFilter.includes(fieldValue);\r\n      return true;\r\n    })\r\n\r\n    return itemFiltered;\r\n  });\r\n\r\n  const response = {\r\n    sectors: filtered\r\n  }\r\n\r\n  yield put(filterSectorsSuccess(response));\r\n}\r\n\r\nexport function* watchSector() {\r\n  yield takeLatest(GET_SECTORS, getSectors);\r\n  yield takeLatest(SELECT_SECTOR_INIT, selectSector);\r\n  yield takeLatest(DELETE_SECTOR_INIT, removeSector);\r\n  yield takeLatest(UPDATE_SECTOR_INIT, updateSector);\r\n  yield takeLatest(ORDER_SECTOR_INIT, orderSector);\r\n  yield takeLatest(FILTER_SECTOR_INIT, filterSector);\r\n}\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport { Link } from 'react-router-dom';\r\nimport './breadcrumb.css';\r\n\r\nexport default class CustomBreadcrumb extends Component {\r\n    render() {\r\n        const { route, current } = this.props;\r\n\r\n        return (\r\n            <Breadcrumbs aria-label=\"breadcrumb\" className=\"breadcrumb-wrapper\">\r\n                {\r\n                    route.map((item,i) => {\r\n                        return (\r\n                        <Link key={i} to={item.path} className=\"bread-item\">\r\n                            { item.label }    \r\n                        </Link>\r\n                        );\r\n                    })\r\n                }\r\n                <Typography className=\"current\" color=\"textPrimary\">{current}</Typography>\r\n            </Breadcrumbs>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport \"./sector.css\";\r\nimport ComponentSector from './component';\r\n\r\nimport reducer from \"./reducer\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchSector } from \"./saga\";\r\nimport { Provider } from 'react-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport CustomBreadcrumb from \"../../components/breadcrumb/breadcrumb\";\r\nimport { BREAD_PATH, } from './constants';\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    reducer\r\n});\r\n\r\nconst formStore = createStore(rootReducer);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(watchSector);\r\n\r\nexport default class SectorsPage extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={formStore}>\r\n                <Provider store={store}>\r\n                    <Container className='main-wrapper sectors' >\r\n                        <CustomBreadcrumb route={BREAD_PATH} current=\"Sectores\"/>\r\n                        <h1> Lista de sectores </h1>\r\n                        <ComponentSector />\r\n                    </Container>\r\n                </Provider>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\n","import { \r\n    GET_ZONE_SUCCESS,\r\n    ZONES_HEADERS\r\n} from './constants';\r\n    \r\n    export const initialState = {\r\n        zones: false,\r\n        zoneHeaders: ZONES_HEADERS\r\n    };\r\n    \r\n    const reducer = (state = initialState, action) => {\r\n        const newState = { ...state };\r\n        const { payload } = action;\r\n    \r\n        switch (action.type) {\r\n            case GET_ZONE_SUCCESS:\r\n            const { payload: { zones } } = action;\r\n            newState.zones = zones;\r\n\r\n            return {\r\n                ...newState\r\n            };\r\n            default:\r\n            return {\r\n                ...newState\r\n            };\r\n        }\r\n    };\r\n    \r\n    export default reducer;\r\n    ","export const GET_ZONE_INIT = '@zone/GET_ZONE_INIT';\r\nexport const GET_ZONE_SUCCESS = '@zone/GET_ZONE_SUCCESS';\r\nexport const GET_ZONE_ERROR = '@zone/GET_ZONE_ERROR';\r\n\r\nexport const ZONES_HEADERS = [\r\n    {label: \"id\", column: \"id\"}, \r\n    {label: \"descripción\", column: \"description\"},\r\n    {label: \"Tiempo de ruta\", column: \"routeTime\"},\r\n    {label: \"Fecha Creación\", column: \"createdDate\"},\r\n    {label: \"Fecha Actualización\", column: \"updatedDate\"},\r\n];","import {\r\n    GET_ZONE_INIT,\r\n    GET_ZONE_SUCCESS,\r\n    GET_ZONE_ERROR\r\n} from './constants'\r\n\r\nexport function getZones (payload) {\r\n    return {\r\n        type: GET_ZONE_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function getZoneSuccess (payload) {\r\n    return {\r\n        type: GET_ZONE_SUCCESS,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function getZoneError (payload) {\r\n    return {\r\n        type: GET_ZONE_ERROR,\r\n        payload\r\n    };\r\n}","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { GET_ZONES_API, PATH_API } from '../../Constants';\r\nimport { \r\n    GET_ZONE_INIT\r\n} from './constants';\r\nimport { \r\n    getZoneSuccess,\r\n    getZoneError\r\n} from './actions';\r\n\r\n\r\n\r\nfunction* getZonesSaga() {\r\n    const urlSectors = `${ PATH_API }${GET_ZONES_API}`;\r\n\r\n    const response = yield call(fetch, urlSectors, {\r\n        method: 'GET',\r\n    });\r\n\r\n    if (response.status >= 200 && response.status < 300) {\r\n        const successResponse = yield call([response, response.json]);\r\n        yield put(getZoneSuccess(successResponse));\r\n        return;\r\n    }\r\n\r\n    const errorResponse = yield call([response, response.json]);\r\n    yield put(getZoneError(errorResponse));\r\n}\r\n\r\n\r\nexport function* watchZones() {\r\n    yield takeLatest(GET_ZONE_INIT, getZonesSaga);\r\n}\r\n","import React, { Component } from 'react';\r\nimport \"./zones.css\";\r\n\r\nimport reducer from \"./reducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchZones } from \"./saga\";\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(watchZones);\r\n\r\nexport default class NoMatch extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n          <div className=\"main-wrapper\">\r\n            <h1>404: Página no encontrada</h1>\r\n          </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import { faHome, faVectorSquare,faBezierCurve,  faHashtag, faUsers, faFileAlt, faGripHorizontal } from \"@fortawesome/free-solid-svg-icons\";\r\nexport const FILLER_TEXT = `But I must `;\r\n\r\nexport const ITEMS = [\r\n    {\r\n        path: '/addresses',\r\n        title: 'Direcciones',\r\n        icon: faHome,\r\n        key: 1,\r\n        buttonLabel: 'Abrir',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt'\r\n    },\r\n    {\r\n        path: '/user',\r\n        title: 'Sectores',\r\n        icon: faVectorSquare,\r\n        key: 2,\r\n        buttonLabel: 'Abrir',\r\n        description: 'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium',\r\n        role: ['asesor']\r\n    },\r\n    {\r\n        path: '/Bases',\r\n        title: 'Bases',\r\n        icon: faGripHorizontal,\r\n        key: 3,\r\n        buttonLabel: 'Abrir',\r\n        description: 'Perspiciatis unde omnis iste natus error sit voluptatem ',        \r\n        role: ['asesor']\r\n    },\r\n    {\r\n        path: '/zones',\r\n        title: 'Zonas',\r\n        icon: faBezierCurve,\r\n        key: 4,\r\n        buttonLabel: 'Abrir',\r\n        description: 'Pagina para hacer pruebas de layout y estilos ',\r\n        role: ['asesor']\r\n    }\r\n]\r\n","import React, { Component } from 'react';\r\nimport { Container, Spinner } from 'react-bootstrap'\r\nimport \"./about.css\";\r\nimport { ITEMS } from \"./constant\";\r\nimport CustomCard from '../../components/customcard/customcard';\r\nimport auth from '../../controllers/session';\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <Container className='main-wrapper about'>\r\n        {\r\n          auth.isUserInSession() ? \r\n          <div className='about-wrapper'>\r\n            <h1> Bienvenido </h1>\r\n            <div className=\"text-wrapper\">\r\n              <CustomCard items={ITEMS} /> \r\n            </div>\r\n          </div>\r\n        : \r\n          <Spinner className=\"spinner-wrapper\" animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n}","import { \r\n    faHome, \r\n    faUsers, \r\n    faFileAlt, \r\n    faAngleDoubleRight, \r\n    faUserCircle, \r\n    faSignOutAlt,\r\n    faBookReader,\r\n    faBookDead,\r\n    faBookMedical,\r\n    faBookmark,\r\n    faAddressBook\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const ITEMS = [\r\n    {\r\n        path: '/',\r\n        name: 'Home',\r\n        css: faHome,\r\n        key: 1,\r\n        label: 'Home'\r\n    },\r\n    {\r\n        path: '/user',\r\n        name: 'User',\r\n        css: faUsers,\r\n        key: 2,\r\n        label: 'Usuarios',\r\n        role: ['asesor'],\r\n        dropdown: [\r\n            {\r\n                path: '/user',\r\n                name: 'User',\r\n                css: faBookReader,\r\n                key: 1,\r\n                label: 'Gestión de sectores',\r\n                role: ['asesor']\r\n            },\r\n            {\r\n                path: '/search',\r\n                name: 'User',\r\n                css: faBookDead,\r\n                key: 21,\r\n                label: 'Gestión de roles',\r\n                role: ['asesor'],\r\n                dropdown: [\r\n                    {\r\n                        path: '/user',\r\n                        name: 'User',\r\n                        css: faBookMedical,\r\n                        key: 211,\r\n                        label: 'Validaciones',\r\n                        role: ['asesor']\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                path: '/user',\r\n                name: 'User',\r\n                css: faBookmark,\r\n                key: 3,\r\n                label: 'Administrar',\r\n                role: ['asesor']\r\n            },\r\n            {\r\n                path: '/user',\r\n                name: 'User',\r\n                css: faAddressBook,\r\n                key: 4,\r\n                label: 'Verificación',\r\n                role: ['asesor']\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: '/forms',\r\n        name: 'Formularios',\r\n        css: faFileAlt,\r\n        key: 3,\r\n        label: 'Formularios',\r\n        role: ['asesor']\r\n    }\r\n]\r\n\r\nexport const ITEM_TITLE = [\r\n    {\r\n        position: 'right',\r\n        path: '/',\r\n        name: 'Asimov',\r\n        css: faAngleDoubleRight,\r\n        key: 4,\r\n        label: 'Asimov',\r\n        className:'logo',\r\n        active: false,\r\n    }\r\n]\r\n\r\nexport const ITEM_LOGOUT = [\r\n    {\r\n        position: 'left',\r\n        path: '/',\r\n        name: 'Salir',\r\n        css: faSignOutAlt,\r\n        key: 5,\r\n        label: 'Salir',\r\n        className:'logout',\r\n        active: false,\r\n        onItemClick: true,\r\n    }\r\n]\r\n\r\nexport const getUserItem = (name, picture) => {\r\n    const ITEM_PROFILE = [\r\n        {\r\n            \r\n            position: 'left',\r\n            path: '/profile',\r\n            name: name,\r\n            css: faUserCircle,\r\n            key: 6,\r\n            label: name,\r\n            className:'',\r\n            active: false,\r\n            picture: picture\r\n        }\r\n    ]\r\n\r\n    return ITEM_PROFILE;\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Image from 'react-bootstrap/Image';\r\nimport './sidebar.css';\r\nimport auth from '../../controllers/session';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nexport default class NavItem extends Component {\r\n\r\n  handleClick = (path) => {\r\n      const { onItemClick } = this.props;\r\n      if (onItemClick) {\r\n        return onItemClick(path);\r\n      }\r\n\r\n      return false;\r\n  }\r\n\r\n  onLogout = () => {\r\n    auth.logout();\r\n  }\r\n\r\n  render() {\r\n    const { items } = this.props;\r\n\r\n    if (auth.isUserInSession()) {\r\n      return (\r\n        items && items.map((item, i) => {\r\n            const whiteClass = `styled-nav-item ${ item.className ? item.className : '' } ${ item.active ? 'active' : ''}`;\r\n            const found = auth.hasPermision(item.role);\r\n            const dropdown = item.dropdown;\r\n            return found && (<Nav.Item as=\"li\" key={item.key} className={whiteClass}>\r\n            { \r\n              item.onItemClick ? \r\n              <Nav.Link href=\"#\" className='sidebar-nav-link action' onClick={this.onLogout}>\r\n                {\r\n                  !item.position || item.position === 'left' ? \r\n                    <FontAwesomeIcon className='nav-icon' icon={item.css} />  \r\n                  :\r\n                  ''\r\n                }\r\n                <span className='link-text'>{item.label}</span>\r\n                {\r\n                  item.position === 'right' ? \r\n                    <FontAwesomeIcon className='nav-icon' icon={item.css} />  \r\n                  :\r\n                  ''\r\n                }\r\n              </Nav.Link>\r\n              :\r\n              <Link to={item.path} className='sidebar-nav-link '>\r\n                {\r\n                  !item.position || item.position === 'left' ?\r\n                  item.picture ? <Image className='nav-image' src={item.picture} roundedCircle  /> :  \r\n                  <FontAwesomeIcon className='nav-icon' icon={item.css} /> :\r\n                  ''\r\n                }\r\n                <span className='link-text'>{item.label}</span>\r\n                {\r\n                  item.position && item.position === 'right' ? \r\n                  item.picture ? <Image className='nav-image' src={item.picture} roundedCircle  /> : \r\n                  <FontAwesomeIcon className='nav-icon' icon={item.css} /> :\r\n                  ''\r\n                }\r\n              </Link>\r\n            } \r\n            { dropdown ? \r\n              <div className=\"submenu\">\r\n                <Nav.Item as=\"ul\">\r\n                  <NavItem items={ dropdown } /> \r\n                </Nav.Item>\r\n              </div>: ''}\r\n          </Nav.Item>)\r\n        })\r\n      );\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ITEMS, ITEM_TITLE, ITEM_LOGOUT, getUserItem } from './constants';\r\n\r\nimport './sidebar.css';\r\nimport NavItem from './navitem';\r\nimport auth from '../../controllers/session';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nexport default class SideNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activePath: '/',\r\n            items: ITEMS\r\n        }\r\n    }\r\n\r\n    onItemClick = (path) => {\r\n        this.setState({ activePath: path });\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.state;\r\n        const name = auth.getUserAttribute('name');     \r\n        const picture = auth.getUserAttribute('picture');\r\n\r\n        return (\r\n            <div className='side-nav-wrapper'>\r\n            <Nav className=\"side-nav-nar\" activeKey=\"1\" onSelect={this.onItemClick} as=\"ul\">\r\n                <NavItem\r\n                    items={ITEM_TITLE}\r\n                />\r\n                <NavItem\r\n                    items={getUserItem(name, picture)}\r\n                />\r\n                <NavItem\r\n                    items={items}\r\n                    onItemClick={() => this.onItemClick}\r\n                />\r\n                <NavItem\r\n                    items={ITEM_LOGOUT}\r\n                />\r\n            </Nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SideNav from './sidenav';\r\nimport './sidebar.css';\r\n\r\nexport default class SideBar extends Component {\r\n  render() {\r\n    return (\r\n      <SideNav></SideNav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport \"./profile.css\";\r\nimport { getComponentItems } from \"./constant\";\r\nimport CustomCard from '../../components/customcard/customcard';\r\nimport auth from '../../controllers/session';\r\n\r\nexport default class Profile extends Component {\r\n  render() {\r\n    const name = auth.getUserAttribute('name');\r\n    const picture = auth.getUserAttribute('picture');\r\n\r\n    return (\r\n      <Container className='main-wrapper profile'>\r\n        <h1> { name } </h1>\r\n        <div className=\"text-wrapper\">\r\n          <CustomCard items={getComponentItems(picture)} />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}","import { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nexport const FILLER_TEXT = `But I must `;\r\n\r\nexport const getComponentItems = (userPicture) => {\r\n    return [\r\n        {\r\n            path: '/',\r\n            icon: faUserCircle,\r\n            key: 1,\r\n            description: 'Datos del usuario',\r\n            picture: userPicture\r\n        }\r\n    ]\r\n}","import { \r\n    faSearch\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const SEARCH_FORM = {\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false,\r\n        placeholder: \"Ingrese lo criterios de búsqueda\",\r\n        icon: faSearch\r\n}\r\n\r\nexport const SEARCH_RESULT = [\r\n    {\r\n        path: '/',\r\n        title: 'Sector 1',\r\n        key: 1,\r\n        buttonLabel: 'Ver detalle',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt'\r\n    },\r\n    {\r\n        path: '/user',\r\n        title: 'Sector 2',\r\n        key: 2,\r\n        buttonLabel: 'Ver detalle',\r\n        description: 'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium',\r\n        role: ['asesor']\r\n    },\r\n    {\r\n        path: '/NoMatch',\r\n        title: 'Sector 3',\r\n        key: 3,\r\n        buttonLabel: 'Ver detalle',\r\n        description: 'Perspiciatis unde omnis iste natus error sit voluptatem ',        \r\n        role: ['asesor']\r\n    },\r\n    {\r\n        path: '/NoMatch',\r\n        title: 'Sector 4',\r\n        key: 4,\r\n        buttonLabel: 'Ver detalle',\r\n        description: 'Pagina para hacer pruebas de layout y estilos ',\r\n        role: ['asesor']\r\n    },\r\n    {\r\n        path: '/NoMatch',\r\n        title: 'Sector 5',\r\n        key: 5,\r\n        buttonLabel: 'Ver detalle',\r\n        description: 'Pagina para hacer pruebas de layout y estilos ',\r\n        role: ['asesor']\r\n    },\r\n    {\r\n        path: '/NoMatch',\r\n        title: 'Sector 6',\r\n        key: 6,\r\n        buttonLabel: 'Ver detalle',\r\n        description: 'Pagina para hacer pruebas de layout y estilos ',\r\n        role: ['asesor']\r\n    }\r\n\r\n]","import React, { Component } from 'react';\r\nimport { Pagination, Container } from 'react-bootstrap';\r\nimport \"./search.css\";\r\nimport { SEARCH_FORM, SEARCH_RESULT } from \"./constants\";\r\nimport CustomCard from '../../components/customcard/customcard';\r\nimport CustomField from '../../components/customform/customfield';\r\n\r\n\r\nexport default class componentName extends Component {\r\n    render() {\r\n        return (\r\n            <Container className='main-wrapper search'>\r\n                <h1> Búsqueda de sectores </h1>\r\n                <div className=\"search-content_wrapper\">\r\n                    <div className=\"search-content_input\">\r\n                        <CustomField {...SEARCH_FORM}/>\r\n                    </div>\r\n                    <h2> Resultados </h2>\r\n                    <div className=\"search-content_results\">\r\n                        <CustomCard items={ SEARCH_RESULT }/>\r\n                    </div>\r\n                    <div className=\"search-content_paginator\">\r\n                        <Pagination>\r\n                            <Pagination.First />\r\n                            <Pagination.Prev />\r\n                            <Pagination.Item>{1}</Pagination.Item>\r\n                            <Pagination.Ellipsis />\r\n                        \r\n                            <Pagination.Item>{10}</Pagination.Item>\r\n                            <Pagination.Item>{11}</Pagination.Item>\r\n                            <Pagination.Item active>{12}</Pagination.Item>\r\n                            <Pagination.Item>{13}</Pagination.Item>\r\n                            <Pagination.Item disabled>{14}</Pagination.Item>\r\n                        \r\n                            <Pagination.Ellipsis />\r\n                            <Pagination.Item>{20}</Pagination.Item>\r\n                            <Pagination.Next />\r\n                            <Pagination.Last />\r\n                        </Pagination>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import { createStructuredSelector } from 'reselect';\r\n\r\nexport const getBases = (state) => state.bases;\r\nexport const getSelectedBase = (state) => state.selectedBase;\r\nexport const getDeleteBase = (state) => state.deleteSuccess;\r\nexport const getFormBase = (state) => state.formBase;\r\nexport const getTotalBases = (state) => state.totalBases;\r\n\r\nexport const addressSelector = createStructuredSelector({\r\n    bases: getBases,\r\n    selectedBase: getSelectedBase,\r\n    deleteSuccess: getDeleteBase,\r\n    formBase: getFormBase\r\n});","export const FILLER_TEXT = 'But I must';\r\nexport const GET_BASES = '@bases/GET_BASES_INIT';\r\nexport const GET_BASES_ERROR = '@bases/GET_BASES_ERROR';\r\nexport const GET_BASES_SUCCESS = '@bases/GET_BASES_SUCCESS';\r\n\r\nexport const UPDATE_BASE_INIT = '@bases/UPDATE_BASE_INIT';\r\nexport const UPDATE_BASE_ERROR = '@bases/UPDATE_BASE_ERROR';\r\nexport const UPDATE_BASE_SUCCESS = '@bases/UPDATE_BASE_SUCCESS';\r\nexport const CANCEL_BASE_INIT = '@bases/CANCEL_BASE_INIT';\r\n\r\nexport const UPDATE_FIELD_ATTRIBUTE = '@bases/UPDATE_FIELD_ATTRIBUTE';\r\n\r\nexport const SELECT_BASE_INIT = '@bases/SELECT_BASE_INIT';\r\nexport const SELECT_BASE_SUCCESS = '@bases/SELECT_BASE_SUCCESS';\r\nexport const SELECT_BASE_ERROR = '@bases/SELECT_BASE_ERROR';\r\n\r\nexport const DELETE_BASE_INIT = '@bases/DELETE_BASE_INIT';\r\nexport const DELETE_BASE_SUCCESS = '@bases/DELETE_BASE_SUCCESS';\r\nexport const DELETE_BASE_ERROR = '@bases/DELETE_BASE_ERROR';\r\n\r\nexport const FILTER_BASE_INIT = '@bases/FILTER_BASE_INIT';\r\nexport const FILTER_BASE_SUCCESS = '@bases/FILTER_BASE_SUCCESS';\r\nexport const FILTER_BASE_ERROR = '@bases/FILTER_BASE_ERROR';\r\n\r\nexport const ORDER_BASE_INIT = '@bases/ORDER_BASE_INIT';\r\nexport const ORDER_BASE_SUCCESS = '@bases/ORDER_BASE_SUCCESS';\r\nexport const ORDER_BASE_ERROR = '@bases/ORDER_BASE_ERROR';\r\n\r\n\r\nexport const getBaseButton = (handlerSafe) => {\r\n    return [\r\n        {\r\n            label: \"Nueva Base\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            onClick: handlerSafe\r\n        }\r\n    ]\r\n}\r\n\r\nexport const getBaseActions = (handlerSave, handlerClean, handlerRemove) => {\r\n    return [\r\n        {\r\n            label: \"Guardar Cambios\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerSave\r\n        },\r\n        {\r\n            label: \"Eliminar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"default\",\r\n            variant: \"outlined\",\r\n            onClick: handlerRemove\r\n        },\r\n        {\r\n            label: \"Cancelar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"secondary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerClean\r\n        },\r\n    ];\r\n}\r\n\r\nexport const BREAD_PATH = [\r\n    { path: \"/\", label: \"Inicio\" },\r\n]\r\n\r\nexport const BASE_FORMS = [\r\n    {\r\n        label: \"Identificación\",\r\n        name: \"id\",\r\n        placeholder: \"Identificación del Zona\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: true\r\n    },\r\n    {\r\n        label: \"Descripción\",\r\n        name: \"description\",\r\n        placeholder: \"Descripción\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Activo\",\r\n        name: \"active\",\r\n        type: \"toggle\",\r\n        typeForm:\"toggle\",\r\n        value: false,\r\n        options: [\r\n            {value: true, label: \"Si\"},\r\n            {value: false, label: \"No\"}\r\n        ],\r\n        disable: false\r\n    }\r\n]\r\n\r\nexport const BASE_HEADERS = [\r\n    {label: \" \", column: \"\"}, \r\n    {label: \"id\", column: \"id\"}, \r\n    {label: \"descripción\", column: \"description\"},\r\n    {label: \"Activo\", column: \"active\"},\r\n    {label: \"Fecha Creación\", column: \"createdDate\"},\r\n    {label: \"Fecha Actualización\", column: \"updatedDate\"},\r\n];\r\n\r\nexport const BASE_LIST = [\r\n    [\"12003\", \"Direccción beta\", 1, 0],\r\n    [\"12004\", \"Zona alfa\", 0, 1],\r\n    [\"12005\", \"Gamma\", 0, 1]\r\n]\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomForm from \"../../components/customform/customform\";\r\nimport CustomTable from \"../../components/table/table\";\r\nimport { getBases, getSelectedBase, getDeleteBase, getFormBase, getTotalBases } from \"./selectors\";\r\nimport { Spinner, Alert } from 'react-bootstrap';\r\nimport { \r\n  getBaseActions,\r\n  getBaseButton,\r\n  GET_BASES,\r\n  SELECT_BASE_INIT, \r\n  BASE_FORMS, \r\n  DELETE_BASE_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_BASE_INIT,\r\n  CANCEL_BASE_INIT,\r\n  ORDER_BASE_INIT,\r\n  FILTER_BASE_INIT,\r\n} from './constants'\r\n\r\n\r\nclass ComponentBase extends Component {\r\n\r\n  componentWillMount () {\r\n    const { getBases } = this.props;\r\n    getBases();\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    const { getBases } = nextProps;\r\n\r\n    if (nextProps.deleteBase && this.props.deleteBase !== nextProps.deleteBase) {\r\n      getBases();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      baseHeaders, \r\n      bases,\r\n      selectBase,\r\n      selectedBase,\r\n      removeBase,\r\n      deleteBase,\r\n      updateAttributes,\r\n      updatedBase,\r\n      updateBase,\r\n      cancelBase,\r\n      orderBase,\r\n      filterBase,\r\n      totalBases\r\n  } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        { deleteBase ?\r\n          <Alert  variant=\"success\">\r\n            {deleteBase.message}\r\n          </Alert>\r\n          : ''\r\n        }\r\n\r\n        {!selectedBase ? \r\n          <div className='base-list_wrapper'>\r\n          { bases && !bases.emprty ? \r\n            <CustomTable \r\n              onSelectRow={selectBase} \r\n              className=\"bases-table\" \r\n              items={bases}\r\n              totalItems={totalBases}\r\n              subObject=\"zones\" \r\n              subLabel=\"Zonas\"\r\n              childObject=\"sectors\"\r\n              childLabel=\"Sectores\" \r\n              orderTable={orderBase}\r\n              headers={baseHeaders}\r\n              filterTable = {filterBase}\r\n              paginator = {true}\r\n              buttons={getBaseButton(() => selectBase({}))} \r\n            /> :\r\n            <Spinner className=\"spinner-wrapper\" animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          }\r\n          \r\n        </div> :  \r\n        <div className='base-form_wrapper'>\r\n          <CustomForm \r\n            formName=\"customBase\" \r\n            values={ selectedBase } \r\n            items={ BASE_FORMS } \r\n            updateAction = { updateAttributes }\r\n            buttons={\r\n              getBaseActions(\r\n                () => updateBase(updatedBase), \r\n                () => cancelBase(), \r\n                () => removeBase(selectedBase)\r\n            )} \r\n            />\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    baseHeaders: state.baseHeaders,\r\n    bases: getBases(state),\r\n    selectedBase: getSelectedBase(state),\r\n    deleteBase: getDeleteBase(state),\r\n    updatedBase: getFormBase(state),\r\n    totalBases: getTotalBases(state),\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return { \r\n    getBases: () => dispatch({ type: GET_BASES, value: 1 }),\r\n    updateAttributes: (value) => dispatch({ type: UPDATE_FIELD_ATTRIBUTE, value }),\r\n    selectBase: (base) => dispatch({ type: SELECT_BASE_INIT, value: base }),\r\n    removeBase: (base) => dispatch({ type: DELETE_BASE_INIT, value: base }),\r\n    updateBase: (base) => dispatch({ type: UPDATE_BASE_INIT, value: base }),\r\n    cancelBase: () => dispatch({ type: CANCEL_BASE_INIT}),\r\n    orderBase: (prop) => dispatch({ type: ORDER_BASE_INIT, value: prop }),\r\n    filterBase: (prop) => dispatch({ type: FILTER_BASE_INIT, value: prop }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ComponentBase);","import { \r\n  SELECT_BASE_SUCCESS,\r\n  SELECT_BASE_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_BASE_SUCCESS,\r\n  UPDATE_BASE_ERROR,\r\n  CANCEL_BASE_INIT,\r\n  BASE_LIST,\r\n  BASE_HEADERS,\r\n  GET_BASES_SUCCESS,\r\n  DELETE_BASE_SUCCESS,\r\n  DELETE_BASE_ERROR,\r\n  ORDER_BASE_SUCCESS,\r\n  FILTER_BASE_SUCCESS\r\n} from './constants';\r\n  \r\n  export const initialState = {\r\n    bases: BASE_LIST,\r\n    totalBases: [],\r\n    baseHeaders: BASE_HEADERS,\r\n    selectedBase: false, \r\n    deleteSuccess: false,\r\n    formBase: {}\r\n  };\r\n  \r\n  const reducer = (state = initialState, action) => {\r\n    const newState = { ...state };\r\n    const { payload } = action;\r\n    const { bases } = payload ? payload : { bases: false };\r\n\r\n    switch (action.type) {\r\n      case GET_BASES_SUCCESS:\r\n          newState.bases = bases;\r\n          newState.totalBases = bases;\r\n          \r\n          return {\r\n            ...newState\r\n          };\r\n      case SELECT_BASE_INIT:    \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case SELECT_BASE_SUCCESS:  \r\n        newState.selectedBase = payload;   \r\n        newState.deleteSuccess = false;  \r\n        newState.formBase = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n        \r\n      case DELETE_BASE_SUCCESS: \r\n        newState.selectedBase = false; \r\n        newState.deleteSuccess = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case UPDATE_FIELD_ATTRIBUTE:\r\n        const { value: { fieldName, fieldValue } } = action;\r\n        let newFormObject = {...newState.selectedBase};\r\n        newFormObject[fieldName] = fieldValue;\r\n        newState.deleteSuccess = false;\r\n        newState.formBase = newFormObject;\r\n        newState.selectedBase = newFormObject;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n      case UPDATE_BASE_SUCCESS:\r\n        newState.deleteSuccess = payload;\r\n        newState.formBase = {};\r\n        newState.selectedBase = false;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n\r\n        case UPDATE_BASE_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formBase = {};\r\n          newState.selectedBase = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        \r\n        case DELETE_BASE_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formBase = {};\r\n          newState.selectedBase = false;\r\n    \r\n          return {\r\n            ...newState\r\n          };  \r\n\r\n        case CANCEL_BASE_INIT:\r\n          newState.deleteSuccess = false;\r\n          newState.formBase = {};\r\n          newState.selectedBase = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        case ORDER_BASE_SUCCESS:\r\n            newState.deleteSuccess = false;\r\n            newState.formBase = {};\r\n            newState.selectedBase = false;\r\n            newState.bases = bases;\r\n            return {\r\n              ...newState\r\n            };\r\n        case FILTER_BASE_SUCCESS:\r\n              newState.deleteSuccess = false;\r\n              newState.formBase = {};\r\n              newState.selectedBase = false;\r\n              newState.bases = bases;\r\n              return {\r\n                ...newState\r\n              };            \r\n      default:\r\n        return {\r\n          ...newState\r\n        };\r\n    }\r\n  };\r\n  \r\n  export default reducer;\r\n  ","import {\r\n    UPDATE_FIELD_ATTRIBUTE,\r\n    UPDATE_BASE_INIT,\r\n    UPDATE_BASE_SUCCESS,\r\n    UPDATE_BASE_ERROR,\r\n    GET_BASES_SUCCESS,\r\n    GET_BASES_ERROR,\r\n    SELECT_BASE_INIT,\r\n    SELECT_BASE_SUCCESS,\r\n    SELECT_BASE_ERROR,\r\n    DELETE_BASE_INIT,\r\n    DELETE_BASE_SUCCESS,\r\n    DELETE_BASE_ERROR,\r\n    FILTER_BASE_INIT,\r\n    FILTER_BASE_SUCCESS,\r\n    FILTER_BASE_ERROR,\r\n    ORDER_BASE_ERROR,\r\n    ORDER_BASE_SUCCESS,\r\n    ORDER_BASE_INIT\r\n} from './constants'\r\n\r\nexport function updateBase (payload) {\r\n    return {\r\n        type: UPDATE_BASE_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateBaseSuccess (payload) {\r\n    return {\r\n        type: UPDATE_BASE_SUCCESS,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateBaseError (payload) {\r\n    return {\r\n        type: UPDATE_BASE_ERROR,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateAttributes (payload) {\r\n    return {\r\n        type: UPDATE_FIELD_ATTRIBUTE,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectBase(payload) {\r\n    return {\r\n        type: SELECT_BASE_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectBaseSuccess(payload) {\r\n    return {\r\n        type: SELECT_BASE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function selectBaseError(payload) {\r\n    return {\r\n        type: SELECT_BASE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\n/* DELETE BASE */\r\nexport function deleteBase(payload) {\r\n    return {\r\n        type: DELETE_BASE_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function deleteBaseSuccess(payload) {\r\n    return {\r\n        type: DELETE_BASE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function deleteBaseError(payload) {\r\n    return {\r\n        type: DELETE_BASE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getBasesSuccess(payload) {\r\n    return {\r\n        type: GET_BASES_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getBasesError(payload) {\r\n    return {\r\n        type: GET_BASES_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterBasesInit(payload) {\r\n    return {\r\n        type: FILTER_BASE_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterBasesSuccess(payload) {\r\n    return {\r\n        type: FILTER_BASE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterBasesError(payload) {\r\n    return {\r\n        type: FILTER_BASE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderBasesInit(payload) {\r\n    return {\r\n        type: ORDER_BASE_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderBasesSuccess(payload) {\r\n    return {\r\n        type: ORDER_BASE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderBasesError(payload) {\r\n    return {\r\n        type: ORDER_BASE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { GET_BASES_API, PATH_API, GET_SECTORS_API } from '../../Constants';\r\nimport { \r\n  GET_BASES,\r\n  SELECT_BASE_INIT,\r\n  DELETE_BASE_INIT,\r\n  UPDATE_BASE_INIT,\r\n  ORDER_BASE_INIT, \r\n  FILTER_BASE_INIT\r\n} from './constants';\r\nimport { \r\n  selectBaseSuccess,\r\n  getBasesSuccess,\r\n  getBasesError, \r\n  deleteBaseSuccess,\r\n  deleteBaseError,\r\n  updateBaseSuccess,\r\n  updateBaseError,\r\n  orderBasesSuccess,\r\n  filterBasesSuccess\r\n} from './actions';\r\n\r\nfunction* selectBase(action) {\r\n  const { value } = action;\r\n\r\n  yield put(selectBaseSuccess(value));\r\n  return;\r\n}\r\n\r\nfunction* getBases() {\r\n  const urlBases = `${ PATH_API }${GET_BASES_API}`;\r\n  const urlSectores = `${ PATH_API }${GET_SECTORS_API}`;\r\n\r\n  const response = yield call(fetch, urlBases, {\r\n      method: 'GET',\r\n  });\r\n\r\n  const responseSectores = yield call(fetch, urlSectores, {\r\n    method: 'GET',\r\n});\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    const successResponse = yield call([response, response.json]);\r\n\r\n    if (responseSectores.status >= 200 && responseSectores.status < 300) { \r\n      const successSectores = yield call([responseSectores, responseSectores.json]);\r\n\r\n      const { sectors } = successSectores;\r\n      successResponse.bases.map((key) => {\r\n        key.zones.map((zone) => {\r\n          zone.sectors = sectors;\r\n        });\r\n      });\r\n    }\r\n\r\n    yield put(getBasesSuccess(successResponse));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(getBasesError(errorResponse));\r\n}\r\n\r\nfunction* removeBase(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n\r\n  const urlBases = `${ PATH_API }${GET_BASES_API}/${id}`;\r\n\r\n  const response = yield call(fetch, urlBases, {\r\n      method: 'DELETE',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    value.message = \"Dirección eliminada exitosamente\"; \r\n    yield put(deleteBaseSuccess(value));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(deleteBaseError(errorResponse));\r\n}\r\n\r\nfunction* updateBase(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n  \r\n  const baseToUpdate = { ...value };\r\n\r\n  value.message = \"Dirección creada exitosamente\"; \r\n  let baseId = id ? id : \"0\";\r\n  let urlBases = `${ PATH_API }${GET_BASES_API}`;\r\n\r\n  const getResponse = yield call(fetch, `${urlBases}/${baseId}`, {\r\n    method: 'GET'\r\n  });\r\n\r\n  const callBody = {\r\n    method: 'POST',\r\n    body: JSON.stringify(baseToUpdate)\r\n  }\r\n\r\n  if (getResponse.status >= 200 && getResponse.status < 300) {\r\n    value.message = \"Dirección actualizada exitosamente\"; \r\n    callBody.method = 'PUT';\r\n    urlBases = `${urlBases}/${id}`\r\n  }\r\n\r\n  const response = yield call(fetch, urlBases, {\r\n      ...callBody\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    yield put(updateBaseSuccess(value));\r\n    return;\r\n  }\r\n  \r\n  const errorResponse = yield call([response, response.json]);\r\n  value.message = \"Hubo un problema creando los cambios\"; \r\n  yield put(updateBaseError(errorResponse));\r\n}\r\n\r\nfunction* orderBase(action) { \r\n  const { value: {column, items, sense} } = action;\r\n\r\n  items.sort((a,b) => {\r\n    if(a[column] < b[column]) {\r\n      return sense;\r\n    }\r\n    if(a[column] > b[column]) {\r\n      return -1*sense;\r\n    }\r\n    return 0;\r\n  })\r\n\r\n  const response = {\r\n    bases: items \r\n  }\r\n\r\n  yield put(orderBasesSuccess(response));\r\n}\r\n\r\nfunction* filterBase(action) { \r\n  const { value: {fieldValue, items} } = action;\r\n  \r\n  let filtered = items.filter(item => {\r\n    let itemFiltered = false;\r\n\r\n    Object.keys(item).map(key => {\r\n      const keyToFilter = item[key] && typeof item[key] !== 'object' ? item[key].toString().toLowerCase() : \"\"; \r\n      itemFiltered = itemFiltered || keyToFilter.includes(fieldValue);\r\n      return true;\r\n    })\r\n\r\n    return itemFiltered;\r\n  });\r\n\r\n  const response = {\r\n    bases: filtered\r\n  }\r\n\r\n  yield put(filterBasesSuccess(response));\r\n}\r\n\r\nexport function* watchBase() {\r\n  yield takeLatest(GET_BASES, getBases);\r\n  yield takeLatest(SELECT_BASE_INIT, selectBase);\r\n  yield takeLatest(DELETE_BASE_INIT, removeBase);\r\n  yield takeLatest(UPDATE_BASE_INIT, updateBase);\r\n  yield takeLatest(ORDER_BASE_INIT, orderBase);\r\n  yield takeLatest(FILTER_BASE_INIT, filterBase);\r\n}\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport \"./style.css\";\r\nimport ComponentBase from './component';\r\n\r\nimport reducer from \"./reducer\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchBase } from \"./saga\";\r\nimport { Provider } from 'react-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport CustomBreadcrumb from \"../../components/breadcrumb/breadcrumb\";\r\nimport { BREAD_PATH, } from './constants';\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    reducer\r\n});\r\n\r\nconst formStore = createStore(rootReducer);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(watchBase);\r\n\r\nexport default class BasePage extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={formStore}>\r\n                <Provider store={store}>\r\n                    <Container className='main-wrapper base' >\r\n                        <CustomBreadcrumb route={BREAD_PATH} current=\"Bases\"/>\r\n                        <h1> Lista de Bases </h1>\r\n                        <ComponentBase />\r\n                    </Container>\r\n                </Provider>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\n","import { createStructuredSelector } from 'reselect';\r\n\r\nexport const getAddresses = (state) => state.addresses;\r\nexport const getSelectedAddress = (state) => state.selectedAddress;\r\nexport const getDeleteAddress = (state) => state.deleteSuccess;\r\nexport const getFormAddress = (state) => state.formAddress;\r\n\r\nexport const addressSelector = createStructuredSelector({\r\n    addresses: getAddresses,\r\n    selectedAddress: getSelectedAddress,\r\n    deleteSuccess: getDeleteAddress,\r\n    formAddress: getFormAddress\r\n});","export const FILLER_TEXT = 'But I must';\r\nexport const GET_ADDRESSES = '@address/GET_ADDRESSES_INIT';\r\nexport const GET_ADDRESSES_ERROR = '@address/GET_ADDRESSES_ERROR';\r\nexport const GET_ADDRESSES_SUCCESS = '@address/GET_ADDRESSES_SUCCESS';\r\n\r\nexport const UPDATE_ADDRESS_INIT = '@address/UPDATE_ADDRESS_INIT';\r\nexport const UPDATE_ADDRESS_ERROR = '@address/UPDATE_ADDRESS_ERROR';\r\nexport const UPDATE_ADDRESS_SUCCESS = '@address/UPDATE_ADDRESS_SUCCESS';\r\nexport const CANCEL_ADDRESS_INIT = '@address/CANCEL_ADDRESS_INIT';\r\n\r\nexport const UPDATE_FIELD_ATTRIBUTE = '@address/UPDATE_FIELD_ATTRIBUTE';\r\n\r\nexport const SELECT_ADDRESS_INIT = '@address/SELECT_ADDRESS_INIT';\r\nexport const SELECT_ADDRESS_SUCCESS = '@address/SELECT_ADDRESS_SUCCESS';\r\nexport const SELECT_ADDRESS_ERROR = '@address/SELECT_ADDRESS_ERROR';\r\n\r\nexport const DELETE_ADDRESS_INIT = '@address/DELETE_ADDRESS_INIT';\r\nexport const DELETE_ADDRESS_SUCCESS = '@address/DELETE_ADDRESS_SUCCESS';\r\nexport const DELETE_ADDRESS_ERROR = '@address/DELETE_ADDRESS_ERROR';\r\n\r\n\r\nexport const getAddressButton = (handlerSafe) => {\r\n    return [\r\n        {\r\n            label: \"Nueva Dirección\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            onClick: handlerSafe\r\n        }\r\n    ]\r\n}\r\n\r\nexport const getAddressActions = (handlerSave, handlerClean, handlerRemove) => {\r\n    return [\r\n        {\r\n            label: \"Guardar Cambios\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerSave\r\n        },\r\n        {\r\n            label: \"Eliminar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"default\",\r\n            variant: \"outlined\",\r\n            onClick: handlerRemove\r\n        },\r\n        {\r\n            label: \"Cancelar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"secondary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerClean\r\n        },\r\n    ];\r\n}\r\n\r\nexport const ADDRESS_FORMS = [\r\n    {\r\n        label: \"Identificación\",\r\n        name: \"id\",\r\n        placeholder: \"Identificación del Dirección\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: true\r\n    },\r\n    {\r\n        label: \"Descripción\",\r\n        name: \"description\",\r\n        placeholder: \"Descripción\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Latitúd\",\r\n        name: \"latitude\",\r\n        placeholder: \"Latitúd\",\r\n        hint: \"\",\r\n        type: \"number\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Longitúd\",\r\n        name: \"longitude\",\r\n        placeholder: \"Longitúd\",\r\n        hint: \"\",\r\n        type: \"number\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n]\r\n\r\nexport const ADDRESS_HEADERS = [\r\n    {label: \"id\", column: \"id\"}, \r\n    {label: \"descripción\", column: \"description\"},\r\n    {label: \"Longitúd\", column: \"longitude\"},\r\n    {label: \"Latitúd\", column: \"latitude\"},\r\n    {label: \"Fecha Creación\", column: \"createdDate\"},\r\n    {label: \"Fecha Actualización\", column: \"updatedDate\"},\r\n];\r\n\r\nexport const ADDRESS_LIST = [\r\n    [\"12003\", \"Direccción beta\", 1, 0],\r\n    [\"12004\", \"Dirección alfa\", 0, 1],\r\n    [\"12005\", \"Gamma\", 0, 1]\r\n]\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomForm from \"../../components/customform/customform\";\r\nimport CustomTable from \"../../components/table/table\";\r\nimport { getAddresses, getSelectedAddress, getDeleteAddress, getFormAddress } from \"./selectors\";\r\nimport { Spinner, Alert } from 'react-bootstrap';\r\nimport { \r\n  getAddressActions,\r\n  getAddressButton,\r\n  GET_ADDRESSES,\r\n  SELECT_ADDRESS_INIT, \r\n  ADDRESS_FORMS, \r\n  DELETE_ADDRESS_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_ADDRESS_INIT,\r\n  CANCEL_ADDRESS_INIT\r\n} from './constants'\r\n\r\n\r\nclass ComponentAddress extends Component {\r\n\r\n  componentWillMount () {\r\n    const { getAddresses } = this.props;\r\n    getAddresses();\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    const { getAddresses } = nextProps;\r\n\r\n    if (nextProps.deleteAddress && this.props.deleteAddress !== nextProps.deleteAddress) {\r\n      getAddresses();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      addressHeaders, \r\n      addresses,\r\n      selectAddress,\r\n      selectedAddress,\r\n      removeAddress,\r\n      deleteAddress,\r\n      updateAttributes,\r\n      updatedAddress,\r\n      updateAddress,\r\n      cancelAddress\r\n  } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        { deleteAddress ?\r\n          <Alert  variant=\"success\">\r\n            {deleteAddress.message}\r\n          </Alert>\r\n          : ''\r\n        }\r\n\r\n        {!selectedAddress ? \r\n          <div className='address-list_wrapper'>\r\n          { addresses && !addresses.emprty ? \r\n            <CustomTable \r\n              onSelectRow={selectAddress} \r\n              className=\"addresses-table\" \r\n              items={addresses} \r\n              headers={addressHeaders}\r\n              buttons={getAddressButton(() => selectAddress({}))} \r\n            /> :\r\n            <Spinner className=\"spinner-wrapper\" animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          }\r\n          \r\n        </div> :  \r\n        <div className='address-form_wrapper'>\r\n          <CustomForm \r\n            formName=\"customAddress\" \r\n            values={ selectedAddress } \r\n            items={ ADDRESS_FORMS } \r\n            updateAction = { updateAttributes }\r\n            buttons={\r\n              getAddressActions(\r\n                () => updateAddress(updatedAddress), \r\n                () => cancelAddress(), \r\n                () => removeAddress(selectedAddress)\r\n            )} \r\n            />\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    addressHeaders: state.addressHeaders,\r\n    addresses: getAddresses(state),\r\n    selectedAddress: getSelectedAddress(state),\r\n    deleteAddress: getDeleteAddress(state),\r\n    updatedAddress: getFormAddress(state)\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return { \r\n    getAddresses: () => dispatch({ type: GET_ADDRESSES, value: 1 }),\r\n    updateAttributes: (value) => dispatch({ type: UPDATE_FIELD_ATTRIBUTE, value }),\r\n    selectAddress: (address) => dispatch({ type: SELECT_ADDRESS_INIT, value: address }),\r\n    removeAddress: (address) => dispatch({ type: DELETE_ADDRESS_INIT, value: address }),\r\n    updateAddress: (address) => dispatch({ type: UPDATE_ADDRESS_INIT, value: address }),\r\n    cancelAddress: () => dispatch({ type: CANCEL_ADDRESS_INIT}) \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ComponentAddress);","import { \r\n  SELECT_ADDRESS_SUCCESS,\r\n  SELECT_ADDRESS_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_ADDRESS_SUCCESS,\r\n  UPDATE_ADDRESS_ERROR,\r\n  CANCEL_ADDRESS_INIT,\r\n  ADDRESS_LIST,\r\n  ADDRESS_HEADERS,\r\n  GET_ADDRESSES_SUCCESS,\r\n  DELETE_ADDRESS_SUCCESS,\r\n  DELETE_ADDRESS_ERROR\r\n} from './constants';\r\n  \r\n  export const initialState = {\r\n    addresses: ADDRESS_LIST,\r\n    addressHeaders: ADDRESS_HEADERS,\r\n    selectedAddress: false, \r\n    deleteSuccess: false,\r\n    formAddress: {}\r\n  };\r\n  \r\n  const reducer = (state = initialState, action) => {\r\n    const newState = { ...state };\r\n    const { payload } = action;\r\n\r\n    switch (action.type) {\r\n      case GET_ADDRESSES_SUCCESS:\r\n          const { payload: { addresses } } = action;\r\n          newState.addresses = addresses;\r\n\r\n          return {\r\n            ...newState\r\n          };\r\n      case SELECT_ADDRESS_INIT:    \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case SELECT_ADDRESS_SUCCESS:  \r\n        newState.selectedAddress = payload;   \r\n        newState.deleteSuccess = false;  \r\n        newState.formAddress = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n        \r\n      case DELETE_ADDRESS_SUCCESS: \r\n        newState.selectedAddress = false; \r\n        newState.deleteSuccess = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case UPDATE_FIELD_ATTRIBUTE:\r\n        const { value: { fieldName, fieldValue } } = action;\r\n        let newFormObject = {...newState.selectedAddress};\r\n        newFormObject[fieldName] = fieldValue;\r\n        newState.deleteSuccess = false;\r\n        newState.formAddress = newFormObject;\r\n        newState.selectedAddress = newFormObject;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n      case UPDATE_ADDRESS_SUCCESS:\r\n        newState.deleteSuccess = payload;\r\n        newState.formAddress = {};\r\n        newState.selectedAddress = false;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n\r\n        case UPDATE_ADDRESS_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formAddress = {};\r\n          newState.selectedAddress = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        \r\n        case DELETE_ADDRESS_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formAddress = {};\r\n          newState.selectedAddress = false;\r\n    \r\n          return {\r\n            ...newState\r\n          };  \r\n\r\n        case CANCEL_ADDRESS_INIT:\r\n          newState.deleteSuccess = false;\r\n          newState.formAddress = {};\r\n          newState.selectedAddress = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n      default:\r\n        return {\r\n          ...newState\r\n        };\r\n    }\r\n  };\r\n  \r\n  export default reducer;\r\n  ","import {\r\n    UPDATE_FIELD_ATTRIBUTE,\r\n    UPDATE_ADDRESS_INIT,\r\n    UPDATE_ADDRESS_SUCCESS,\r\n    UPDATE_ADDRESS_ERROR,\r\n    GET_ADDRESSES_SUCCESS,\r\n    GET_ADDRESSES_ERROR,\r\n    SELECT_ADDRESS_INIT,\r\n    SELECT_ADDRESS_SUCCESS,\r\n    SELECT_ADDRESS_ERROR,\r\n    DELETE_ADDRESS_INIT,\r\n    DELETE_ADDRESS_SUCCESS,\r\n    DELETE_ADDRESS_ERROR\r\n} from './constants'\r\n\r\nexport function updateAddress (payload) {\r\n    return {\r\n        type: UPDATE_ADDRESS_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateAddressSuccess (payload) {\r\n    return {\r\n        type: UPDATE_ADDRESS_SUCCESS,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateAddressError (payload) {\r\n    return {\r\n        type: UPDATE_ADDRESS_ERROR,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateAttributes (payload) {\r\n    return {\r\n        type: UPDATE_FIELD_ATTRIBUTE,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectAddress(payload) {\r\n    return {\r\n        type: SELECT_ADDRESS_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectAddressSuccess(payload) {\r\n    return {\r\n        type: SELECT_ADDRESS_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function selectAddressError(payload) {\r\n    return {\r\n        type: SELECT_ADDRESS_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\n/* DELETE ADDRESS */\r\nexport function deleteAddress(payload) {\r\n    return {\r\n        type: DELETE_ADDRESS_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function deleteAddressSuccess(payload) {\r\n    return {\r\n        type: DELETE_ADDRESS_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function deleteAddressError(payload) {\r\n    return {\r\n        type: DELETE_ADDRESS_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getAddressesSuccess(payload) {\r\n    return {\r\n        type: GET_ADDRESSES_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getAddressesError(payload) {\r\n    return {\r\n        type: GET_ADDRESSES_ERROR,\r\n        payload,\r\n    };\r\n}","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { GET_ADDRESSES_API, GET_LOCATIONS_API, PATH_API } from '../../Constants';\r\nimport { \r\n  GET_ADDRESSES,\r\n  SELECT_ADDRESS_INIT,\r\n  DELETE_ADDRESS_INIT,\r\n  UPDATE_ADDRESS_INIT\r\n} from './constants';\r\nimport { \r\n  selectAddressSuccess,\r\n  getAddressesSuccess,\r\n  getAddressesError, \r\n  deleteAddressSuccess,\r\n  deleteAddressError,\r\n  updateAddressSuccess,\r\n  updateAddressError\r\n} from './actions';\r\n\r\nfunction* selectAddress(action) {\r\n  const { value } = action;\r\n  \r\n  yield put(selectAddressSuccess(value));\r\n  return;\r\n}\r\n\r\nfunction* getAddresses() {\r\n  const urlAddresses = `${ PATH_API }${GET_ADDRESSES_API}`;\r\n\r\n  const response = yield call(fetch, urlAddresses, {\r\n      method: 'GET',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    const successResponse = yield call([response, response.json]);\r\n    yield put(getAddressesSuccess(successResponse));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(getAddressesError(errorResponse));\r\n}\r\n\r\nfunction* removeAddress(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n\r\n  const urlAddresses = `${ PATH_API }${GET_ADDRESSES_API}/${id}`;\r\n\r\n  const response = yield call(fetch, urlAddresses, {\r\n      method: 'DELETE',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    value.message = \"Dirección eliminada exitosamente\"; \r\n    yield put(deleteAddressSuccess(value));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(deleteAddressError(errorResponse));\r\n}\r\n\r\nfunction* updateAddress(action) {\r\n  const { value } = action;\r\n  const { id, latitude, longitude } = value ? value : {};\r\n\r\n  const addressToUpdate = {...value}\r\n\r\n  value.message = \"Dirección creada exitosamente\"; \r\n  let addressId = id ? id : \"0\";\r\n  let addressLatitude = latitude ? parseInt(latitude) : 0;\r\n  let addressLongitud = longitude ? parseInt(longitude) : 0;\r\n\r\n  let urlAddresses = `${ PATH_API }${GET_ADDRESSES_API}`;\r\n\r\n  const getResponse = yield call(fetch, `${urlAddresses}/${addressId}`, {\r\n    method: 'GET'\r\n  });\r\n\r\n  addressToUpdate.longitude = addressLongitud;\r\n  addressToUpdate.latitude = addressLatitude;\r\n\r\n  const callBody = {\r\n    method: 'POST',\r\n    body: JSON.stringify(addressToUpdate)\r\n  }\r\n\r\n  if (getResponse.status >= 200 && getResponse.status < 300) {\r\n    value.message = \"Dirección actualizada exitosamente\"; \r\n    callBody.method = 'PUT';\r\n    urlAddresses = `${urlAddresses}/${id}`\r\n  }\r\n\r\n  const response = yield call(fetch, urlAddresses, {\r\n      ...callBody\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    yield put(updateAddressSuccess(value));\r\n    return;\r\n  }\r\n  \r\n  const errorResponse = yield call([response, response.json]);\r\n  value.message = \"Hubo un problema creando los cambios\"; \r\n  yield put(updateAddressError(errorResponse));\r\n}\r\n\r\nexport function* watchAddress() {\r\n  yield takeLatest(GET_ADDRESSES, getAddresses);\r\n  yield takeLatest(SELECT_ADDRESS_INIT, selectAddress);\r\n  yield takeLatest(DELETE_ADDRESS_INIT, removeAddress);\r\n  yield takeLatest(UPDATE_ADDRESS_INIT, updateAddress);\r\n  \r\n}\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport \"./style.css\";\r\nimport ComponentAddress from './component';\r\n\r\nimport reducer from \"./reducer\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchAddress } from \"./saga\";\r\nimport { Provider } from 'react-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    reducer\r\n});\r\n\r\nconst formStore = createStore(rootReducer);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(watchAddress);\r\n\r\nexport default class AddressPage extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={formStore}>\r\n                <Provider store={store}>\r\n                    <Container className='main-wrapper address' >\r\n                        <h1> Lista de Direcciones </h1>\r\n                        <ComponentAddress />\r\n                    </Container>\r\n                </Provider>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\n","import { createStructuredSelector } from 'reselect';\r\n\r\nexport const getZones = (state) => state.zones;\r\nexport const getSelectedZone = (state) => state.selectedZone;\r\nexport const getDeleteZone = (state) => state.deleteSuccess;\r\nexport const getFormZone = (state) => state.formZone;\r\nexport const getTotalZones = (state) => state.totalZones;\r\n\r\nexport const addressSelector = createStructuredSelector({\r\n    zones: getZones,\r\n    selectedZone: getSelectedZone,\r\n    deleteSuccess: getDeleteZone,\r\n    formZone: getFormZone\r\n});","export const FILLER_TEXT = 'But I must';\r\nexport const GET_ZONES = '@zones/GET_ZONES_INIT';\r\nexport const GET_ZONES_ERROR = '@zones/GET_ZONES_ERROR';\r\nexport const GET_ZONES_SUCCESS = '@zones/GET_ZONES_SUCCESS';\r\n\r\nexport const UPDATE_ZONE_INIT = '@zones/UPDATE_ZONE_INIT';\r\nexport const UPDATE_ZONE_ERROR = '@zones/UPDATE_ZONE_ERROR';\r\nexport const UPDATE_ZONE_SUCCESS = '@zones/UPDATE_ZONE_SUCCESS';\r\nexport const CANCEL_ZONE_INIT = '@zones/CANCEL_ZONE_INIT';\r\n\r\nexport const UPDATE_FIELD_ATTRIBUTE = '@zones/UPDATE_FIELD_ATTRIBUTE';\r\n\r\nexport const SELECT_ZONE_INIT = '@zones/SELECT_ZONE_INIT';\r\nexport const SELECT_ZONE_SUCCESS = '@zones/SELECT_ZONE_SUCCESS';\r\nexport const SELECT_ZONE_ERROR = '@zones/SELECT_ZONE_ERROR';\r\n\r\nexport const DELETE_ZONE_INIT = '@zones/DELETE_ZONE_INIT';\r\nexport const DELETE_ZONE_SUCCESS = '@zones/DELETE_ZONE_SUCCESS';\r\nexport const DELETE_ZONE_ERROR = '@zones/DELETE_ZONE_ERROR';\r\n\r\nexport const FILTER_ZONE_INIT = '@sector/FILTER_ZONE_INIT';\r\nexport const FILTER_ZONE_SUCCESS = '@bases/FILTER_ZONE_SUCCESS';\r\nexport const FILTER_ZONE_ERROR = '@bases/FILTER_ZONE_ERROR';\r\n\r\nexport const ORDER_ZONE_INIT = '@bases/ORDER_ZONE_INIT';\r\nexport const ORDER_ZONE_SUCCESS = '@bases/ORDER_ZONE_SUCCESS';\r\nexport const ORDER_ZONE_ERROR = '@bases/ORDER_ZONE_ERROR';\r\n\r\nexport const getZoneButton = (handlerSafe) => {\r\n    return [\r\n        {\r\n            label: \"Nueva Zona\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            onClick: handlerSafe\r\n        }\r\n    ]\r\n}\r\n\r\nexport const getZoneActions = (handlerSave, handlerClean, handlerRemove) => {\r\n    return [\r\n        {\r\n            label: \"Guardar Cambios\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerSave\r\n        },\r\n        {\r\n            label: \"Eliminar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"default\",\r\n            variant: \"outlined\",\r\n            onClick: handlerRemove\r\n        },\r\n        {\r\n            label: \"Cancelar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"secondary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerClean\r\n        },\r\n    ];\r\n}\r\n\r\nexport const ZONE_FORMS = [\r\n    {\r\n        label: \"Identificación\",\r\n        name: \"id\",\r\n        placeholder: \"Identificación del Zona\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: true\r\n    },\r\n    {\r\n        label: \"Descripción\",\r\n        name: \"description\",\r\n        placeholder: \"Descripción\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Tiempo de ruta\",\r\n        name: \"route_time\",\r\n        placeholder: \"Tiempo de ruta\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"number\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    \r\n]\r\nexport const BREAD_PATH = [\r\n    { path: \"/\", label: \"Inicio\" },\r\n    { path: \"/bases\", label: \"Bases\" },\r\n]\r\n\r\nexport const ZONE_HEADERS = [\r\n    {label: \" \", column: \"\"}, \r\n    {label: \"id\", column: \"id\"}, \r\n    {label: \"descripción\", column: \"description\"},\r\n    {label: \"Tiempo de ruta\", column: \"routeTime\"},\r\n    {label: \"Fecha Creación\", column: \"createdDate\"},\r\n    {label: \"Fecha Actualización\", column: \"updatedDate\"},\r\n];\r\n\r\nexport const ZONE_LIST = [\r\n    [\"12003\", \"Direccción beta\", 1, 0],\r\n    [\"12004\", \"Zona alfa\", 0, 1],\r\n    [\"12005\", \"Gamma\", 0, 1]\r\n]\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomForm from \"../../components/customform/customform\";\r\nimport CustomTable from \"../../components/table/table\";\r\nimport { getZones, getSelectedZone, getDeleteZone, getFormZone, getTotalZones } from \"./selectors\";\r\nimport { Spinner, Alert } from 'react-bootstrap';\r\nimport { \r\n  getZoneActions,\r\n  getZoneButton,\r\n  GET_ZONES,\r\n  SELECT_ZONE_INIT, \r\n  ZONE_FORMS, \r\n  DELETE_ZONE_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_ZONE_INIT,\r\n  CANCEL_ZONE_INIT,\r\n  FILTER_ZONE_INIT,\r\n} from './constants'\r\n\r\n\r\nclass ComponentZone extends Component {\r\n\r\n  componentWillMount () {\r\n    const { getZones } = this.props;\r\n    getZones();\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    const { getZones } = nextProps;\r\n\r\n    if (nextProps.deleteZone && this.props.deleteZone !== nextProps.deleteZone) {\r\n      getZones();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      zoneHeaders, \r\n      zones,\r\n      selectZone,\r\n      selectedZone,\r\n      removeZone,\r\n      deleteZone,\r\n      updateAttributes,\r\n      updatedZone,\r\n      updateZone,\r\n      cancelZone,\r\n      totalZones,\r\n      filterZones,\r\n  } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        { deleteZone ?\r\n          <Alert  variant=\"success\">\r\n            {deleteZone.message}\r\n          </Alert>\r\n          : ''\r\n        }\r\n\r\n        {!selectedZone ? \r\n          <div className='zone-list_wrapper'>\r\n          { zones && !zones.emprty ? \r\n            <CustomTable \r\n              onSelectRow={selectZone} \r\n              className=\"zones-table\" \r\n              items={zones} \r\n              headers={zoneHeaders}\r\n              subObject=\"sectors\" \r\n              subLabel=\"Sectores\"\r\n              totalItems={totalZones}\r\n              filterTable = {filterZones}\r\n              buttons={getZoneButton(() => selectZone({}))} \r\n            /> :\r\n            <Spinner className=\"spinner-wrapper\" animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          }\r\n          \r\n        </div> :  \r\n        <div className='zone-form_wrapper'>\r\n          <CustomForm \r\n            formName=\"customZone\" \r\n            values={ selectedZone } \r\n            items={ ZONE_FORMS } \r\n            updateAction = { updateAttributes }\r\n            buttons={\r\n              getZoneActions(\r\n                () => updateZone(updatedZone), \r\n                () => cancelZone(), \r\n                () => removeZone(selectedZone)\r\n            )} \r\n            />\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    zoneHeaders: state.zoneHeaders,\r\n    zones: getZones(state),\r\n    selectedZone: getSelectedZone(state),\r\n    deleteZone: getDeleteZone(state),\r\n    updatedZone: getFormZone(state),\r\n    totalZones: getTotalZones(state),\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return { \r\n    getZones: () => dispatch({ type: GET_ZONES, value: 1 }),\r\n    updateAttributes: (value) => dispatch({ type: UPDATE_FIELD_ATTRIBUTE, value }),\r\n    selectZone: (zone) => dispatch({ type: SELECT_ZONE_INIT, value: zone }),\r\n    removeZone: (zone) => dispatch({ type: DELETE_ZONE_INIT, value: zone }),\r\n    updateZone: (zone) => dispatch({ type: UPDATE_ZONE_INIT, value: zone }),\r\n    cancelZone: () => dispatch({ type: CANCEL_ZONE_INIT}),\r\n    filterZones: (prop) => dispatch({ type: FILTER_ZONE_INIT, value: prop }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ComponentZone);","import { \r\n  SELECT_ZONE_SUCCESS,\r\n  SELECT_ZONE_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_ZONE_SUCCESS,\r\n  UPDATE_ZONE_ERROR,\r\n  CANCEL_ZONE_INIT,\r\n  ZONE_LIST,\r\n  ZONE_HEADERS,\r\n  GET_ZONES_SUCCESS,\r\n  DELETE_ZONE_SUCCESS,\r\n  DELETE_ZONE_ERROR,\r\n  ORDER_ZONE_SUCCESS,\r\n  FILTER_ZONE_SUCCESS,\r\n} from './constants';\r\n  \r\n  export const initialState = {\r\n    zones: ZONE_LIST,\r\n    zoneHeaders: ZONE_HEADERS,\r\n    selectedZone: false, \r\n    deleteSuccess: false,\r\n    totalZones: [],\r\n    formZone: {}\r\n  };\r\n  \r\n  const reducer = (state = initialState, action) => {\r\n    const newState = { ...state };\r\n    const { payload } = action;\r\n    const { zones } = payload ? payload : { zones: false };\r\n\r\n    switch (action.type) {\r\n      case GET_ZONES_SUCCESS:\r\n          newState.zones = zones;\r\n          newState.totalZones = zones;\r\n\r\n          return {\r\n            ...newState\r\n          };\r\n      case SELECT_ZONE_INIT:    \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case SELECT_ZONE_SUCCESS:  \r\n        newState.selectedZone = payload;   \r\n        newState.deleteSuccess = false;  \r\n        newState.formZone = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n        \r\n      case DELETE_ZONE_SUCCESS: \r\n        newState.selectedZone = false; \r\n        newState.deleteSuccess = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case UPDATE_FIELD_ATTRIBUTE:\r\n        const { value: { fieldName, fieldValue } } = action;\r\n        let newFormObject = {...newState.selectedZone};\r\n        newFormObject[fieldName] = fieldValue;\r\n        newState.deleteSuccess = false;\r\n        newState.formZone = newFormObject;\r\n        newState.selectedZone = newFormObject;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n      case UPDATE_ZONE_SUCCESS:\r\n        newState.deleteSuccess = payload;\r\n        newState.formZone = {};\r\n        newState.selectedZone = false;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n\r\n        case UPDATE_ZONE_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formZone = {};\r\n          newState.selectedZone = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        \r\n        case DELETE_ZONE_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formZone = {};\r\n          newState.selectedZone = false;\r\n    \r\n          return {\r\n            ...newState\r\n          };  \r\n\r\n        case CANCEL_ZONE_INIT:\r\n          newState.deleteSuccess = false;\r\n          newState.formZone = {};\r\n          newState.selectedZone = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n      case ORDER_ZONE_SUCCESS:\r\n            newState.deleteSuccess = false;\r\n            newState.formZone = {};\r\n            newState.selectedZone = false;\r\n            newState.zones = zones;\r\n            return {\r\n              ...newState\r\n            };\r\n      case FILTER_ZONE_SUCCESS:\r\n              newState.deleteSuccess = false;\r\n              newState.formZone = {};\r\n              newState.selectedZone = false;\r\n              newState.zones = zones;\r\n              return {\r\n                ...newState\r\n              };\r\n      default:\r\n        return {\r\n          ...newState\r\n        };\r\n    }\r\n  };\r\n  \r\n  export default reducer;\r\n  ","import {\r\n    UPDATE_FIELD_ATTRIBUTE,\r\n    UPDATE_ZONE_INIT,\r\n    UPDATE_ZONE_SUCCESS,\r\n    UPDATE_ZONE_ERROR,\r\n    GET_ZONES_SUCCESS,\r\n    GET_ZONES_ERROR,\r\n    SELECT_ZONE_INIT,\r\n    SELECT_ZONE_SUCCESS,\r\n    SELECT_ZONE_ERROR,\r\n    DELETE_ZONE_INIT,\r\n    DELETE_ZONE_SUCCESS,\r\n    DELETE_ZONE_ERROR,\r\n    FILTER_ZONE_INIT,\r\n    FILTER_ZONE_SUCCESS,\r\n    FILTER_ZONE_ERROR,\r\n    ORDER_ZONE_INIT,\r\n    ORDER_ZONE_SUCCESS,\r\n    ORDER_ZONE_ERROR,\r\n} from './constants'\r\n\r\nexport function updateZone (payload) {\r\n    return {\r\n        type: UPDATE_ZONE_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateZoneSuccess (payload) {\r\n    return {\r\n        type: UPDATE_ZONE_SUCCESS,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateZoneError (payload) {\r\n    return {\r\n        type: UPDATE_ZONE_ERROR,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateAttributes (payload) {\r\n    return {\r\n        type: UPDATE_FIELD_ATTRIBUTE,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectZone(payload) {\r\n    return {\r\n        type: SELECT_ZONE_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectZoneSuccess(payload) {\r\n    return {\r\n        type: SELECT_ZONE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function selectZoneError(payload) {\r\n    return {\r\n        type: SELECT_ZONE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\n/* DELETE ZONE */\r\nexport function deleteZone(payload) {\r\n    return {\r\n        type: DELETE_ZONE_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function deleteZoneSuccess(payload) {\r\n    return {\r\n        type: DELETE_ZONE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function deleteZoneError(payload) {\r\n    return {\r\n        type: DELETE_ZONE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getZonesSuccess(payload) {\r\n    return {\r\n        type: GET_ZONES_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getZonesError(payload) {\r\n    return {\r\n        type: GET_ZONES_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterZonesInit(payload) {\r\n    return {\r\n        type: FILTER_ZONE_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterZonesSuccess(payload) {\r\n    return {\r\n        type: FILTER_ZONE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterZonesError(payload) {\r\n    return {\r\n        type: FILTER_ZONE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderZonesInit(payload) {\r\n    return {\r\n        type: ORDER_ZONE_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderZonesSuccess(payload) {\r\n    return {\r\n        type: ORDER_ZONE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderZonesError(payload) {\r\n    return {\r\n        type: ORDER_ZONE_ERROR,\r\n        payload,\r\n    };\r\n}","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { GET_ZONES_API, GET_LOCATIONS_API, PATH_API } from '../../Constants';\r\nimport { \r\n  GET_ZONES,\r\n  SELECT_ZONE_INIT,\r\n  DELETE_ZONE_INIT,\r\n  UPDATE_ZONE_INIT,\r\n  FILTER_ZONE_INIT,\r\n  ORDER_ZONE_INIT\r\n} from './constants';\r\nimport { \r\n  selectZoneSuccess,\r\n  getZonesSuccess,\r\n  getZonesError, \r\n  deleteZoneSuccess,\r\n  deleteZoneError,\r\n  updateZoneSuccess,\r\n  updateZoneError,\r\n  filterZonesSuccess,\r\n  orderZonesSuccess\r\n} from './actions';\r\n\r\nfunction* selectZone(action) {\r\n  const { value } = action;\r\n  \r\n  yield put(selectZoneSuccess(value));\r\n  return;\r\n}\r\n\r\nfunction* getZones() {\r\n  const urlZones = `${ PATH_API }${GET_ZONES_API}`;\r\n\r\n  const response = yield call(fetch, urlZones, {\r\n      method: 'GET',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    const successResponse = yield call([response, response.json]);\r\n    yield put(getZonesSuccess(successResponse));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(getZonesError(errorResponse));\r\n}\r\n\r\nfunction* removeZone(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n\r\n  const urlZones = `${ PATH_API }${GET_ZONES_API}/${id}`;\r\n\r\n  const response = yield call(fetch, urlZones, {\r\n      method: 'DELETE',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    value.message = \"Zona eliminada exitosamente\"; \r\n    yield put(deleteZoneSuccess(value));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(deleteZoneError(errorResponse));\r\n}\r\n\r\nfunction* updateZone(action) {\r\n  const { value } = action;\r\n  const { id, route_time } = value ? value : {};\r\n\r\n  const zoneToUpdate = {\r\n    ...value\r\n  }\r\n\r\n  value.message = \"Zona creada exitosamente\"; \r\n  let zoneId = id ? id : \"0\";\r\n  let zoneTime = route_time ? parseInt(route_time) : 0;\r\n  let urlZones = `${ PATH_API }${GET_ZONES_API}`;\r\n\r\n  zoneToUpdate.route_time = zoneTime;\r\n\r\n  const getResponse = yield call(fetch, `${urlZones}/${zoneId}`, {\r\n    method: 'GET'\r\n  });\r\n\r\n  const callBody = {\r\n    method: 'POST',\r\n    body: JSON.stringify(zoneToUpdate)\r\n  }\r\n\r\n  if (getResponse.status >= 200 && getResponse.status < 300) {\r\n    value.message = \"Dirección actualizada exitosamente\"; \r\n    callBody.method = 'PUT';\r\n    urlZones = `${urlZones}/${id}`\r\n  } else {\r\n    zoneToUpdate.sectors_ids = [];\r\n  }\r\n\r\n  const response = yield call(fetch, urlZones, {\r\n      ...callBody\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    yield put(updateZoneSuccess(value));\r\n    return;\r\n  }\r\n  \r\n  const errorResponse = yield call([response, response.json]);\r\n  value.message = \"Hubo un problema creando los cambios\"; \r\n  yield put(updateZoneError(errorResponse));\r\n}\r\n\r\nfunction* orderZone(action) { \r\n  const { value: {column, items, sense} } = action;\r\n\r\n  items.sort((a,b) => {\r\n    if(a[column] < b[column]) {\r\n      return sense;\r\n    }\r\n    if(a[column] > b[column]) {\r\n      return -1*sense;\r\n    }\r\n    return 0;\r\n  })\r\n\r\n  const response = {\r\n    zones: items \r\n  }\r\n\r\n  yield put(orderZonesSuccess(response));\r\n}\r\n\r\nfunction* filterZone(action) { \r\n  const { value: {fieldValue, items} } = action;\r\n  \r\n  let filtered = items.filter(item => {\r\n    let itemFiltered = false;\r\n\r\n    Object.keys(item).map(key => {\r\n      const keyToFilter = item[key] && typeof item[key] !== 'object' ? item[key].toString().toLowerCase() : \"\"; \r\n      itemFiltered = itemFiltered || keyToFilter.includes(fieldValue);\r\n      return true;\r\n    })\r\n\r\n    return itemFiltered;\r\n  });\r\n\r\n  const response = {\r\n    zones: filtered\r\n  }\r\n\r\n  yield put(filterZonesSuccess(response));\r\n}\r\n\r\nexport function* watchZone() {\r\n  yield takeLatest(GET_ZONES, getZones);\r\n  yield takeLatest(SELECT_ZONE_INIT, selectZone);\r\n  yield takeLatest(DELETE_ZONE_INIT, removeZone);\r\n  yield takeLatest(UPDATE_ZONE_INIT, updateZone);\r\n  yield takeLatest(ORDER_ZONE_INIT, orderZone);\r\n  yield takeLatest(FILTER_ZONE_INIT, filterZone);\r\n}\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport \"./style.css\";\r\nimport ComponentZone from './component';\r\n\r\nimport reducer from \"./reducer\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchZone } from \"./saga\";\r\nimport { Provider } from 'react-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport CustomBreadcrumb from \"../../components/breadcrumb/breadcrumb\";\r\nimport { BREAD_PATH, } from './constants';\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    reducer\r\n});\r\n\r\nconst formStore = createStore(rootReducer);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(watchZone);\r\n\r\nexport default class ZonePage extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={formStore}>\r\n                <Provider store={store}>\r\n                    <Container className='main-wrapper zone' >\r\n                        <CustomBreadcrumb route={BREAD_PATH} current=\"Zonas\"/>\r\n                        <h1> Lista de Zonas </h1>\r\n                        <ComponentZone />\r\n                    </Container>\r\n                </Provider>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\n","import { createStructuredSelector } from 'reselect';\r\n\r\nexport const getTypes = (state) => state.types;\r\nexport const getSelectedType = (state) => state.selectedType;\r\nexport const getDeleteType = (state) => state.deleteSuccess;\r\nexport const getFormType = (state) => state.formType;\r\nexport const getTotalTypes = (state) => state.totalTypes;\r\n\r\nexport const typeSelector = createStructuredSelector({\r\n    types: getTypes,\r\n    selectedType: getSelectedType,\r\n    deleteSuccess: getDeleteType,\r\n    formType: getFormType\r\n});","export const FILLER_TEXT = 'But I must';\r\nexport const GET_TYPES = '@types/GET_TYPES_INIT';\r\nexport const GET_TYPES_ERROR = '@types/GET_TYPES_ERROR';\r\nexport const GET_TYPES_SUCCESS = '@types/GET_TYPES_SUCCESS';\r\n\r\nexport const UPDATE_TYPE_INIT = '@types/UPDATE_TYPE_INIT';\r\nexport const UPDATE_TYPE_ERROR = '@types/UPDATE_TYPE_ERROR';\r\nexport const UPDATE_TYPE_SUCCESS = '@types/UPDATE_TYPE_SUCCESS';\r\nexport const CANCEL_TYPE_INIT = '@types/CANCEL_TYPE_INIT';\r\n\r\nexport const UPDATE_FIELD_ATTRIBUTE = '@types/UPDATE_FIELD_ATTRIBUTE';\r\n\r\nexport const SELECT_TYPE_INIT = '@types/SELECT_TYPE_INIT';\r\nexport const SELECT_TYPE_SUCCESS = '@types/SELECT_TYPE_SUCCESS';\r\nexport const SELECT_TYPE_ERROR = '@types/SELECT_TYPE_ERROR';\r\n\r\nexport const DELETE_TYPE_INIT = '@types/DELETE_TYPE_INIT';\r\nexport const DELETE_TYPE_SUCCESS = '@types/DELETE_TYPE_SUCCESS';\r\nexport const DELETE_TYPE_ERROR = '@types/DELETE_TYPE_ERROR';\r\n\r\nexport const FILTER_TYPE_INIT = '@types/FILTER_TYPE_INIT';\r\nexport const FILTER_TYPE_SUCCESS = '@types/FILTER_TYPE_SUCCESS';\r\nexport const FILTER_TYPE_ERROR = '@types/FILTER_TYPE_ERROR';\r\n\r\nexport const ORDER_TYPE_INIT = '@types/ORDER_TYPE_INIT';\r\nexport const ORDER_TYPE_SUCCESS = '@types/ORDER_TYPE_SUCCESS';\r\nexport const ORDER_TYPE_ERROR = '@types/ORDER_TYPE_ERROR';\r\n\r\n\r\nexport const getTypeButton = (handlerSafe) => {\r\n    return [\r\n        {\r\n            label: \"Nuevo Tipo\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            onClick: handlerSafe\r\n        }\r\n    ]\r\n}\r\n\r\nexport const getTypeActions = (handlerSave, handlerClean, handlerRemove) => {\r\n    return [\r\n        {\r\n            label: \"Guardar Cambios\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerSave\r\n        },\r\n        {\r\n            label: \"Eliminar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"default\",\r\n            variant: \"outlined\",\r\n            onClick: handlerRemove\r\n        },\r\n        {\r\n            label: \"Cancelar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"secondary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerClean\r\n        },\r\n    ];\r\n}\r\n\r\nexport const BREAD_PATH = [\r\n    { path: \"/\", label: \"Inicio\" },\r\n]\r\n\r\nexport const TYPE_FORMS = [\r\n    {\r\n        label: \"Identificación\",\r\n        name: \"id\",\r\n        placeholder: \"Identificación del Zona\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: true\r\n    },\r\n    {\r\n        label: \"Descripción\",\r\n        name: \"description\",\r\n        placeholder: \"Descripción\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    }\r\n]\r\n\r\nexport const TYPE_HEADERS = [\r\n    {label: \" \", column: \"\"}, \r\n    {label: \"id\", column: \"id\"}, \r\n    {label: \"descripción\", column: \"description\"},\r\n    {label: \"Fecha Creación\", column: \"createdDate\"},\r\n    {label: \"Fecha Actualización\", column: \"updatedDate\"},\r\n];\r\n\r\nexport const TYPE_LIST = [\r\n    [\"12003\", \"Direccción beta\", 1, 0],\r\n    [\"12004\", \"Zona alfa\", 0, 1],\r\n    [\"12005\", \"Gamma\", 0, 1]\r\n]\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomForm from \"../../components/customform/customform\";\r\nimport CustomTable from \"../../components/table/table\";\r\nimport { getTypes, getSelectedType, getDeleteType, getFormType, getTotalTypes } from \"./selectors\";\r\nimport { Spinner, Alert } from 'react-bootstrap';\r\nimport { \r\n  getTypeActions,\r\n  getTypeButton,\r\n  GET_TYPES,\r\n  SELECT_TYPE_INIT, \r\n  TYPE_FORMS, \r\n  DELETE_TYPE_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_TYPE_INIT,\r\n  CANCEL_TYPE_INIT,\r\n  ORDER_TYPE_INIT,\r\n  FILTER_TYPE_INIT,\r\n} from './constants'\r\n\r\n\r\nclass ComponentType extends Component {\r\n\r\n  componentWillMount () {\r\n    const { getTypes } = this.props;\r\n    getTypes();\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    const { getTypes } = nextProps;\r\n\r\n    if (nextProps.deleteType && this.props.deleteType !== nextProps.deleteType) {\r\n      getTypes();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      typeHeaders, \r\n      types,\r\n      selectType,\r\n      selectedType,\r\n      removeType,\r\n      deleteType,\r\n      updateAttributes,\r\n      updatedType,\r\n      updateType,\r\n      cancelType,\r\n      orderType,\r\n      filterType,\r\n      totalTypes\r\n  } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        { deleteType ?\r\n          <Alert  variant=\"success\">\r\n            {deleteType.message}\r\n          </Alert>\r\n          : ''\r\n        }\r\n\r\n        {!selectedType ? \r\n          <div className='type-list_wrapper'>\r\n          { types && !types.emprty ? \r\n            <CustomTable \r\n              onSelectRow={selectType} \r\n              className=\"types-table\" \r\n              items={types}\r\n              totalItems={totalTypes}\r\n              orderTable={orderType}\r\n              headers={typeHeaders}\r\n              filterTable = {filterType}\r\n              paginator = {true}\r\n              buttons={getTypeButton(() => selectType({}))} \r\n            /> :\r\n            <Spinner className=\"spinner-wrapper\" animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          }\r\n          \r\n        </div> :  \r\n        <div className='type-form_wrapper'>\r\n          <CustomForm \r\n            formName=\"customType\" \r\n            values={ selectedType } \r\n            items={ TYPE_FORMS } \r\n            updateAction = { updateAttributes }\r\n            buttons={\r\n              getTypeActions(\r\n                () => updateType(updatedType), \r\n                () => cancelType(), \r\n                () => removeType(selectedType)\r\n            )} \r\n            />\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    typeHeaders: state.typeHeaders,\r\n    types: getTypes(state),\r\n    selectedType: getSelectedType(state),\r\n    deleteType: getDeleteType(state),\r\n    updatedType: getFormType(state),\r\n    totalTypes: getTotalTypes(state),\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return { \r\n    getTypes: () => dispatch({ type: GET_TYPES, value: 1 }),\r\n    updateAttributes: (value) => dispatch({ type: UPDATE_FIELD_ATTRIBUTE, value }),\r\n    selectType: (typeValue) => dispatch({ type: SELECT_TYPE_INIT, value: typeValue }),\r\n    removeType: (typeValue) => dispatch({ type: DELETE_TYPE_INIT, value: typeValue }),\r\n    updateType: (typeValue) => dispatch({ type: UPDATE_TYPE_INIT, value: typeValue }),\r\n    cancelType: () => dispatch({ type: CANCEL_TYPE_INIT}),\r\n    orderType: (prop) => dispatch({ type: ORDER_TYPE_INIT, value: prop }),\r\n    filterType: (prop) => dispatch({ type: FILTER_TYPE_INIT, value: prop }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ComponentType);","import { \r\n  SELECT_TYPE_SUCCESS,\r\n  SELECT_TYPE_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_TYPE_SUCCESS,\r\n  UPDATE_TYPE_ERROR,\r\n  CANCEL_TYPE_INIT,\r\n  TYPE_LIST,\r\n  TYPE_HEADERS,\r\n  GET_TYPES_SUCCESS,\r\n  DELETE_TYPE_SUCCESS,\r\n  DELETE_TYPE_ERROR,\r\n  ORDER_TYPE_SUCCESS,\r\n  FILTER_TYPE_SUCCESS\r\n} from './constants';\r\n  \r\n  export const initialState = {\r\n    types: TYPE_LIST,\r\n    totalTypes: [],\r\n    typeHeaders: TYPE_HEADERS,\r\n    selectedType: false, \r\n    deleteSuccess: false,\r\n    formType: {}\r\n  };\r\n  \r\n  const reducer = (state = initialState, action) => {\r\n    const newState = { ...state };\r\n    const { payload } = action;\r\n    const { types } = payload ? payload : { types: false };\r\n\r\n    switch (action.type) {\r\n      case GET_TYPES_SUCCESS:\r\n          newState.types = types;\r\n          newState.totalTypes = types;\r\n          \r\n          return {\r\n            ...newState\r\n          };\r\n      case SELECT_TYPE_INIT:    \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case SELECT_TYPE_SUCCESS:  \r\n        newState.selectedType = payload;   \r\n        newState.deleteSuccess = false;  \r\n        newState.formType = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n        \r\n      case DELETE_TYPE_SUCCESS: \r\n        newState.selectedType = false; \r\n        newState.deleteSuccess = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case UPDATE_FIELD_ATTRIBUTE:\r\n        const { value: { fieldName, fieldValue } } = action;\r\n        let newFormObject = {...newState.selectedType};\r\n        newFormObject[fieldName] = fieldValue;\r\n        newState.deleteSuccess = false;\r\n        newState.formType = newFormObject;\r\n        newState.selectedType = newFormObject;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n      case UPDATE_TYPE_SUCCESS:\r\n        newState.deleteSuccess = payload;\r\n        newState.formType = {};\r\n        newState.selectedType = false;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n\r\n        case UPDATE_TYPE_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formType = {};\r\n          newState.selectedType = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        \r\n        case DELETE_TYPE_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formType = {};\r\n          newState.selectedType = false;\r\n    \r\n          return {\r\n            ...newState\r\n          };  \r\n\r\n        case CANCEL_TYPE_INIT:\r\n          newState.deleteSuccess = false;\r\n          newState.formType = {};\r\n          newState.selectedType = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        case ORDER_TYPE_SUCCESS:\r\n            newState.deleteSuccess = false;\r\n            newState.formType = {};\r\n            newState.selectedType = false;\r\n            newState.types = types;\r\n            return {\r\n              ...newState\r\n            };\r\n        case FILTER_TYPE_SUCCESS:\r\n              newState.deleteSuccess = false;\r\n              newState.formType = {};\r\n              newState.selectedType = false;\r\n              newState.types = types;\r\n              return {\r\n                ...newState\r\n              };            \r\n      default:\r\n        return {\r\n          ...newState\r\n        };\r\n    }\r\n  };\r\n  \r\n  export default reducer;\r\n  ","import {\r\n    UPDATE_FIELD_ATTRIBUTE,\r\n    UPDATE_TYPE_INIT,\r\n    UPDATE_TYPE_SUCCESS,\r\n    UPDATE_TYPE_ERROR,\r\n    GET_TYPES_SUCCESS,\r\n    GET_TYPES_ERROR,\r\n    SELECT_TYPE_INIT,\r\n    SELECT_TYPE_SUCCESS,\r\n    SELECT_TYPE_ERROR,\r\n    DELETE_TYPE_INIT,\r\n    DELETE_TYPE_SUCCESS,\r\n    DELETE_TYPE_ERROR,\r\n    FILTER_TYPE_INIT,\r\n    FILTER_TYPE_SUCCESS,\r\n    FILTER_TYPE_ERROR,\r\n    ORDER_TYPE_ERROR,\r\n    ORDER_TYPE_SUCCESS,\r\n    ORDER_TYPE_INIT\r\n} from './constants'\r\n\r\nexport function updateType (payload) {\r\n    return {\r\n        type: UPDATE_TYPE_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateTypeSuccess (payload) {\r\n    return {\r\n        type: UPDATE_TYPE_SUCCESS,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateTypeError (payload) {\r\n    return {\r\n        type: UPDATE_TYPE_ERROR,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateAttributes (payload) {\r\n    return {\r\n        type: UPDATE_FIELD_ATTRIBUTE,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectType(payload) {\r\n    return {\r\n        type: SELECT_TYPE_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectTypeSuccess(payload) {\r\n    return {\r\n        type: SELECT_TYPE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function selectTypeError(payload) {\r\n    return {\r\n        type: SELECT_TYPE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\n/* DELETE BASE */\r\nexport function deleteType(payload) {\r\n    return {\r\n        type: DELETE_TYPE_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function deleteTypeSuccess(payload) {\r\n    return {\r\n        type: DELETE_TYPE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function deleteTypeError(payload) {\r\n    return {\r\n        type: DELETE_TYPE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getTypesSuccess(payload) {\r\n    return {\r\n        type: GET_TYPES_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getTypesError(payload) {\r\n    return {\r\n        type: GET_TYPES_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterTypesInit(payload) {\r\n    return {\r\n        type: FILTER_TYPE_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterTypesSuccess(payload) {\r\n    return {\r\n        type: FILTER_TYPE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterTypesError(payload) {\r\n    return {\r\n        type: FILTER_TYPE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderTypesInit(payload) {\r\n    return {\r\n        type: ORDER_TYPE_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderTypesSuccess(payload) {\r\n    return {\r\n        type: ORDER_TYPE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderTypesError(payload) {\r\n    return {\r\n        type: ORDER_TYPE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { GET_TYPES_API, PATH_API, GET_SECTORS_API } from '../../Constants';\r\nimport { \r\n  GET_TYPES,\r\n  SELECT_TYPE_INIT,\r\n  DELETE_TYPE_INIT,\r\n  UPDATE_TYPE_INIT,\r\n  ORDER_TYPE_INIT, \r\n  FILTER_TYPE_INIT\r\n} from './constants';\r\nimport { \r\n  selectTypeSuccess,\r\n  getTypesSuccess,\r\n  getTypesError, \r\n  deleteTypeSuccess,\r\n  deleteTypeError,\r\n  updateTypeSuccess,\r\n  updateTypeError,\r\n  orderTypesSuccess,\r\n  filterTypesSuccess\r\n} from './actions';\r\n\r\nfunction* selectType(action) {\r\n  const { value } = action;\r\n\r\n  yield put(selectTypeSuccess(value));\r\n  return;\r\n}\r\n\r\nfunction* getTypes() {\r\n  const urlTypes = `${ PATH_API }${GET_TYPES_API}`;\r\n\r\n  const response = yield call(fetch, urlTypes, {\r\n      method: 'GET',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    const successResponse = yield call([response, response.json]);\r\n\r\n    yield put(getTypesSuccess(successResponse));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(getTypesError(errorResponse));\r\n}\r\n\r\nfunction* removeType(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n\r\n  const urlTypes = `${ PATH_API }${GET_TYPES_API}/${id}`;\r\n\r\n  const response = yield call(fetch, urlTypes, {\r\n      method: 'DELETE',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    value.message = \"Dirección eliminada exitosamente\"; \r\n    yield put(deleteTypeSuccess(value));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(deleteTypeError(errorResponse));\r\n}\r\n\r\nfunction* updateType(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n  \r\n  const typeToUpdate = { ...value };\r\n\r\n  value.message = \"Dirección creada exitosamente\"; \r\n  let typeId = id ? id : \"0\";\r\n  let urlTypes = `${ PATH_API }${GET_TYPES_API}`;\r\n\r\n  const getResponse = yield call(fetch, `${urlTypes}/${typeId}`, {\r\n    method: 'GET'\r\n  });\r\n\r\n  const callBody = {\r\n    method: 'POST',\r\n    body: JSON.stringify(typeToUpdate)\r\n  }\r\n\r\n  if (getResponse.status >= 200 && getResponse.status < 300) {\r\n    value.message = \"Dirección actualizada exitosamente\"; \r\n    callBody.method = 'PUT';\r\n    urlTypes = `${urlTypes}/${id}`\r\n  }\r\n\r\n  const response = yield call(fetch, urlTypes, {\r\n      ...callBody\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    yield put(updateTypeSuccess(value));\r\n    return;\r\n  }\r\n  \r\n  const errorResponse = yield call([response, response.json]);\r\n  value.message = \"Hubo un problema creando los cambios\"; \r\n  yield put(updateTypeError(errorResponse));\r\n}\r\n\r\nfunction* orderType(action) { \r\n  const { value: {column, items, sense} } = action;\r\n\r\n  items.sort((a,b) => {\r\n    if(a[column] < b[column]) {\r\n      return sense;\r\n    }\r\n    if(a[column] > b[column]) {\r\n      return -1*sense;\r\n    }\r\n    return 0;\r\n  })\r\n\r\n  const response = {\r\n    types: items \r\n  }\r\n\r\n  yield put(orderTypesSuccess(response));\r\n}\r\n\r\nfunction* filterType(action) { \r\n  const { value: {fieldValue, items} } = action;\r\n  \r\n  let filtered = items.filter(item => {\r\n    let itemFiltered = false;\r\n\r\n    Object.keys(item).map(key => {\r\n      const keyToFilter = item[key] && typeof item[key] !== 'object' ? item[key].toString().toLowerCase() : \"\"; \r\n      itemFiltered = itemFiltered || keyToFilter.includes(fieldValue);\r\n      return true;\r\n    })\r\n\r\n    return itemFiltered;\r\n  });\r\n\r\n  const response = {\r\n    types: filtered\r\n  }\r\n\r\n  yield put(filterTypesSuccess(response));\r\n}\r\n\r\nexport function* watchType() {\r\n  yield takeLatest(GET_TYPES, getTypes);\r\n  yield takeLatest(SELECT_TYPE_INIT, selectType);\r\n  yield takeLatest(DELETE_TYPE_INIT, removeType);\r\n  yield takeLatest(UPDATE_TYPE_INIT, updateType);\r\n  yield takeLatest(ORDER_TYPE_INIT, orderType);\r\n  yield takeLatest(FILTER_TYPE_INIT, filterType);\r\n}\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport \"./style.css\";\r\nimport ComponentType from './component';\r\n\r\nimport reducer from \"./reducer\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchType } from \"./saga\";\r\nimport { Provider } from 'react-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport CustomBreadcrumb from \"../../components/breadcrumb/breadcrumb\";\r\nimport { BREAD_PATH, } from './constants';\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    reducer\r\n});\r\n\r\nconst formStore = createStore(rootReducer);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(watchType);\r\n\r\nexport default class TypePage extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={formStore}>\r\n                <Provider store={store}>\r\n                    <Container className='main-wrapper type' >\r\n                        <CustomBreadcrumb route={BREAD_PATH} current=\"Types\"/>\r\n                        <h1> Lista de Types </h1>\r\n                        <ComponentType />\r\n                    </Container>\r\n                </Provider>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\n","import { createStructuredSelector } from 'reselect';\r\n\r\nexport const getLocations = (state) => state.locations;\r\nexport const getSelectedLocation = (state) => state.selectedLocation;\r\nexport const getDeleteLocation = (state) => state.deleteSuccess;\r\nexport const getFormLocation = (state) => state.formLocation;\r\nexport const getTotalLocations = (state) => state.totalLocations;\r\n\r\nexport const locationSelector = createStructuredSelector({\r\n    locations: getLocations,\r\n    selectedLocation: getSelectedLocation,\r\n    deleteSuccess: getDeleteLocation,\r\n    formLocation: getFormLocation\r\n});","export const FILLER_TEXT = 'But I must';\r\nexport const GET_LOCATIONS = '@locations/GET_LOCATIONS_INIT';\r\nexport const GET_LOCATIONS_ERROR = '@locations/GET_LOCATIONS_ERROR';\r\nexport const GET_LOCATIONS_SUCCESS = '@locations/GET_LOCATIONS_SUCCESS';\r\n\r\nexport const UPDATE_LOCATION_INIT = '@locations/UPDATE_LOCATION_INIT';\r\nexport const UPDATE_LOCATION_ERROR = '@locations/UPDATE_LOCATION_ERROR';\r\nexport const UPDATE_LOCATION_SUCCESS = '@locations/UPDATE_LOCATION_SUCCESS';\r\nexport const CANCEL_LOCATION_INIT = '@locations/CANCEL_LOCATION_INIT';\r\n\r\nexport const UPDATE_FIELD_ATTRIBUTE = '@locations/UPDATE_FIELD_ATTRIBUTE';\r\n\r\nexport const SELECT_LOCATION_INIT = '@locations/SELECT_LOCATION_INIT';\r\nexport const SELECT_LOCATION_SUCCESS = '@locations/SELECT_LOCATION_SUCCESS';\r\nexport const SELECT_LOCATION_ERROR = '@locations/SELECT_LOCATION_ERROR';\r\n\r\nexport const DELETE_LOCATION_INIT = '@locations/DELETE_LOCATION_INIT';\r\nexport const DELETE_LOCATION_SUCCESS = '@locations/DELETE_LOCATION_SUCCESS';\r\nexport const DELETE_LOCATION_ERROR = '@locations/DELETE_LOCATION_ERROR';\r\n\r\nexport const FILTER_LOCATION_INIT = '@locations/FILTER_LOCATION_INIT';\r\nexport const FILTER_LOCATION_SUCCESS = '@locations/FILTER_LOCATION_SUCCESS';\r\nexport const FILTER_LOCATION_ERROR = '@locations/FILTER_LOCATION_ERROR';\r\n\r\nexport const ORDER_LOCATION_INIT = '@locations/ORDER_LOCATION_INIT';\r\nexport const ORDER_LOCATION_SUCCESS = '@locations/ORDER_LOCATION_SUCCESS';\r\nexport const ORDER_LOCATION_ERROR = '@locations/ORDER_LOCATION_ERROR';\r\n\r\n\r\nexport const getLocationButton = (handlerSafe) => {\r\n    return [\r\n        {\r\n            label: \"Nueva Localización\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            onClick: handlerSafe\r\n        }\r\n    ]\r\n}\r\n\r\nexport const getLocationActions = (handlerSave, handlerClean, handlerRemove) => {\r\n    return [\r\n        {\r\n            label: \"Guardar Cambios\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerSave\r\n        },\r\n        {\r\n            label: \"Eliminar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"default\",\r\n            variant: \"outlined\",\r\n            onClick: handlerRemove\r\n        },\r\n        {\r\n            label: \"Cancelar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"secondary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerClean\r\n        },\r\n    ];\r\n}\r\n\r\nexport const BREAD_PATH = [\r\n    { path: \"/\", label: \"Inicio\" },\r\n]\r\n\r\nexport const LOCATION_FORMS = [\r\n    {\r\n        label: \"Identificación\",\r\n        name: \"id\",\r\n        placeholder: \"Identificación del Tipo\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: true\r\n    },\r\n    {\r\n        label: \"Descripción\",\r\n        name: \"description\",\r\n        placeholder: \"Descripción\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Sector\",\r\n        name: \"sector_id\",\r\n        placeholder: \"Sector\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Último nivel\",\r\n        name: \"last_level\",\r\n        placeholder: \"Último nivel\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    }\r\n]\r\n\r\nexport const LOCATION_HEADERS = [\r\n    {label: \"id\", column: \"id\"}, \r\n    {label: \"descripción\", column: \"description\"},\r\n    {label: \"Último\", column: \"last_level\"},\r\n    {label: \"Fecha Creación\", column: \"createdDate\"},\r\n    {label: \"Fecha Actualización\", column: \"updatedDate\"},\r\n    {label: \"Type\", column: \"type_id\"},\r\n    {label: \"Sector\", column: \"sector_id\"},\r\n];\r\n\r\nexport const LOCATION_LIST = [\r\n    [\"12003\", \"Direccción beta\", 1, 0],\r\n    [\"12004\", \"Zona alfa\", 0, 1],\r\n    [\"12005\", \"Gamma\", 0, 1]\r\n]\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomForm from \"../../components/customform/customform\";\r\nimport CustomTable from \"../../components/table/table\";\r\nimport { getLocations, getSelectedLocation, getDeleteLocation, getFormLocation, getTotalLocations } from \"./selectors\";\r\nimport { Spinner, Alert } from 'react-bootstrap';\r\nimport { \r\n  getLocationActions,\r\n  getLocationButton,\r\n  GET_LOCATIONS,\r\n  SELECT_LOCATION_INIT, \r\n  LOCATION_FORMS, \r\n  DELETE_LOCATION_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_LOCATION_INIT,\r\n  CANCEL_LOCATION_INIT,\r\n  ORDER_LOCATION_INIT,\r\n  FILTER_LOCATION_INIT,\r\n} from './constants'\r\n\r\n\r\nclass ComponentLocation extends Component {\r\n\r\n  componentWillMount () {\r\n    const { getLocations } = this.props;\r\n    getLocations();\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    const { getLocations } = nextProps;\r\n\r\n    if (nextProps.deleteLocation && this.props.deleteLocation !== nextProps.deleteLocation) {\r\n      getLocations();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      locationHeaders, \r\n      locations,\r\n      selectLocation,\r\n      selectedLocation,\r\n      removeLocation,\r\n      deleteLocation,\r\n      updateAttributes,\r\n      updatedLocation,\r\n      updateLocation,\r\n      cancelLocation,\r\n      orderLocation,\r\n      filterLocation,\r\n      totalLocations\r\n  } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        { deleteLocation ?\r\n          <Alert  variant=\"success\">\r\n            {deleteLocation.message}\r\n          </Alert>\r\n          : ''\r\n        }\r\n\r\n        {!selectedLocation ? \r\n          <div className='location-list_wrapper'>\r\n          { locations && !locations.emprty ? \r\n            <CustomTable \r\n              onSelectRow={selectLocation} \r\n              className=\"locations-table\" \r\n              items={locations}\r\n              totalItems={totalLocations}\r\n              orderTable={orderLocation}\r\n              headers={locationHeaders}\r\n              filterTable = {filterLocation}\r\n              paginator = {true}\r\n              buttons={getLocationButton(() => selectLocation({}))} \r\n            /> :\r\n            <Spinner className=\"spinner-wrapper\" animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          }\r\n          \r\n        </div> :  \r\n        <div className='location-form_wrapper'>\r\n          <CustomForm \r\n            formName=\"customLocation\" \r\n            values={ selectedLocation } \r\n            items={ LOCATION_FORMS } \r\n            updateAction = { updateAttributes }\r\n            buttons={\r\n              getLocationActions(\r\n                () => updateLocation(updatedLocation), \r\n                () => cancelLocation(), \r\n                () => removeLocation(selectedLocation)\r\n            )} \r\n            />\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    locationHeaders: state.locationHeaders,\r\n    locations: getLocations(state),\r\n    selectedLocation: getSelectedLocation(state),\r\n    deleteLocation: getDeleteLocation(state),\r\n    updatedLocation: getFormLocation(state),\r\n    totalLocations: getTotalLocations(state),\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return { \r\n    getLocations: () => dispatch({ type: GET_LOCATIONS, value: 1 }),\r\n    updateAttributes: (value) => dispatch({ type: UPDATE_FIELD_ATTRIBUTE, value }),\r\n    selectLocation: (location) => dispatch({ type: SELECT_LOCATION_INIT, value: location }),\r\n    removeLocation: (location) => dispatch({ type: DELETE_LOCATION_INIT, value: location }),\r\n    updateLocation: (location) => dispatch({ type: UPDATE_LOCATION_INIT, value: location }),\r\n    cancelLocation: () => dispatch({ type: CANCEL_LOCATION_INIT}),\r\n    orderLocation: (prop) => dispatch({ type: ORDER_LOCATION_INIT, value: prop }),\r\n    filterLocation: (prop) => dispatch({ type: FILTER_LOCATION_INIT, value: prop }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ComponentLocation);","import { \r\n  SELECT_LOCATION_SUCCESS,\r\n  SELECT_LOCATION_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_LOCATION_SUCCESS,\r\n  UPDATE_LOCATION_ERROR,\r\n  CANCEL_LOCATION_INIT,\r\n  LOCATION_LIST,\r\n  LOCATION_HEADERS,\r\n  GET_LOCATIONS_SUCCESS,\r\n  DELETE_LOCATION_SUCCESS,\r\n  DELETE_LOCATION_ERROR,\r\n  ORDER_LOCATION_SUCCESS,\r\n  FILTER_LOCATION_SUCCESS\r\n} from './constants';\r\n  \r\n  export const initialState = {\r\n    locations: LOCATION_LIST,\r\n    totalLocations: [],\r\n    locationHeaders: LOCATION_HEADERS,\r\n    selectedLocation: false, \r\n    deleteSuccess: false,\r\n    formLocation: {}\r\n  };\r\n  \r\n  const reducer = (state = initialState, action) => {\r\n    const newState = { ...state };\r\n    const { payload } = action;\r\n    const { locations } = payload ? payload : { locations: false };\r\n\r\n    switch (action.type) {\r\n      case GET_LOCATIONS_SUCCESS:\r\n          newState.locations = locations;\r\n          newState.totalLocations = locations;\r\n          \r\n          return {\r\n            ...newState\r\n          };\r\n      case SELECT_LOCATION_INIT:    \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case SELECT_LOCATION_SUCCESS:  \r\n        newState.selectedLocation = payload;   \r\n        newState.deleteSuccess = false;  \r\n        newState.formLocation = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n        \r\n      case DELETE_LOCATION_SUCCESS: \r\n        newState.selectedLocation = false; \r\n        newState.deleteSuccess = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case UPDATE_FIELD_ATTRIBUTE:\r\n        const { value: { fieldName, fieldValue } } = action;\r\n        let newFormObject = {...newState.selectedLocation};\r\n        newFormObject[fieldName] = fieldValue;\r\n        newState.deleteSuccess = false;\r\n        newState.formLocation = newFormObject;\r\n        newState.selectedLocation = newFormObject;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n      case UPDATE_LOCATION_SUCCESS:\r\n        newState.deleteSuccess = payload;\r\n        newState.formLocation = {};\r\n        newState.selectedLocation = false;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n\r\n        case UPDATE_LOCATION_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formLocation = {};\r\n          newState.selectedLocation = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        \r\n        case DELETE_LOCATION_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formLocation = {};\r\n          newState.selectedLocation = false;\r\n    \r\n          return {\r\n            ...newState\r\n          };  \r\n\r\n        case CANCEL_LOCATION_INIT:\r\n          newState.deleteSuccess = false;\r\n          newState.formLocation = {};\r\n          newState.selectedLocation = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        case ORDER_LOCATION_SUCCESS:\r\n            newState.deleteSuccess = false;\r\n            newState.formLocation = {};\r\n            newState.selectedLocation = false;\r\n            newState.locations = locations;\r\n            return {\r\n              ...newState\r\n            };\r\n        case FILTER_LOCATION_SUCCESS:\r\n              newState.deleteSuccess = false;\r\n              newState.formLocation = {};\r\n              newState.selectedLocation = false;\r\n              newState.locations = locations;\r\n              return {\r\n                ...newState\r\n              };            \r\n      default:\r\n        return {\r\n          ...newState\r\n        };\r\n    }\r\n  };\r\n  \r\n  export default reducer;\r\n  ","import {\r\n    UPDATE_FIELD_ATTRIBUTE,\r\n    UPDATE_LOCATION_INIT,\r\n    UPDATE_LOCATION_SUCCESS,\r\n    UPDATE_LOCATION_ERROR,\r\n    GET_LOCATIONS_SUCCESS,\r\n    GET_LOCATIONS_ERROR,\r\n    SELECT_LOCATION_INIT,\r\n    SELECT_LOCATION_SUCCESS,\r\n    SELECT_LOCATION_ERROR,\r\n    DELETE_LOCATION_INIT,\r\n    DELETE_LOCATION_SUCCESS,\r\n    DELETE_LOCATION_ERROR,\r\n    FILTER_LOCATION_INIT,\r\n    FILTER_LOCATION_SUCCESS,\r\n    FILTER_LOCATION_ERROR,\r\n    ORDER_LOCATION_ERROR,\r\n    ORDER_LOCATION_SUCCESS,\r\n    ORDER_LOCATION_INIT\r\n} from './constants'\r\n\r\nexport function updateLocation (payload) {\r\n    return {\r\n        type: UPDATE_LOCATION_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateLocationSuccess (payload) {\r\n    return {\r\n        type: UPDATE_LOCATION_SUCCESS,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateLocationError (payload) {\r\n    return {\r\n        type: UPDATE_LOCATION_ERROR,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateAttributes (payload) {\r\n    return {\r\n        type: UPDATE_FIELD_ATTRIBUTE,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectLocation(payload) {\r\n    return {\r\n        type: SELECT_LOCATION_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectLocationSuccess(payload) {\r\n    return {\r\n        type: SELECT_LOCATION_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function selectLocationError(payload) {\r\n    return {\r\n        type: SELECT_LOCATION_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\n/* DELETE BASE */\r\nexport function deleteLocation(payload) {\r\n    return {\r\n        type: DELETE_LOCATION_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function deleteLocationSuccess(payload) {\r\n    return {\r\n        type: DELETE_LOCATION_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function deleteLocationError(payload) {\r\n    return {\r\n        type: DELETE_LOCATION_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getLocationsSuccess(payload) {\r\n    return {\r\n        type: GET_LOCATIONS_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getLocationsError(payload) {\r\n    return {\r\n        type: GET_LOCATIONS_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterLocationsInit(payload) {\r\n    return {\r\n        type: FILTER_LOCATION_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterLocationsSuccess(payload) {\r\n    return {\r\n        type: FILTER_LOCATION_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterLocationsError(payload) {\r\n    return {\r\n        type: FILTER_LOCATION_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderLocationsInit(payload) {\r\n    return {\r\n        type: ORDER_LOCATION_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderLocationsSuccess(payload) {\r\n    return {\r\n        type: ORDER_LOCATION_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderLocationsError(payload) {\r\n    return {\r\n        type: ORDER_LOCATION_ERROR,\r\n        payload,\r\n    };\r\n}\r\n","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { GET_LOCATIONS_API, PATH_API } from '../../Constants';\r\nimport { \r\n  GET_LOCATIONS,\r\n  SELECT_LOCATION_INIT,\r\n  DELETE_LOCATION_INIT,\r\n  UPDATE_LOCATION_INIT,\r\n  ORDER_LOCATION_INIT, \r\n  FILTER_LOCATION_INIT\r\n} from './constants';\r\nimport { \r\n  selectLocationSuccess,\r\n  getLocationsSuccess,\r\n  getLocationsError, \r\n  deleteLocationSuccess,\r\n  deleteLocationError,\r\n  updateLocationSuccess,\r\n  updateLocationError,\r\n  orderLocationsSuccess,\r\n  filterLocationsSuccess\r\n} from './actions';\r\n\r\nfunction* selectLocation(action) {\r\n  const { value } = action;\r\n\r\n  yield put(selectLocationSuccess(value));\r\n  return;\r\n}\r\n\r\nfunction* getLocations() {\r\n  const urlLocations = `${ PATH_API }${GET_LOCATIONS_API}`;\r\n\r\n  const response = yield call(fetch, urlLocations, {\r\n      method: 'GET',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    const successResponse = yield call([response, response.json]);\r\n\r\n    yield put(getLocationsSuccess(successResponse));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(getLocationsError(errorResponse));\r\n}\r\n\r\nfunction* removeLocation(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n\r\n  const urlLocations = `${ PATH_API }${GET_LOCATIONS_API}/${id}`;\r\n\r\n  const response = yield call(fetch, urlLocations, {\r\n      method: 'DELETE',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    value.message = \"Dirección eliminada exitosamente\"; \r\n    yield put(deleteLocationSuccess(value));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(deleteLocationError(errorResponse));\r\n}\r\n\r\nfunction* updateLocation(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n  \r\n  const locationToUpdate = { ...value };\r\n\r\n  value.message = \"Dirección creada exitosamente\"; \r\n  let locationId = id ? id : \"0\";\r\n  let urlLocations = `${ PATH_API }${GET_LOCATIONS_API}`;\r\n\r\n  const getResponse = yield call(fetch, `${urlLocations}/${locationId}`, {\r\n    method: 'GET'\r\n  });\r\n\r\n  const callBody = {\r\n    method: 'POST',\r\n    body: JSON.stringify(locationToUpdate)\r\n  }\r\n\r\n  if (getResponse.status >= 200 && getResponse.status < 300) {\r\n    value.message = \"Dirección actualizada exitosamente\"; \r\n    callBody.method = 'PUT';\r\n    urlLocations = `${urlLocations}/${id}`\r\n  }\r\n\r\n  const response = yield call(fetch, urlLocations, {\r\n      ...callBody\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    yield put(updateLocationSuccess(value));\r\n    return;\r\n  }\r\n  \r\n  const errorResponse = yield call([response, response.json]);\r\n  value.message = \"Hubo un problema creando los cambios\"; \r\n  yield put(updateLocationError(errorResponse));\r\n}\r\n\r\nfunction* orderLocation(action) { \r\n  const { value: {column, items, sense} } = action;\r\n\r\n  items.sort((a,b) => {\r\n    if(a[column] < b[column]) {\r\n      return sense;\r\n    }\r\n    if(a[column] > b[column]) {\r\n      return -1*sense;\r\n    }\r\n    return 0;\r\n  })\r\n\r\n  const response = {\r\n    locations: items \r\n  }\r\n\r\n  yield put(orderLocationsSuccess(response));\r\n}\r\n\r\nfunction* filterLocation(action) { \r\n  const { value: {fieldValue, items} } = action;\r\n  \r\n  let filtered = items.filter(item => {\r\n    let itemFiltered = false;\r\n\r\n    Object.keys(item).map(key => {\r\n      const keyToFilter = item[key] && typeof item[key] !== 'object' ? item[key].toString().toLowerCase() : \"\"; \r\n      itemFiltered = itemFiltered || keyToFilter.includes(fieldValue);\r\n      return true;\r\n    })\r\n\r\n    return itemFiltered;\r\n  });\r\n\r\n  const response = {\r\n    locations: filtered\r\n  }\r\n\r\n  yield put(filterLocationsSuccess(response));\r\n}\r\n\r\nexport function* watchLocation() {\r\n  yield takeLatest(GET_LOCATIONS, getLocations);\r\n  yield takeLatest(SELECT_LOCATION_INIT, selectLocation);\r\n  yield takeLatest(DELETE_LOCATION_INIT, removeLocation);\r\n  yield takeLatest(UPDATE_LOCATION_INIT, updateLocation);\r\n  yield takeLatest(ORDER_LOCATION_INIT, orderLocation);\r\n  yield takeLatest(FILTER_LOCATION_INIT, filterLocation);\r\n}\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport \"./style.css\";\r\nimport ComponentLocation from './component';\r\n\r\nimport reducer from \"./reducer\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchLocation } from \"./saga\";\r\nimport { Provider } from 'react-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport CustomBreadcrumb from \"../../components/breadcrumb/breadcrumb\";\r\nimport { BREAD_PATH, } from './constants';\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    reducer\r\n});\r\n\r\nconst formStore = createStore(rootReducer);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(watchLocation);\r\n\r\nexport default class LocationPage extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={formStore}>\r\n                <Provider store={store}>\r\n                    <Container className='main-wrapper location' >\r\n                        <CustomBreadcrumb route={BREAD_PATH} current=\"Locations\"/>\r\n                        <h1> Lista de Locations </h1>\r\n                        <ComponentLocation />\r\n                    </Container>\r\n                </Provider>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\n","import { createStructuredSelector } from 'reselect';\r\n\r\nexport const getAttributes = (state) => state.attributes;\r\nexport const getSelectedAttribute = (state) => state.selectedAttribute;\r\nexport const getDeleteAttribute = (state) => state.deleteSuccess;\r\nexport const getFormAttribute = (state) => state.formAttribute;\r\nexport const getTotalAttributes = (state) => state.totalAttributes;\r\n\r\nexport const attributeSelector = createStructuredSelector({\r\n    attributes: getAttributes,\r\n    selectedAttribute: getSelectedAttribute,\r\n    deleteSuccess: getDeleteAttribute,\r\n    formAttribute: getFormAttribute\r\n});","export const FILLER_TEXT = 'But I must';\r\nexport const GET_ATTRIBUTES = '@attributes/GET_ATTRIBUTES_INIT';\r\nexport const GET_ATTRIBUTES_ERROR = '@attributes/GET_ATTRIBUTES_ERROR';\r\nexport const GET_ATTRIBUTES_SUCCESS = '@attributes/GET_ATTRIBUTES_SUCCESS';\r\n\r\nexport const UPDATE_ATTRIBUTE_INIT = '@attributes/UPDATE_ATTRIBUTE_INIT';\r\nexport const UPDATE_ATTRIBUTE_ERROR = '@attributes/UPDATE_ATTRIBUTE_ERROR';\r\nexport const UPDATE_ATTRIBUTE_SUCCESS = '@attributes/UPDATE_ATTRIBUTE_SUCCESS';\r\nexport const CANCEL_ATTRIBUTE_INIT = '@attributes/CANCEL_ATTRIBUTE_INIT';\r\n\r\nexport const UPDATE_FIELD_ATTRIBUTE = '@attributes/UPDATE_FIELD_ATTRIBUTE';\r\n\r\nexport const SELECT_ATTRIBUTE_INIT = '@attributes/SELECT_ATTRIBUTE_INIT';\r\nexport const SELECT_ATTRIBUTE_SUCCESS = '@attributes/SELECT_ATTRIBUTE_SUCCESS';\r\nexport const SELECT_ATTRIBUTE_ERROR = '@attributes/SELECT_ATTRIBUTE_ERROR';\r\n\r\nexport const DELETE_ATTRIBUTE_INIT = '@attributes/DELETE_ATTRIBUTE_INIT';\r\nexport const DELETE_ATTRIBUTE_SUCCESS = '@attributes/DELETE_ATTRIBUTE_SUCCESS';\r\nexport const DELETE_ATTRIBUTE_ERROR = '@attributes/DELETE_ATTRIBUTE_ERROR';\r\n\r\nexport const FILTER_ATTRIBUTE_INIT = '@attributes/FILTER_ATTRIBUTE_INIT';\r\nexport const FILTER_ATTRIBUTE_SUCCESS = '@attributes/FILTER_ATTRIBUTE_SUCCESS';\r\nexport const FILTER_ATTRIBUTE_ERROR = '@attributes/FILTER_ATTRIBUTE_ERROR';\r\n\r\nexport const ORDER_ATTRIBUTE_INIT = '@attributes/ORDER_ATTRIBUTE_INIT';\r\nexport const ORDER_ATTRIBUTE_SUCCESS = '@attributes/ORDER_ATTRIBUTE_SUCCESS';\r\nexport const ORDER_ATTRIBUTE_ERROR = '@attributes/ORDER_ATTRIBUTE_ERROR';\r\n\r\n\r\nexport const getAttributeButton = (handlerSafe) => {\r\n    return [\r\n        {\r\n            label: \"Nuevo Atributo\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            onClick: handlerSafe\r\n        }\r\n    ]\r\n}\r\n\r\nexport const getAttributeActions = (handlerSave, handlerClean, handlerRemove) => {\r\n    return [\r\n        {\r\n            label: \"Guardar Cambios\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerSave\r\n        },\r\n        {\r\n            label: \"Eliminar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"default\",\r\n            variant: \"outlined\",\r\n            onClick: handlerRemove\r\n        },\r\n        {\r\n            label: \"Cancelar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"secondary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerClean\r\n        },\r\n    ];\r\n}\r\n\r\nexport const BREAD_PATH = [\r\n    { path: \"/\", label: \"Inicio\" },\r\n]\r\n\r\nexport const ATTRIBUTE_FORMS = [\r\n    {\r\n        label: \"Identificación\",\r\n        name: \"id\",\r\n        placeholder: \"Identificación del Tipo\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: true\r\n    },\r\n    {\r\n        label: \"Nombre\",\r\n        name: \"name\",\r\n        placeholder: \"Nombre\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Tipo\",\r\n        name: \"type\",\r\n        placeholder: \"Tipo\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Requerido\",\r\n        name: \"required\",\r\n        placeholder: \"Requerido\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    }\r\n]\r\n\r\nexport const ATTRIBUTE_HEADERS = [\r\n    {label: \"id\", column: \"id\"}, \r\n    {label: \"name\", column: \"name\"},\r\n    {label: \"Tipo\", column: \"type\"},\r\n    {label: \"Requerido\", column: \"required\"},\r\n    {label: \"Fecha Creación\", column: \"createdDate\"},\r\n    {label: \"Fecha Actualización\", column: \"updatedDate\"},\r\n];\r\nexport const ATTRIBUTE_LIST = [\r\n    [\"12003\", \"Direccción beta\", 1, 0],\r\n    [\"12004\", \"Zona alfa\", 0, 1],\r\n    [\"12005\", \"Gamma\", 0, 1]\r\n]\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomForm from \"../../components/customform/customform\";\r\nimport CustomTable from \"../../components/table/table\";\r\nimport { getAttributes, getSelectedAttribute, getDeleteAttribute, getFormAttribute, getTotalAttributes } from \"./selectors\";\r\nimport { Spinner, Alert } from 'react-bootstrap';\r\nimport { \r\n  getAttributeActions,\r\n  getAttributeButton,\r\n  GET_ATTRIBUTES,\r\n  SELECT_ATTRIBUTE_INIT, \r\n  ATTRIBUTE_FORMS, \r\n  DELETE_ATTRIBUTE_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_ATTRIBUTE_INIT,\r\n  CANCEL_ATTRIBUTE_INIT,\r\n  ORDER_ATTRIBUTE_INIT,\r\n  FILTER_ATTRIBUTE_INIT,\r\n} from './constants'\r\n\r\n\r\nclass ComponentAttribute extends Component {\r\n\r\n  componentWillMount () {\r\n    const { getAttributes } = this.props;\r\n    getAttributes();\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    const { getAttributes } = nextProps;\r\n\r\n    if (nextProps.deleteAttribute && this.props.deleteAttribute !== nextProps.deleteAttribute) {\r\n      getAttributes();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      attributeHeaders, \r\n      attributes,\r\n      selectAttribute,\r\n      selectedAttribute,\r\n      removeAttribute,\r\n      deleteAttribute,\r\n      updateAttributes,\r\n      updatedAttribute,\r\n      updateAttribute,\r\n      cancelAttribute,\r\n      orderAttribute,\r\n      filterAttribute,\r\n      totalAttributes\r\n  } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        { deleteAttribute ?\r\n          <Alert  variant=\"success\">\r\n            {deleteAttribute.message}\r\n          </Alert>\r\n          : ''\r\n        }\r\n\r\n        {!selectedAttribute ? \r\n          <div className='attribute-list_wrapper'>\r\n          { attributes && !attributes.emprty ? \r\n            <CustomTable \r\n              onSelectRow={selectAttribute} \r\n              className=\"attributes-table\" \r\n              items={attributes}\r\n              totalItems={totalAttributes}\r\n              orderTable={orderAttribute}\r\n              headers={attributeHeaders}\r\n              filterTable = {filterAttribute}\r\n              paginator = {true}\r\n              buttons={getAttributeButton(() => selectAttribute({}))} \r\n            /> :\r\n            <Spinner className=\"spinner-wrapper\" animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          }\r\n          \r\n        </div> :  \r\n        <div className='attribute-form_wrapper'>\r\n          <CustomForm \r\n            formName=\"customAttribute\" \r\n            values={ selectedAttribute } \r\n            items={ ATTRIBUTE_FORMS } \r\n            updateAction = { updateAttributes }\r\n            buttons={\r\n              getAttributeActions(\r\n                () => updateAttribute(updatedAttribute), \r\n                () => cancelAttribute(), \r\n                () => removeAttribute(selectedAttribute)\r\n            )} \r\n            />\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    attributeHeaders: state.attributeHeaders,\r\n    attributes: getAttributes(state),\r\n    selectedAttribute: getSelectedAttribute(state),\r\n    deleteAttribute: getDeleteAttribute(state),\r\n    updatedAttribute: getFormAttribute(state),\r\n    totalAttributes: getTotalAttributes(state),\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return { \r\n    getAttributes: () => dispatch({ type: GET_ATTRIBUTES, value: 1 }),\r\n    updateAttributes: (value) => dispatch({ type: UPDATE_FIELD_ATTRIBUTE, value }),\r\n    selectAttribute: (attribute) => dispatch({ type: SELECT_ATTRIBUTE_INIT, value: attribute }),\r\n    removeAttribute: (attribute) => dispatch({ type: DELETE_ATTRIBUTE_INIT, value: attribute }),\r\n    updateAttribute: (attribute) => dispatch({ type: UPDATE_ATTRIBUTE_INIT, value: attribute }),\r\n    cancelAttribute: () => dispatch({ type: CANCEL_ATTRIBUTE_INIT}),\r\n    orderAttribute: (prop) => dispatch({ type: ORDER_ATTRIBUTE_INIT, value: prop }),\r\n    filterAttribute: (prop) => dispatch({ type: FILTER_ATTRIBUTE_INIT, value: prop }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ComponentAttribute);","import { \r\n  SELECT_ATTRIBUTE_SUCCESS,\r\n  SELECT_ATTRIBUTE_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_ATTRIBUTE_SUCCESS,\r\n  UPDATE_ATTRIBUTE_ERROR,\r\n  CANCEL_ATTRIBUTE_INIT,\r\n  ATTRIBUTE_LIST,\r\n  ATTRIBUTE_HEADERS,\r\n  GET_ATTRIBUTES_SUCCESS,\r\n  DELETE_ATTRIBUTE_SUCCESS,\r\n  DELETE_ATTRIBUTE_ERROR,\r\n  ORDER_ATTRIBUTE_SUCCESS,\r\n  FILTER_ATTRIBUTE_SUCCESS\r\n} from './constants';\r\n  \r\n  export const initialState = {\r\n    attributes: ATTRIBUTE_LIST,\r\n    totalAttributes: [],\r\n    attributeHeaders: ATTRIBUTE_HEADERS,\r\n    selectedAttribute: false, \r\n    deleteSuccess: false,\r\n    formAttribute: {}\r\n  };\r\n  \r\n  const reducer = (state = initialState, action) => {\r\n    const newState = { ...state };\r\n    const { payload } = action;\r\n    const { attributes } = payload ? payload : { attributes: false };\r\n\r\n    switch (action.type) {\r\n      case GET_ATTRIBUTES_SUCCESS:\r\n          newState.attributes = attributes;\r\n          newState.totalAttributes = attributes;\r\n          \r\n          return {\r\n            ...newState\r\n          };\r\n      case SELECT_ATTRIBUTE_INIT:    \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case SELECT_ATTRIBUTE_SUCCESS:  \r\n        newState.selectedAttribute = payload;   \r\n        newState.deleteSuccess = false;  \r\n        newState.formAttribute = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n        \r\n      case DELETE_ATTRIBUTE_SUCCESS: \r\n        newState.selectedAttribute = false; \r\n        newState.deleteSuccess = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case UPDATE_FIELD_ATTRIBUTE:\r\n        const { value: { fieldName, fieldValue } } = action;\r\n        let newFormObject = {...newState.selectedAttribute};\r\n        newFormObject[fieldName] = fieldValue;\r\n        newState.deleteSuccess = false;\r\n        newState.formAttribute = newFormObject;\r\n        newState.selectedAttribute = newFormObject;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n      case UPDATE_ATTRIBUTE_SUCCESS:\r\n        newState.deleteSuccess = payload;\r\n        newState.formAttribute = {};\r\n        newState.selectedAttribute = false;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n\r\n        case UPDATE_ATTRIBUTE_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formAttribute = {};\r\n          newState.selectedAttribute = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        \r\n        case DELETE_ATTRIBUTE_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formAttribute = {};\r\n          newState.selectedAttribute = false;\r\n    \r\n          return {\r\n            ...newState\r\n          };  \r\n\r\n        case CANCEL_ATTRIBUTE_INIT:\r\n          newState.deleteSuccess = false;\r\n          newState.formAttribute = {};\r\n          newState.selectedAttribute = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        case ORDER_ATTRIBUTE_SUCCESS:\r\n            newState.deleteSuccess = false;\r\n            newState.formAttribute = {};\r\n            newState.selectedAttribute = false;\r\n            newState.attributes = attributes;\r\n            return {\r\n              ...newState\r\n            };\r\n        case FILTER_ATTRIBUTE_SUCCESS:\r\n              newState.deleteSuccess = false;\r\n              newState.formAttribute = {};\r\n              newState.selectedAttribute = false;\r\n              newState.attributes = attributes;\r\n              return {\r\n                ...newState\r\n              };            \r\n      default:\r\n        return {\r\n          ...newState\r\n        };\r\n    }\r\n  };\r\n  \r\n  export default reducer;\r\n  ","import {\r\n    UPDATE_FIELD_ATTRIBUTE,\r\n    UPDATE_ATTRIBUTE_INIT,\r\n    UPDATE_ATTRIBUTE_SUCCESS,\r\n    UPDATE_ATTRIBUTE_ERROR,\r\n    GET_ATTRIBUTES_SUCCESS,\r\n    GET_ATTRIBUTES_ERROR,\r\n    SELECT_ATTRIBUTE_INIT,\r\n    SELECT_ATTRIBUTE_SUCCESS,\r\n    SELECT_ATTRIBUTE_ERROR,\r\n    DELETE_ATTRIBUTE_INIT,\r\n    DELETE_ATTRIBUTE_SUCCESS,\r\n    DELETE_ATTRIBUTE_ERROR,\r\n    FILTER_ATTRIBUTE_INIT,\r\n    FILTER_ATTRIBUTE_SUCCESS,\r\n    FILTER_ATTRIBUTE_ERROR,\r\n    ORDER_ATTRIBUTE_ERROR,\r\n    ORDER_ATTRIBUTE_SUCCESS,\r\n    ORDER_ATTRIBUTE_INIT\r\n} from './constants'\r\n\r\nexport function updateAttribute (payload) {\r\n    return {\r\n        type: UPDATE_ATTRIBUTE_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateAttributeSuccess (payload) {\r\n    return {\r\n        type: UPDATE_ATTRIBUTE_SUCCESS,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateAttributeError (payload) {\r\n    return {\r\n        type: UPDATE_ATTRIBUTE_ERROR,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateAttributes (payload) {\r\n    return {\r\n        type: UPDATE_FIELD_ATTRIBUTE,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectAttribute(payload) {\r\n    return {\r\n        type: SELECT_ATTRIBUTE_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectAttributeSuccess(payload) {\r\n    return {\r\n        type: SELECT_ATTRIBUTE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function selectAttributeError(payload) {\r\n    return {\r\n        type: SELECT_ATTRIBUTE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\n/* DELETE BASE */\r\nexport function deleteAttribute(payload) {\r\n    return {\r\n        type: DELETE_ATTRIBUTE_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function deleteAttributeSuccess(payload) {\r\n    return {\r\n        type: DELETE_ATTRIBUTE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function deleteAttributeError(payload) {\r\n    return {\r\n        type: DELETE_ATTRIBUTE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getAttributesSuccess(payload) {\r\n    return {\r\n        type: GET_ATTRIBUTES_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getAttributesError(payload) {\r\n    return {\r\n        type: GET_ATTRIBUTES_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterAttributesInit(payload) {\r\n    return {\r\n        type: FILTER_ATTRIBUTE_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterAttributesSuccess(payload) {\r\n    return {\r\n        type: FILTER_ATTRIBUTE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterAttributesError(payload) {\r\n    return {\r\n        type: FILTER_ATTRIBUTE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderAttributesInit(payload) {\r\n    return {\r\n        type: ORDER_ATTRIBUTE_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderAttributesSuccess(payload) {\r\n    return {\r\n        type: ORDER_ATTRIBUTE_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderAttributesError(payload) {\r\n    return {\r\n        type: ORDER_ATTRIBUTE_ERROR,\r\n        payload,\r\n    };\r\n}\r\n","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { GET_ATTRIBUTES_API, PATH_API } from '../../Constants';\r\nimport { \r\n  GET_ATTRIBUTES,\r\n  SELECT_ATTRIBUTE_INIT,\r\n  DELETE_ATTRIBUTE_INIT,\r\n  UPDATE_ATTRIBUTE_INIT,\r\n  ORDER_ATTRIBUTE_INIT, \r\n  FILTER_ATTRIBUTE_INIT\r\n} from './constants';\r\nimport { \r\n  selectAttributeSuccess,\r\n  getAttributesSuccess,\r\n  getAttributesError, \r\n  deleteAttributeSuccess,\r\n  deleteAttributeError,\r\n  updateAttributeSuccess,\r\n  updateAttributeError,\r\n  orderAttributesSuccess,\r\n  filterAttributesSuccess\r\n} from './actions';\r\n\r\nfunction* selectAttribute(action) {\r\n  const { value } = action;\r\n\r\n  yield put(selectAttributeSuccess(value));\r\n  return;\r\n}\r\n\r\nfunction* getAttributes() {\r\n  const urlAttributes = `${ PATH_API }${GET_ATTRIBUTES_API}`;\r\n\r\n  const response = yield call(fetch, urlAttributes, {\r\n      method: 'GET',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    const successResponse = yield call([response, response.json]);\r\n\r\n    yield put(getAttributesSuccess(successResponse));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(getAttributesError(errorResponse));\r\n}\r\n\r\nfunction* removeAttribute(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n\r\n  const urlAttributes = `${ PATH_API }${GET_ATTRIBUTES_API}/${id}`;\r\n\r\n  const response = yield call(fetch, urlAttributes, {\r\n      method: 'DELETE',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    value.message = \"Dirección eliminada exitosamente\"; \r\n    yield put(deleteAttributeSuccess(value));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(deleteAttributeError(errorResponse));\r\n}\r\n\r\nfunction* updateAttribute(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n  \r\n  const attributeToUpdate = { ...value };\r\n\r\n  value.message = \"Dirección creada exitosamente\"; \r\n  let attributeId = id ? id : \"0\";\r\n  let urlAttributes = `${ PATH_API }${GET_ATTRIBUTES_API}`;\r\n\r\n  const getResponse = yield call(fetch, `${urlAttributes}/${attributeId}`, {\r\n    method: 'GET'\r\n  });\r\n\r\n  const callBody = {\r\n    method: 'POST',\r\n    body: JSON.stringify(attributeToUpdate)\r\n  }\r\n\r\n  if (getResponse.status >= 200 && getResponse.status < 300) {\r\n    value.message = \"Dirección actualizada exitosamente\"; \r\n    callBody.method = 'PUT';\r\n    urlAttributes = `${urlAttributes}/${id}`\r\n  }\r\n\r\n  const response = yield call(fetch, urlAttributes, {\r\n      ...callBody\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    yield put(updateAttributeSuccess(value));\r\n    return;\r\n  }\r\n  \r\n  const errorResponse = yield call([response, response.json]);\r\n  value.message = \"Hubo un problema creando los cambios\"; \r\n  yield put(updateAttributeError(errorResponse));\r\n}\r\n\r\nfunction* orderAttribute(action) { \r\n  const { value: {column, items, sense} } = action;\r\n\r\n  items.sort((a,b) => {\r\n    if(a[column] < b[column]) {\r\n      return sense;\r\n    }\r\n    if(a[column] > b[column]) {\r\n      return -1*sense;\r\n    }\r\n    return 0;\r\n  })\r\n\r\n  const response = {\r\n    attributes: items \r\n  }\r\n\r\n  yield put(orderAttributesSuccess(response));\r\n}\r\n\r\nfunction* filterAttribute(action) { \r\n  const { value: {fieldValue, items} } = action;\r\n  \r\n  let filtered = items.filter(item => {\r\n    let itemFiltered = false;\r\n\r\n    Object.keys(item).map(key => {\r\n      const keyToFilter = item[key] && typeof item[key] !== 'object' ? item[key].toString().toLowerCase() : \"\"; \r\n      itemFiltered = itemFiltered || keyToFilter.includes(fieldValue);\r\n      return true;\r\n    })\r\n\r\n    return itemFiltered;\r\n  });\r\n\r\n  const response = {\r\n    attributes: filtered\r\n  }\r\n\r\n  yield put(filterAttributesSuccess(response));\r\n}\r\n\r\nexport function* watchAttribute() {\r\n  yield takeLatest(GET_ATTRIBUTES, getAttributes);\r\n  yield takeLatest(SELECT_ATTRIBUTE_INIT, selectAttribute);\r\n  yield takeLatest(DELETE_ATTRIBUTE_INIT, removeAttribute);\r\n  yield takeLatest(UPDATE_ATTRIBUTE_INIT, updateAttribute);\r\n  yield takeLatest(ORDER_ATTRIBUTE_INIT, orderAttribute);\r\n  yield takeLatest(FILTER_ATTRIBUTE_INIT, filterAttribute);\r\n}\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport \"./style.css\";\r\nimport ComponentAttribute from './component';\r\n\r\nimport reducer from \"./reducer\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchAttribute } from \"./saga\";\r\nimport { Provider } from 'react-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport CustomBreadcrumb from \"../../components/breadcrumb/breadcrumb\";\r\nimport { BREAD_PATH, } from './constants';\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    reducer\r\n});\r\n\r\nconst formStore = createStore(rootReducer);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(watchAttribute);\r\n\r\nexport default class AttributePage extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={formStore}>\r\n                <Provider store={store}>\r\n                    <Container className='main-wrapper attribute' >\r\n                        <CustomBreadcrumb route={BREAD_PATH} current=\"Attributes\"/>\r\n                        <h1> Lista de Attributes </h1>\r\n                        <ComponentAttribute />\r\n                    </Container>\r\n                </Provider>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\n","import { createStructuredSelector } from 'reselect';\r\n\r\nexport const getWorkers = (state) => state.workers;\r\nexport const getSelectedWorker = (state) => state.selectedWorker;\r\nexport const getDeleteWorker = (state) => state.deleteSuccess;\r\nexport const getFormWorker = (state) => state.formWorker;\r\nexport const getTotalWorkers = (state) => state.totalWorkers;\r\n\r\nexport const attributeSelector = createStructuredSelector({\r\n    workers: getWorkers,\r\n    selectedWorker: getSelectedWorker,\r\n    deleteSuccess: getDeleteWorker,\r\n    formWorker: getFormWorker\r\n});","export const FILLER_TEXT = 'But I must';\r\nexport const GET_WORKERS = '@workers/GET_WORKERS_INIT';\r\nexport const GET_WORKERS_ERROR = '@workers/GET_WORKERS_ERROR';\r\nexport const GET_WORKERS_SUCCESS = '@workers/GET_WORKERS_SUCCESS';\r\n\r\nexport const UPDATE_WORKER_INIT = '@workers/UPDATE_WORKER_INIT';\r\nexport const UPDATE_WORKER_ERROR = '@workers/UPDATE_WORKER_ERROR';\r\nexport const UPDATE_WORKER_SUCCESS = '@workers/UPDATE_WORKER_SUCCESS';\r\nexport const CANCEL_WORKER_INIT = '@workers/CANCEL_WORKER_INIT';\r\n\r\nexport const UPDATE_FIELD_ATTRIBUTE = '@workers/UPDATE_FIELD_ATTRIBUTE';\r\n\r\nexport const SELECT_WORKER_INIT = '@workers/SELECT_WORKER_INIT';\r\nexport const SELECT_WORKER_SUCCESS = '@workers/SELECT_WORKER_SUCCESS';\r\nexport const SELECT_WORKER_ERROR = '@workers/SELECT_WORKER_ERROR';\r\n\r\nexport const DELETE_WORKER_INIT = '@workers/DELETE_WORKER_INIT';\r\nexport const DELETE_WORKER_SUCCESS = '@workers/DELETE_WORKER_SUCCESS';\r\nexport const DELETE_WORKER_ERROR = '@workers/DELETE_WORKER_ERROR';\r\n\r\nexport const FILTER_WORKER_INIT = '@workers/FILTER_WORKER_INIT';\r\nexport const FILTER_WORKER_SUCCESS = '@workers/FILTER_WORKER_SUCCESS';\r\nexport const FILTER_WORKER_ERROR = '@workers/FILTER_WORKER_ERROR';\r\n\r\nexport const ORDER_WORKER_INIT = '@workers/ORDER_WORKER_INIT';\r\nexport const ORDER_WORKER_SUCCESS = '@workers/ORDER_WORKER_SUCCESS';\r\nexport const ORDER_WORKER_ERROR = '@workers/ORDER_WORKER_ERROR';\r\n\r\n\r\nexport const getWorkerButton = (handlerSafe) => {\r\n    return [\r\n        {\r\n            label: \"Nuevo Trabajador\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            onClick: handlerSafe\r\n        }\r\n    ]\r\n}\r\n\r\nexport const getWorkerActions = (handlerSave, handlerClean, handlerRemove) => {\r\n    return [\r\n        {\r\n            label: \"Guardar Cambios\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerSave\r\n        },\r\n        {\r\n            label: \"Eliminar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"default\",\r\n            variant: \"outlined\",\r\n            onClick: handlerRemove\r\n        },\r\n        {\r\n            label: \"Cancelar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"secondary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerClean\r\n        },\r\n    ];\r\n}\r\n\r\nexport const BREAD_PATH = [\r\n    { path: \"/\", label: \"Inicio\" },\r\n]\r\n\r\nexport const WORKER_FORMS = [\r\n    {\r\n        label: \"Identificación\",\r\n        name: \"id\",\r\n        placeholder: \"Identificación del Tipo\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: true\r\n    },\r\n    {\r\n        label: \"Nombre\",\r\n        name: \"first_name\",\r\n        placeholder: \"Nombre\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Apellido\",\r\n        name: \"last_name\",\r\n        placeholder: \"Apellido\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Tipo de documento\",\r\n        name: \"identification_type\",\r\n        placeholder: \"Tipo de documento\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Documento\",\r\n        name: \"identification\",\r\n        placeholder: \"Documento\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: true\r\n    },\r\n    {\r\n        label: \"Referencia\",\r\n        name: \"external_reference\",\r\n        placeholder: \"Referencia\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Fecha de nacimiento\",\r\n        name: \"birth_date\",\r\n        placeholder: \"Fecha de nacimiento\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    },\r\n    {\r\n        label: \"Posición\",\r\n        name: \"position\",\r\n        placeholder: \"Posición\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    }\r\n]\r\n\r\nexport const WORKER_HEADERS = [\r\n    {label: \"id\", column: \"id\"}, \r\n    {label: \"Primer Name\", column: \"first_name\"},\r\n    {label: \"Apellido\", column: \"last_name\"},\r\n    {label: \"Tipo de documento\", column: \"identification_type\"},\r\n    {label: \"Documento\", column: \"identification\"}, \r\n    {label: \"Referencia\", column: \"external_reference\"},\r\n    {label: \"Fecha de nacimiento\", column: \"birth_date\"},\r\n    {label: \"Posición\", column: \"position\"},\r\n    {label: \"Fecha Creación\", column: \"createdDate\"},\r\n    {label: \"Fecha Actualización\", column: \"updatedDate\"},\r\n];\r\nexport const WORKER_LIST = [\r\n    [\"12003\", \"Direccción beta\", 1, 0],\r\n    [\"12004\", \"Zona alfa\", 0, 1],\r\n    [\"12005\", \"Gamma\", 0, 1]\r\n]\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomForm from \"../../components/customform/customform\";\r\nimport CustomTable from \"../../components/table/table\";\r\nimport { getWorkers, getSelectedWorker, getDeleteWorker, getFormWorker, getTotalWorkers } from \"./selectors\";\r\nimport { Spinner, Alert } from 'react-bootstrap';\r\nimport { \r\n  getWorkerActions,\r\n  getWorkerButton,\r\n  GET_WORKERS,\r\n  SELECT_WORKER_INIT, \r\n  WORKER_FORMS, \r\n  DELETE_WORKER_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_WORKER_INIT,\r\n  CANCEL_WORKER_INIT,\r\n  ORDER_WORKER_INIT,\r\n  FILTER_WORKER_INIT,\r\n} from './constants'\r\n\r\n\r\nclass ComponentWorker extends Component {\r\n\r\n  componentWillMount () {\r\n    const { getWorkers } = this.props;\r\n    getWorkers();\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    const { getWorkers } = nextProps;\r\n\r\n    if (nextProps.deleteWorker && this.props.deleteWorker !== nextProps.deleteWorker) {\r\n      getWorkers();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      workerHeaders, \r\n      workers,\r\n      selectWorker,\r\n      selectedWorker,\r\n      removeWorker,\r\n      deleteWorker,\r\n      updateWorkers,\r\n      updatedWorker,\r\n      updateWorker,\r\n      cancelWorker,\r\n      orderWorker,\r\n      filterWorker,\r\n      totalWorkers\r\n  } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        { deleteWorker ?\r\n          <Alert  variant=\"success\">\r\n            {deleteWorker.message}\r\n          </Alert>\r\n          : ''\r\n        }\r\n\r\n        {!selectedWorker ? \r\n          <div className='worker-list_wrapper'>\r\n          { workers && !workers.emprty ? \r\n            <CustomTable \r\n              onSelectRow={selectWorker} \r\n              className=\"workers-table\" \r\n              items={workers}\r\n              totalItems={totalWorkers}\r\n              orderTable={orderWorker}\r\n              headers={workerHeaders}\r\n              filterTable = {filterWorker}\r\n              paginator = {true}\r\n              buttons={getWorkerButton(() => selectWorker({}))} \r\n            /> :\r\n            <Spinner className=\"spinner-wrapper\" animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          }\r\n          \r\n        </div> :  \r\n        <div className='worker-form_wrapper'>\r\n          <CustomForm \r\n            formName=\"customWorker\" \r\n            values={ selectedWorker } \r\n            items={ WORKER_FORMS } \r\n            updateAction = { updateWorkers }\r\n            buttons={\r\n              getWorkerActions(\r\n                () => updateWorker(updatedWorker), \r\n                () => cancelWorker(), \r\n                () => removeWorker(selectedWorker)\r\n            )} \r\n            />\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    workerHeaders: state.workerHeaders,\r\n    workers: getWorkers(state),\r\n    selectedWorker: getSelectedWorker(state),\r\n    deleteWorker: getDeleteWorker(state),\r\n    updatedWorker: getFormWorker(state),\r\n    totalWorkers: getTotalWorkers(state),\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return { \r\n    getWorkers: () => dispatch({ type: GET_WORKERS, value: 1 }),\r\n    updateWorkers: (value) => dispatch({ type: UPDATE_FIELD_ATTRIBUTE, value }),\r\n    selectWorker: (worker) => dispatch({ type: SELECT_WORKER_INIT, value: worker }),\r\n    removeWorker: (worker) => dispatch({ type: DELETE_WORKER_INIT, value: worker }),\r\n    updateWorker: (worker) => dispatch({ type: UPDATE_WORKER_INIT, value: worker }),\r\n    cancelWorker: () => dispatch({ type: CANCEL_WORKER_INIT}),\r\n    orderWorker: (prop) => dispatch({ type: ORDER_WORKER_INIT, value: prop }),\r\n    filterWorker: (prop) => dispatch({ type: FILTER_WORKER_INIT, value: prop }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ComponentWorker);","import { \r\n  SELECT_WORKER_SUCCESS,\r\n  SELECT_WORKER_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_WORKER_SUCCESS,\r\n  UPDATE_WORKER_ERROR,\r\n  CANCEL_WORKER_INIT,\r\n  WORKER_LIST,\r\n  WORKER_HEADERS,\r\n  GET_WORKERS_SUCCESS,\r\n  DELETE_WORKER_SUCCESS,\r\n  DELETE_WORKER_ERROR,\r\n  ORDER_WORKER_SUCCESS,\r\n  FILTER_WORKER_SUCCESS\r\n} from './constants';\r\n  \r\n  export const initialState = {\r\n    workers: WORKER_LIST,\r\n    totalWorkers: [],\r\n    workerHeaders: WORKER_HEADERS,\r\n    selectedWorker: false, \r\n    deleteSuccess: false,\r\n    formWorker: {}\r\n  };\r\n  \r\n  const reducer = (state = initialState, action) => {\r\n    const newState = { ...state };\r\n    const { payload } = action;\r\n    const { workers } = payload ? payload : { workers: false };\r\n\r\n    switch (action.type) {\r\n      case GET_WORKERS_SUCCESS:\r\n          newState.workers = workers;\r\n          newState.totalWorkers = workers;\r\n          \r\n          return {\r\n            ...newState\r\n          };\r\n      case SELECT_WORKER_INIT:    \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case SELECT_WORKER_SUCCESS:  \r\n        newState.selectedWorker = payload;   \r\n        newState.deleteSuccess = false;  \r\n        newState.formWorker = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n        \r\n      case DELETE_WORKER_SUCCESS: \r\n        newState.selectedWorker = false; \r\n        newState.deleteSuccess = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case UPDATE_FIELD_ATTRIBUTE:\r\n        const { value: { fieldName, fieldValue } } = action;\r\n        let newFormObject = {...newState.selectedWorker};\r\n        newFormObject[fieldName] = fieldValue;\r\n        newState.deleteSuccess = false;\r\n        newState.formWorker = newFormObject;\r\n        newState.selectedWorker = newFormObject;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n      case UPDATE_WORKER_SUCCESS:\r\n        newState.deleteSuccess = payload;\r\n        newState.formWorker = {};\r\n        newState.selectedWorker = false;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n\r\n        case UPDATE_WORKER_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formWorker = {};\r\n          newState.selectedWorker = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        \r\n        case DELETE_WORKER_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formWorker = {};\r\n          newState.selectedWorker = false;\r\n    \r\n          return {\r\n            ...newState\r\n          };  \r\n\r\n        case CANCEL_WORKER_INIT:\r\n          newState.deleteSuccess = false;\r\n          newState.formWorker = {};\r\n          newState.selectedWorker = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        case ORDER_WORKER_SUCCESS:\r\n            newState.deleteSuccess = false;\r\n            newState.formWorker = {};\r\n            newState.selectedWorker = false;\r\n            newState.workers = workers;\r\n            return {\r\n              ...newState\r\n            };\r\n        case FILTER_WORKER_SUCCESS:\r\n              newState.deleteSuccess = false;\r\n              newState.formWorker = {};\r\n              newState.selectedWorker = false;\r\n              newState.workers = workers;\r\n              return {\r\n                ...newState\r\n              };            \r\n      default:\r\n        return {\r\n          ...newState\r\n        };\r\n    }\r\n  };\r\n  \r\n  export default reducer;\r\n  ","import {\r\n    UPDATE_FIELD_ATTRIBUTE,\r\n    UPDATE_WORKER_INIT,\r\n    UPDATE_WORKER_SUCCESS,\r\n    UPDATE_WORKER_ERROR,\r\n    GET_WORKERS_SUCCESS,\r\n    GET_WORKERS_ERROR,\r\n    SELECT_WORKER_INIT,\r\n    SELECT_WORKER_SUCCESS,\r\n    SELECT_WORKER_ERROR,\r\n    DELETE_WORKER_INIT,\r\n    DELETE_WORKER_SUCCESS,\r\n    DELETE_WORKER_ERROR,\r\n    FILTER_WORKER_INIT,\r\n    FILTER_WORKER_SUCCESS,\r\n    FILTER_WORKER_ERROR,\r\n    ORDER_WORKER_ERROR,\r\n    ORDER_WORKER_SUCCESS,\r\n    ORDER_WORKER_INIT\r\n} from './constants'\r\n\r\nexport function updateWorker (payload) {\r\n    return {\r\n        type: UPDATE_WORKER_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateWorkerSuccess (payload) {\r\n    return {\r\n        type: UPDATE_WORKER_SUCCESS,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateWorkerError (payload) {\r\n    return {\r\n        type: UPDATE_WORKER_ERROR,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateWorkers (payload) {\r\n    return {\r\n        type: UPDATE_FIELD_ATTRIBUTE,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectWorker(payload) {\r\n    return {\r\n        type: SELECT_WORKER_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectWorkerSuccess(payload) {\r\n    return {\r\n        type: SELECT_WORKER_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function selectWorkerError(payload) {\r\n    return {\r\n        type: SELECT_WORKER_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\n/* DELETE BASE */\r\nexport function deleteWorker(payload) {\r\n    return {\r\n        type: DELETE_WORKER_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function deleteWorkerSuccess(payload) {\r\n    return {\r\n        type: DELETE_WORKER_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function deleteWorkerError(payload) {\r\n    return {\r\n        type: DELETE_WORKER_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getWorkersSuccess(payload) {\r\n    return {\r\n        type: GET_WORKERS_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getWorkersError(payload) {\r\n    return {\r\n        type: GET_WORKERS_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterWorkersInit(payload) {\r\n    return {\r\n        type: FILTER_WORKER_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterWorkersSuccess(payload) {\r\n    return {\r\n        type: FILTER_WORKER_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterWorkersError(payload) {\r\n    return {\r\n        type: FILTER_WORKER_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderWorkersInit(payload) {\r\n    return {\r\n        type: ORDER_WORKER_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderWorkersSuccess(payload) {\r\n    return {\r\n        type: ORDER_WORKER_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderWorkersError(payload) {\r\n    return {\r\n        type: ORDER_WORKER_ERROR,\r\n        payload,\r\n    };\r\n}\r\n","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { GET_WORKERS_API, PATH_API } from '../../Constants';\r\nimport { \r\n  GET_WORKERS,\r\n  SELECT_WORKER_INIT,\r\n  DELETE_WORKER_INIT,\r\n  UPDATE_WORKER_INIT,\r\n  ORDER_WORKER_INIT, \r\n  FILTER_WORKER_INIT\r\n} from './constants';\r\nimport { \r\n  selectWorkerSuccess,\r\n  getWorkersSuccess,\r\n  getWorkersError, \r\n  deleteWorkerSuccess,\r\n  deleteWorkerError,\r\n  updateWorkerSuccess,\r\n  updateWorkerError,\r\n  orderWorkersSuccess,\r\n  filterWorkersSuccess\r\n} from './actions';\r\n\r\nfunction* selectWorker(action) {\r\n  const { value } = action;\r\n\r\n  yield put(selectWorkerSuccess(value));\r\n  return;\r\n}\r\n\r\nfunction* getWorkers() {\r\n  const urlWorkers = `${ PATH_API }${GET_WORKERS_API}`;\r\n\r\n  const response = yield call(fetch, urlWorkers, {\r\n      method: 'GET',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    const successResponse = yield call([response, response.json]);\r\n\r\n    yield put(getWorkersSuccess(successResponse));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(getWorkersError(errorResponse));\r\n}\r\n\r\nfunction* removeWorker(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n\r\n  const urlWorkers = `${ PATH_API }${GET_WORKERS_API}/${id}`;\r\n\r\n  const response = yield call(fetch, urlWorkers, {\r\n      method: 'DELETE',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    value.message = \"Dirección eliminada exitosamente\"; \r\n    yield put(deleteWorkerSuccess(value));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(deleteWorkerError(errorResponse));\r\n}\r\n\r\nfunction* updateWorker(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n  \r\n  const workerToUpdate = { ...value };\r\n\r\n  value.message = \"Dirección creada exitosamente\"; \r\n  let workerId = id ? id : \"0\";\r\n  let urlWorkers = `${ PATH_API }${GET_WORKERS_API}`;\r\n\r\n  const getResponse = yield call(fetch, `${urlWorkers}/${workerId}`, {\r\n    method: 'GET'\r\n  });\r\n\r\n  const callBody = {\r\n    method: 'POST',\r\n    body: JSON.stringify(workerToUpdate)\r\n  }\r\n\r\n  if (getResponse.status >= 200 && getResponse.status < 300) {\r\n    value.message = \"Dirección actualizada exitosamente\"; \r\n    callBody.method = 'PUT';\r\n    urlWorkers = `${urlWorkers}/${id}`\r\n  }\r\n\r\n  const response = yield call(fetch, urlWorkers, {\r\n      ...callBody\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    yield put(updateWorkerSuccess(value));\r\n    return;\r\n  }\r\n  \r\n  const errorResponse = yield call([response, response.json]);\r\n  value.message = \"Hubo un problema creando los cambios\"; \r\n  yield put(updateWorkerError(errorResponse));\r\n}\r\n\r\nfunction* orderWorker(action) { \r\n  const { value: {column, items, sense} } = action;\r\n\r\n  items.sort((a,b) => {\r\n    if(a[column] < b[column]) {\r\n      return sense;\r\n    }\r\n    if(a[column] > b[column]) {\r\n      return -1*sense;\r\n    }\r\n    return 0;\r\n  })\r\n\r\n  const response = {\r\n    workers: items \r\n  }\r\n\r\n  yield put(orderWorkersSuccess(response));\r\n}\r\n\r\nfunction* filterWorker(action) { \r\n  const { value: {fieldValue, items} } = action;\r\n  \r\n  let filtered = items.filter(item => {\r\n    let itemFiltered = false;\r\n\r\n    Object.keys(item).map(key => {\r\n      const keyToFilter = item[key] && typeof item[key] !== 'object' ? item[key].toString().toLowerCase() : \"\"; \r\n      itemFiltered = itemFiltered || keyToFilter.includes(fieldValue);\r\n      return true;\r\n    })\r\n\r\n    return itemFiltered;\r\n  });\r\n\r\n  const response = {\r\n    workers: filtered\r\n  }\r\n\r\n  yield put(filterWorkersSuccess(response));\r\n}\r\n\r\nexport function* watchWorker() {\r\n  yield takeLatest(GET_WORKERS, getWorkers);\r\n  yield takeLatest(SELECT_WORKER_INIT, selectWorker);\r\n  yield takeLatest(DELETE_WORKER_INIT, removeWorker);\r\n  yield takeLatest(UPDATE_WORKER_INIT, updateWorker);\r\n  yield takeLatest(ORDER_WORKER_INIT, orderWorker);\r\n  yield takeLatest(FILTER_WORKER_INIT, filterWorker);\r\n}\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport \"./style.css\";\r\nimport ComponentWorker from './component';\r\n\r\nimport reducer from \"./reducer\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchWorker } from \"./saga\";\r\nimport { Provider } from 'react-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport CustomBreadcrumb from \"../../components/breadcrumb/breadcrumb\";\r\nimport { BREAD_PATH, } from './constants';\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    reducer\r\n});\r\n\r\nconst formStore = createStore(rootReducer);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(watchWorker);\r\n\r\nexport default class WorkerPage extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={formStore}>\r\n                <Provider store={store}>\r\n                    <Container className='main-wrapper attribute' >\r\n                        <CustomBreadcrumb route={BREAD_PATH} current=\"Workers\"/>\r\n                        <h1> Lista de Workers </h1>\r\n                        <ComponentWorker />\r\n                    </Container>\r\n                </Provider>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\n","import { createStructuredSelector } from 'reselect';\r\n\r\nexport const getStatus = (state) => state.status;\r\nexport const getSelectedStatu = (state) => state.selectedStatu;\r\nexport const getDeleteStatu = (state) => state.deleteSuccess;\r\nexport const getFormStatu = (state) => state.formStatu;\r\nexport const getTotalStatus = (state) => state.totalStatus;\r\n\r\nexport const attributeSelector = createStructuredSelector({\r\n    status: getStatus,\r\n    selectedStatu: getSelectedStatu,\r\n    deleteSuccess: getDeleteStatu,\r\n    formStatu: getFormStatu\r\n});","export const FILLER_TEXT = 'But I must';\r\nexport const GET_STATUS = '@status/GET_STATUS_INIT';\r\nexport const GET_STATUS_ERROR = '@status/GET_STATUS_ERROR';\r\nexport const GET_STATUS_SUCCESS = '@status/GET_STATUS_SUCCESS';\r\n\r\nexport const UPDATE_STATU_INIT = '@status/UPDATE_STATU_INIT';\r\nexport const UPDATE_STATU_ERROR = '@status/UPDATE_STATU_ERROR';\r\nexport const UPDATE_STATU_SUCCESS = '@status/UPDATE_STATU_SUCCESS';\r\nexport const CANCEL_STATU_INIT = '@status/CANCEL_STATU_INIT';\r\n\r\nexport const UPDATE_FIELD_ATTRIBUTE = '@status/UPDATE_FIELD_ATTRIBUTE';\r\n\r\nexport const SELECT_STATU_INIT = '@status/SELECT_STATU_INIT';\r\nexport const SELECT_STATU_SUCCESS = '@status/SELECT_STATU_SUCCESS';\r\nexport const SELECT_STATU_ERROR = '@status/SELECT_STATU_ERROR';\r\n\r\nexport const DELETE_STATU_INIT = '@status/DELETE_STATU_INIT';\r\nexport const DELETE_STATU_SUCCESS = '@status/DELETE_STATU_SUCCESS';\r\nexport const DELETE_STATU_ERROR = '@status/DELETE_STATU_ERROR';\r\n\r\nexport const FILTER_STATU_INIT = '@status/FILTER_STATU_INIT';\r\nexport const FILTER_STATU_SUCCESS = '@status/FILTER_STATU_SUCCESS';\r\nexport const FILTER_STATU_ERROR = '@status/FILTER_STATU_ERROR';\r\n\r\nexport const ORDER_STATU_INIT = '@status/ORDER_STATU_INIT';\r\nexport const ORDER_STATU_SUCCESS = '@status/ORDER_STATU_SUCCESS';\r\nexport const ORDER_STATU_ERROR = '@status/ORDER_STATU_ERROR';\r\n\r\n\r\nexport const getStatuButton = (handlerSafe) => {\r\n    return [\r\n        {\r\n            label: \"Nuevo Trabajador\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            onClick: handlerSafe\r\n        }\r\n    ]\r\n}\r\n\r\nexport const getStatuActions = (handlerSave, handlerClean, handlerRemove) => {\r\n    return [\r\n        {\r\n            label: \"Guardar Cambios\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"primary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerSave\r\n        },\r\n        {\r\n            label: \"Eliminar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"default\",\r\n            variant: \"outlined\",\r\n            onClick: handlerRemove\r\n        },\r\n        {\r\n            label: \"Cancelar\",\r\n            className: \"\",\r\n            action: false,\r\n            style: \"secondary\",\r\n            variant: \"outlined\",\r\n            onClick: handlerClean\r\n        },\r\n    ];\r\n}\r\n\r\nexport const BREAD_PATH = [\r\n    { path: \"/\", label: \"Inicio\" },\r\n]\r\n\r\nexport const STATU_FORMS = [\r\n    {\r\n        label: \"Identificación\",\r\n        name: \"id\",\r\n        placeholder: \"Identificación\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: true\r\n    },\r\n    {\r\n        label: \"Descripción\",\r\n        name: \"description\",\r\n        placeholder: \"Descripción\",\r\n        hint: \"\",\r\n        type: \"text\",\r\n        typeForm:\"text\",\r\n        value: false,\r\n        options: [],\r\n        disable: false\r\n    }\r\n]\r\n\r\nexport const STATU_HEADERS = [\r\n    {label: \"id\", column: \"id\"}, \r\n    {label: \"Descripción\", column: \"description\"},\r\n    {label: \"Fecha Creación\", column: \"createdDate\"},\r\n    {label: \"Fecha Actualización\", column: \"updatedDate\"},\r\n];\r\nexport const STATU_LIST = [\r\n    [\"12003\", \"Direccción beta\", 1, 0],\r\n    [\"12004\", \"Zona alfa\", 0, 1],\r\n    [\"12005\", \"Gamma\", 0, 1]\r\n]\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomForm from \"../../components/customform/customform\";\r\nimport CustomTable from \"../../components/table/table\";\r\nimport { getStatus, getSelectedStatu, getDeleteStatu, getFormStatu, getTotalStatus } from \"./selectors\";\r\nimport { Spinner, Alert } from 'react-bootstrap';\r\nimport { \r\n  getStatuActions,\r\n  getStatuButton,\r\n  GET_STATUS,\r\n  SELECT_STATU_INIT, \r\n  STATU_FORMS, \r\n  DELETE_STATU_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_STATU_INIT,\r\n  CANCEL_STATU_INIT,\r\n  ORDER_STATU_INIT,\r\n  FILTER_STATU_INIT,\r\n} from './constants'\r\n\r\n\r\nclass ComponentStatu extends Component {\r\n\r\n  componentWillMount () {\r\n    const { getStatus } = this.props;\r\n    getStatus();\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    const { getStatus } = nextProps;\r\n\r\n    if (nextProps.deleteStatu && this.props.deleteStatu !== nextProps.deleteStatu) {\r\n      getStatus();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      statuHeaders, \r\n      status,\r\n      selectStatu,\r\n      selectedStatu,\r\n      removeStatu,\r\n      deleteStatu,\r\n      updateStatus,\r\n      updatedStatu,\r\n      updateStatu,\r\n      cancelStatu,\r\n      orderStatu,\r\n      filterStatu,\r\n      totalStatus\r\n  } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        { deleteStatu ?\r\n          <Alert  variant=\"success\">\r\n            {deleteStatu.message}\r\n          </Alert>\r\n          : ''\r\n        }\r\n\r\n        {!selectedStatu ? \r\n          <div className='statu-list_wrapper'>\r\n          { status && !status.emprty ? \r\n            <CustomTable \r\n              onSelectRow={selectStatu} \r\n              className=\"status-table\" \r\n              items={status}\r\n              totalItems={totalStatus}\r\n              orderTable={orderStatu}\r\n              headers={statuHeaders}\r\n              filterTable = {filterStatu}\r\n              paginator = {true}\r\n              buttons={getStatuButton(() => selectStatu({}))} \r\n            /> :\r\n            <Spinner className=\"spinner-wrapper\" animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          }\r\n          \r\n        </div> :  \r\n        <div className='statu-form_wrapper'>\r\n          <CustomForm \r\n            formName=\"customStatu\" \r\n            values={ selectedStatu } \r\n            items={ STATU_FORMS } \r\n            updateAction = { updateStatus }\r\n            buttons={\r\n              getStatuActions(\r\n                () => updateStatu(updatedStatu), \r\n                () => cancelStatu(), \r\n                () => removeStatu(selectedStatu)\r\n            )} \r\n            />\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    statuHeaders: state.statuHeaders,\r\n    status: getStatus(state),\r\n    selectedStatu: getSelectedStatu(state),\r\n    deleteStatu: getDeleteStatu(state),\r\n    updatedStatu: getFormStatu(state),\r\n    totalStatus: getTotalStatus(state),\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return { \r\n    getStatus: () => dispatch({ type: GET_STATUS, value: 1 }),\r\n    updateStatus: (value) => dispatch({ type: UPDATE_FIELD_ATTRIBUTE, value }),\r\n    selectStatu: (statu) => dispatch({ type: SELECT_STATU_INIT, value: statu }),\r\n    removeStatu: (statu) => dispatch({ type: DELETE_STATU_INIT, value: statu }),\r\n    updateStatu: (statu) => dispatch({ type: UPDATE_STATU_INIT, value: statu }),\r\n    cancelStatu: () => dispatch({ type: CANCEL_STATU_INIT}),\r\n    orderStatu: (prop) => dispatch({ type: ORDER_STATU_INIT, value: prop }),\r\n    filterStatu: (prop) => dispatch({ type: FILTER_STATU_INIT, value: prop }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ComponentStatu);","import { \r\n  SELECT_STATU_SUCCESS,\r\n  SELECT_STATU_INIT,\r\n  UPDATE_FIELD_ATTRIBUTE,\r\n  UPDATE_STATU_SUCCESS,\r\n  UPDATE_STATU_ERROR,\r\n  CANCEL_STATU_INIT,\r\n  STATU_LIST,\r\n  STATU_HEADERS,\r\n  GET_STATUS_SUCCESS,\r\n  DELETE_STATU_SUCCESS,\r\n  DELETE_STATU_ERROR,\r\n  ORDER_STATU_SUCCESS,\r\n  FILTER_STATU_SUCCESS\r\n} from './constants';\r\n  \r\n  export const initialState = {\r\n    status: STATU_LIST,\r\n    totalStatus: [],\r\n    statuHeaders: STATU_HEADERS,\r\n    selectedStatu: false, \r\n    deleteSuccess: false,\r\n    formStatu: {}\r\n  };\r\n  \r\n  const reducer = (state = initialState, action) => {\r\n    const newState = { ...state };\r\n    const { payload } = action;\r\n    const { statuses } = payload ? payload : { statuses: false };\r\n\r\n    switch (action.type) {\r\n      case GET_STATUS_SUCCESS:\r\n          newState.status = statuses;\r\n          newState.totalStatus = statuses;\r\n          \r\n          return {\r\n            ...newState\r\n          };\r\n      case SELECT_STATU_INIT:    \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case SELECT_STATU_SUCCESS:  \r\n        newState.selectedStatu = payload;   \r\n        newState.deleteSuccess = false;  \r\n        newState.formStatu = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n        \r\n      case DELETE_STATU_SUCCESS: \r\n        newState.selectedStatu = false; \r\n        newState.deleteSuccess = payload; \r\n        return {\r\n          ...newState\r\n        };\r\n\r\n      case UPDATE_FIELD_ATTRIBUTE:\r\n        const { value: { fieldName, fieldValue } } = action;\r\n        let newFormObject = {...newState.selectedStatu};\r\n        newFormObject[fieldName] = fieldValue;\r\n        newState.deleteSuccess = false;\r\n        newState.formStatu = newFormObject;\r\n        newState.selectedStatu = newFormObject;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n      case UPDATE_STATU_SUCCESS:\r\n        newState.deleteSuccess = payload;\r\n        newState.formStatu = {};\r\n        newState.selectedStatu = false;\r\n\r\n        return {\r\n          ...newState\r\n        };\r\n\r\n        case UPDATE_STATU_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formStatu = {};\r\n          newState.selectedStatu = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        \r\n        case DELETE_STATU_ERROR:\r\n          newState.deleteSuccess = payload;\r\n          newState.formStatu = {};\r\n          newState.selectedStatu = false;\r\n    \r\n          return {\r\n            ...newState\r\n          };  \r\n\r\n        case CANCEL_STATU_INIT:\r\n          newState.deleteSuccess = false;\r\n          newState.formStatu = {};\r\n          newState.selectedStatu = false;\r\n  \r\n          return {\r\n            ...newState\r\n          };\r\n        case ORDER_STATU_SUCCESS:\r\n            newState.deleteSuccess = false;\r\n            newState.formStatu = {};\r\n            newState.selectedStatu = false;\r\n            newState.status = statuses;\r\n            return {\r\n              ...newState\r\n            };\r\n        case FILTER_STATU_SUCCESS:\r\n              newState.deleteSuccess = false;\r\n              newState.formStatu = {};\r\n              newState.selectedStatu = false;\r\n              newState.status = statuses;\r\n              return {\r\n                ...newState\r\n              };            \r\n      default:\r\n        return {\r\n          ...newState\r\n        };\r\n    }\r\n  };\r\n  \r\n  export default reducer;\r\n  ","import {\r\n    UPDATE_FIELD_ATTRIBUTE,\r\n    UPDATE_STATU_INIT,\r\n    UPDATE_STATU_SUCCESS,\r\n    UPDATE_STATU_ERROR,\r\n    GET_STATUS_SUCCESS,\r\n    GET_STATUS_ERROR,\r\n    SELECT_STATU_INIT,\r\n    SELECT_STATU_SUCCESS,\r\n    SELECT_STATU_ERROR,\r\n    DELETE_STATU_INIT,\r\n    DELETE_STATU_SUCCESS,\r\n    DELETE_STATU_ERROR,\r\n    FILTER_STATU_INIT,\r\n    FILTER_STATU_SUCCESS,\r\n    FILTER_STATU_ERROR,\r\n    ORDER_STATU_ERROR,\r\n    ORDER_STATU_SUCCESS,\r\n    ORDER_STATU_INIT\r\n} from './constants'\r\n\r\nexport function updateStatu (payload) {\r\n    return {\r\n        type: UPDATE_STATU_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateStatuSuccess (payload) {\r\n    return {\r\n        type: UPDATE_STATU_SUCCESS,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateStatuError (payload) {\r\n    return {\r\n        type: UPDATE_STATU_ERROR,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function updateStatus (payload) {\r\n    return {\r\n        type: UPDATE_FIELD_ATTRIBUTE,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectStatu(payload) {\r\n    return {\r\n        type: SELECT_STATU_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function selectStatuSuccess(payload) {\r\n    return {\r\n        type: SELECT_STATU_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function selectStatuError(payload) {\r\n    return {\r\n        type: SELECT_STATU_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\n/* DELETE BASE */\r\nexport function deleteStatu(payload) {\r\n    return {\r\n        type: DELETE_STATU_INIT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport function deleteStatuSuccess(payload) {\r\n    return {\r\n        type: DELETE_STATU_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function deleteStatuError(payload) {\r\n    return {\r\n        type: DELETE_STATU_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getStatusSuccess(payload) {\r\n    return {\r\n        type: GET_STATUS_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function getStatusError(payload) {\r\n    return {\r\n        type: GET_STATUS_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterStatusInit(payload) {\r\n    return {\r\n        type: FILTER_STATU_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterStatusSuccess(payload) {\r\n    return {\r\n        type: FILTER_STATU_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function filterStatusError(payload) {\r\n    return {\r\n        type: FILTER_STATU_ERROR,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderStatusInit(payload) {\r\n    return {\r\n        type: ORDER_STATU_INIT,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderStatusSuccess(payload) {\r\n    return {\r\n        type: ORDER_STATU_SUCCESS,\r\n        payload,\r\n    };\r\n}\r\n\r\nexport function orderStatusError(payload) {\r\n    return {\r\n        type: ORDER_STATU_ERROR,\r\n        payload,\r\n    };\r\n}\r\n","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { GET_STATUS_API, PATH_API } from '../../Constants';\r\nimport { \r\n  GET_STATUS,\r\n  SELECT_STATU_INIT,\r\n  DELETE_STATU_INIT,\r\n  UPDATE_STATU_INIT,\r\n  ORDER_STATU_INIT, \r\n  FILTER_STATU_INIT\r\n} from './constants';\r\nimport { \r\n  selectStatuSuccess,\r\n  getStatusSuccess,\r\n  getStatusError, \r\n  deleteStatuSuccess,\r\n  deleteStatuError,\r\n  updateStatuSuccess,\r\n  updateStatuError,\r\n  orderStatusSuccess,\r\n  filterStatusSuccess\r\n} from './actions';\r\n\r\nfunction* selectStatu(action) {\r\n  const { value } = action;\r\n\r\n  yield put(selectStatuSuccess(value));\r\n  return;\r\n}\r\n\r\nfunction* getStatus() {\r\n  const urlStatus = `${ PATH_API }${GET_STATUS_API}`;\r\n\r\n  const response = yield call(fetch, urlStatus, {\r\n      method: 'GET',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    const successResponse = yield call([response, response.json]);\r\n    console.log('successResponse', successResponse);\r\n    yield put(getStatusSuccess(successResponse));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(getStatusError(errorResponse));\r\n}\r\n\r\nfunction* removeStatu(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n\r\n  const urlStatus = `${ PATH_API }${GET_STATUS_API}/${id}`;\r\n\r\n  const response = yield call(fetch, urlStatus, {\r\n      method: 'DELETE',\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    value.message = \"Dirección eliminada exitosamente\"; \r\n    yield put(deleteStatuSuccess(value));\r\n    return;\r\n  }\r\n\r\n  const errorResponse = yield call([response, response.json]);\r\n  yield put(deleteStatuError(errorResponse));\r\n}\r\n\r\nfunction* updateStatu(action) {\r\n  const { value } = action;\r\n  const { id } = value ? value : {};\r\n  \r\n  const statuToUpdate = { ...value };\r\n\r\n  value.message = \"Dirección creada exitosamente\"; \r\n  let statuId = id ? id : \"0\";\r\n  let urlStatus = `${ PATH_API }${GET_STATUS_API}`;\r\n\r\n  const getResponse = yield call(fetch, `${urlStatus}/${statuId}`, {\r\n    method: 'GET'\r\n  });\r\n\r\n  const callBody = {\r\n    method: 'POST',\r\n    body: JSON.stringify(statuToUpdate)\r\n  }\r\n\r\n  if (getResponse.status >= 200 && getResponse.status < 300) {\r\n    value.message = \"Dirección actualizada exitosamente\"; \r\n    callBody.method = 'PUT';\r\n    urlStatus = `${urlStatus}/${id}`\r\n  }\r\n\r\n  const response = yield call(fetch, urlStatus, {\r\n      ...callBody\r\n  });\r\n\r\n  if (response.status >= 200 && response.status < 300) {\r\n    yield put(updateStatuSuccess(value));\r\n    return;\r\n  }\r\n  \r\n  const errorResponse = yield call([response, response.json]);\r\n  value.message = \"Hubo un problema creando los cambios\"; \r\n  yield put(updateStatuError(errorResponse));\r\n}\r\n\r\nfunction* orderStatu(action) { \r\n  const { value: {column, items, sense} } = action;\r\n\r\n  items.sort((a,b) => {\r\n    if(a[column] < b[column]) {\r\n      return sense;\r\n    }\r\n    if(a[column] > b[column]) {\r\n      return -1*sense;\r\n    }\r\n    return 0;\r\n  })\r\n\r\n  const response = {\r\n    status: items \r\n  }\r\n\r\n  yield put(orderStatusSuccess(response));\r\n}\r\n\r\nfunction* filterStatu(action) { \r\n  const { value: {fieldValue, items} } = action;\r\n  \r\n  let filtered = items.filter(item => {\r\n    let itemFiltered = false;\r\n\r\n    Object.keys(item).map(key => {\r\n      const keyToFilter = item[key] && typeof item[key] !== 'object' ? item[key].toString().toLowerCase() : \"\"; \r\n      itemFiltered = itemFiltered || keyToFilter.includes(fieldValue);\r\n      return true;\r\n    })\r\n\r\n    return itemFiltered;\r\n  });\r\n\r\n  const response = {\r\n    status: filtered\r\n  }\r\n\r\n  yield put(filterStatusSuccess(response));\r\n}\r\n\r\nexport function* watchStatu() {\r\n  yield takeLatest(GET_STATUS, getStatus);\r\n  yield takeLatest(SELECT_STATU_INIT, selectStatu);\r\n  yield takeLatest(DELETE_STATU_INIT, removeStatu);\r\n  yield takeLatest(UPDATE_STATU_INIT, updateStatu);\r\n  yield takeLatest(ORDER_STATU_INIT, orderStatu);\r\n  yield takeLatest(FILTER_STATU_INIT, filterStatu);\r\n}\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport \"./style.css\";\r\nimport ComponentStatu from './component';\r\n\r\nimport reducer from \"./reducer\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchStatu } from \"./saga\";\r\nimport { Provider } from 'react-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport CustomBreadcrumb from \"../../components/breadcrumb/breadcrumb\";\r\nimport { BREAD_PATH, } from './constants';\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    reducer\r\n});\r\n\r\nconst formStore = createStore(rootReducer);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(watchStatu);\r\n\r\nexport default class StatuPage extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={formStore}>\r\n                <Provider store={store}>\r\n                    <Container className='main-wrapper status' >\r\n                        <CustomBreadcrumb route={BREAD_PATH} current=\"Status\"/>\r\n                        <h1> Lista de Status </h1>\r\n                        <ComponentStatu />\r\n                    </Container>\r\n                </Provider>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport \"./navbar.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport User from \"../../navegation/sector/index\";\r\nimport NoMatch from \"../../navegation/nomatch\";\r\nimport About from  \"../../navegation/about\";\r\nimport SideBar from \"../sidebar/sidebar\";\r\nimport Home from \"../../navegation/home\";\r\nimport Profile from \"../../navegation/profile\";\r\nimport Search from \"../../navegation/search\";\r\nimport BasesPage from \"../../navegation/bases\";\r\nimport AddressPage from \"../../navegation/addresses\";\r\nimport SectorsPage from \"../../navegation/sector\";\r\nimport ZonePage from \"../../navegation/zones\";\r\nimport TypePage from \"../../navegation/types\";\r\nimport LocationPage from \"../../navegation/locations\";\r\nimport AttributePage from \"../../navegation/attributes\";\r\nimport WorkerPage from \"../../navegation/workers\";\r\nimport StatuPage from \"../../navegation/status\";\r\n\r\nclass CustomNavBar extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n            <SideBar></SideBar>\r\n\r\n            <Switch>\r\n              <Route exact path=\"/\" component={About} />\r\n              <Route path=\"/user\" component={User} />\r\n              <Route path=\"/home\" component={Home} />\r\n              <Route path=\"/profile\" component={Profile} />\r\n              <Route path=\"/sectors\" component={SectorsPage} />\r\n              <Route path=\"/search\" component={Search} />\r\n              <Route path=\"/bases\" component={BasesPage} />\r\n              <Route path=\"/addresses\" component={AddressPage} />\r\n              <Route path=\"/zones\" component={ZonePage} />\r\n              <Route path=\"/types\" component={TypePage} />\r\n              <Route path=\"/locations\" component={LocationPage} />\r\n              <Route path=\"/attributes\" component={AttributePage} />\r\n              <Route path=\"/workers\" component={WorkerPage} />\r\n              <Route path=\"/status\" component={StatuPage} />\r\n\r\n              <Route component={NoMatch} />\r\n            </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomNavBar;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport \"./home.css\";\r\nimport { ITEMS } from \"./constants\";\r\nimport CustomCard from '../../components/customcard/customcard';\r\nimport { useAuth0 } from \"../../controllers/react-auth0-spa\";\r\nimport CustomNavBar from '../../components/navbar/navbar';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport auth from '../../controllers/session';\r\n\r\nconst Home = () => {\r\n    const { isAuthenticated, loginWithRedirect, loading  } = useAuth0();\r\n\r\n    if(!isAuthenticated) {\r\n        auth.clearSession();\r\n    }\r\n\r\n    if (loading ) {\r\n        return <Spinner className=\"spinner-wrapper\" animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>;\r\n    }\r\n    return (\r\n        <div>\r\n        {!isAuthenticated && (\r\n            <Container className='main-wrapper home'>\r\n                <div className='login-wrapper'> \r\n                    <CustomCard items={ITEMS} onItemClick={loginWithRedirect}/>\r\n                </div>\r\n            </Container>\r\n        )}\r\n\r\n        {isAuthenticated ?\r\n            <CustomNavBar />\r\n            : false\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './static/css/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { AUTH0_CLIENT_ID, AUTH0_DOMAIN } from './Constants'\nimport { Auth0Provider } from \"./controllers/react-auth0-spa\";\nimport history from \"./controllers/history\";\nimport Home from './navegation/home';\n\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={AUTH0_DOMAIN}\n    client_id={AUTH0_CLIENT_ID}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <Home />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}